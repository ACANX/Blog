<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>将JAR包发布到Maven中央仓库</title>
      <link href="/Blog/2021/03/20/%E5%B0%86JAR%E5%8C%85%E5%8F%91%E5%B8%83%E5%88%B0Maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/"/>
      <url>/Blog/2021/03/20/%E5%B0%86JAR%E5%8C%85%E5%8F%91%E5%B8%83%E5%88%B0Maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="最新操作教程"><a href="#最新操作教程" class="headerlink" title="最新操作教程"></a>最新操作教程</h1><ul><li><a href="https://blog.csdn.net/qq_41813208/article/details/112370194">发布jar包到maven中央仓库，完整记录，规避一些不必要的坑</a></li><li><a href="https://oss.sonatype.org/">https://oss.sonatype.org/</a></li><li><a href="https://issues.sonatype.org/">https://issues.sonatype.org/</a></li><li><a href=""></a></li></ul><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h4 id="1-错误提示：Cannot-run-program-“gpg”-CreateProcess-error-2"><a href="#1-错误提示：Cannot-run-program-“gpg”-CreateProcess-error-2" class="headerlink" title="1.错误提示：Cannot run program “gpg”: CreateProcess error=2"></a>1.错误提示：Cannot run program “gpg”: CreateProcess error=2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:<span class="hljs-number">1.6</span>:sign (sign-artifacts) on project dubbo-spring-boot-starter: Unable to execute gpg command: Error <span class="hljs-keyword">while</span> executing process. Cannot run program <span class="hljs-string">&quot;gpg&quot;</span>: CreateProcess error=<span class="hljs-number">2</span>, 系统找不到指定的文件。 -&gt; [Help <span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p>解决办法：   检查windows控制台中能否执行<strong>gpg –version</strong> 命令，如不能，需检查操作系统的环境变量<strong>Path</strong>的配置是否存在问题，GnuPG的安装路径下的bin目录是否已添加到Path变量中，若未添加，需手动添加进去。</p><p><strong>影响</strong> 如果未配置成功，在发布时会无法执行签名校验，后续的源码包、文档包均无法发布上传到sonatype的仓库中，会影响jar包发布</p><h3 id="2-Maven执行install时GPG-Passphrase的解决办法"><a href="#2-Maven执行install时GPG-Passphrase的解决办法" class="headerlink" title="2.Maven执行install时GPG Passphrase的解决办法"></a>2.Maven执行install时GPG Passphrase的解决办法</h3><p>mvn install后加上参数**-Dgpg.skip**，例如：mvn install <strong>-Dgpg.skip</strong><br>另外参数-DskipTests可以跳过test阶段。</p><h2 id="仍然存在的问题"><a href="#仍然存在的问题" class="headerlink" title="仍然存在的问题"></a>仍然存在的问题</h2><ul><li>添加项目logo到<a href="https://mvnrepository.com/%E7%BD%91%E7%AB%99([how-to-create-a-logo-for-mvnrepository-artifact](https://stackoverflow.com/questions/40197177/how-to-create-a-logo-for-mvnrepository-artifact)">https://mvnrepository.com/网站([how-to-create-a-logo-for-mvnrepository-artifact](https://stackoverflow.com/questions/40197177/how-to-create-a-logo-for-mvnrepository-artifact)</a>)</li><li>如何避免进入<a href="https://mvnrepository.com/%E7%BD%91%E7%AB%99%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E4%BA%BA%E5%B7%A5%E9%AA%8C%E8%AF%81%E7%A0%81%E6%A0%A1%E9%AA%8C%EF%BC%88%E5%AE%98%E6%96%B9%E5%87%BA%E7%9A%84%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%90%8E%E4%BB%BB%E7%84%B6%E9%9C%80%E8%A6%81%E9%AA%8C%E8%AF%81%EF%BC%8C%E8%BF%98%E6%98%AF%E9%9C%80%E8%A6%81%E7%82%B9%E5%87%BB%E9%AA%8C%E8%AF%81%EF%BC%89">https://mvnrepository.com/网站需要进行人工验证码校验（官方出的插件安装后任然需要验证，还是需要点击验证）</a></li><li></li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></li><li><a href="http://www.ruanyifeng.com/blog/2013/07/gpg.html">GPG入门教程</a></li><li><a href="https://www.gpg4win.org/thanks-for-download.html">GPG下载</a></li><li><a href="https://blog.csdn.net/huangjinjin520/article/details/78915789">如何把jar发布到中央仓库</a></li><li><a href="https://blog.csdn.net/qq_36838191/article/details/81027586">如何发布jar包到maven中央仓库详细教程</a></li><li><a href="https://blog.csdn.net/alinyua/article/details/83687250">使用gpg插件发布jar包到Maven中央仓库 完整实践</a></li><li><a href="https://search.maven.org/search?q=a:acanx-utils">https://search.maven.org/</a></li><li><a href="https://repo1.maven.org/maven2/com/acanx/acanx-utils/">https://repo1.maven.org/maven2/com/acanx/acanx-utils/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
            <tag> Sonatype </tag>
            
            <tag> JAR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章汇总</title>
      <link href="/Blog/2021/03/14/%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/"/>
      <url>/Blog/2021/03/14/%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机科学与技术、软件工程基础知识"><a href="#计算机科学与技术、软件工程基础知识" class="headerlink" title="计算机科学与技术、软件工程基础知识"></a>计算机科学与技术、软件工程基础知识</h1><ul><li>1.<a href="https://hexo.io/docs/deployment.html">计算机导论</a></li><li>2.<a href="https://hexo.io/docs/deployment.html">计算机组成原理</a></li><li>3.<a href="https://hexo.io/docs/deployment.html">操作系统</a></li><li>4.<a href="https://hexo.io/docs/deployment.html">计算机网络</a></li><li>5.<a href="https://hexo.io/docs/deployment.html">数据结构</a></li><li>6.<a href="https://hexo.io/docs/deployment.html">软件工程</a></li><li>7.<a href="https://hexo.io/docs/deployment.html">大数据</a></li><li>8.<a href="https://hexo.io/docs/deployment.html">人工智能</a></li></ul><h1 id="Java知识体系"><a href="#Java知识体系" class="headerlink" title="Java知识体系"></a>Java知识体系</h1><h2 id="Java基础知识"><a href="#Java基础知识" class="headerlink" title="Java基础知识"></a>Java基础知识</h2><ul><li>0001.<a href="https://hexo.io/docs/deployment.html">Java简史</a></li><li>0002.<a href="https://hexo.io/docs/deployment.html">Java特性</a></li><li>0003.<a href="https://hexo.io/docs/deployment.html">Java快速开始</a></li><li>0004.<a href="https://hexo.io/docs/deployment.html">Java基本数据类型</a></li><li>0005.<a href="https://hexo.io/docs/deployment.html">Java运算符</a></li><li>0006.<a href="https://hexo.io/docs/deployment.html">Java基础语法</a></li><li>0007.<a href="https://hexo.io/docs/deployment.html">Java关键字</a></li><li>0008.<a href="https://hexo.io/docs/deployment.html">Java类</a></li><li>0009.<a href="https://hexo.io/docs/deployment.html">Java面向对象</a></li><li>0010.<a href="https://hexo.io/docs/deployment.html">Java接口</a></li><li>0011.<a href="https://hexo.io/docs/deployment.html">Java继承</a></li><li>0012.<a href="https://hexo.io/docs/deployment.html">Java抽象类</a></li><li>0013.<a href="https://hexo.io/docs/deployment.html">Java实现类及多态</a></li><li>0014.<a href="https://hexo.io/docs/deployment.html">Java内部类</a></li></ul><h2 id="Java、JDK核心API及源码"><a href="#Java、JDK核心API及源码" class="headerlink" title="Java、JDK核心API及源码"></a>Java、JDK核心API及源码</h2><ul><li>0001.<a href="https://hexo.io/docs/deployment.html">String</a></li><li>0002.<a href="https://hexo.io/docs/deployment.html">集合</a></li><li>0003.<a href="https://hexo.io/docs/deployment.html">泛型</a></li><li>0003.<a href="https://hexo.io/docs/deployment.html">反射</a></li><li>0004.<a href="https://hexo.io/docs/deployment.html">JUC</a></li><li>0005.<a href="https://hexo.io/docs/deployment.html">Java锁</a></li><li>0006.<a href="https://hexo.io/docs/deployment.html">Java JDBC</a></li></ul><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><ul><li>0001.<a href="https://hexo.io/docs/deployment.html">JVM运行时内存模型</a></li><li>0002.<a href="https://hexo.io/docs/deployment.html">JVM垃圾收集</a></li><li>0003.<a href="https://hexo.io/docs/deployment.html">Java类加载执行机制</a></li></ul><h2 id="Java生态相关"><a href="#Java生态相关" class="headerlink" title="Java生态相关"></a>Java生态相关</h2><ul><li>1.<a href="https://hexo.io/docs/deployment.html">Spring</a></li><li>2.<a href="https://hexo.io/docs/deployment.html">SpringBoot</a></li><li>3.<a href="https://hexo.io/docs/deployment.html">SpringCloud</a></li><li>4.<a href="https://hexo.io/docs/deployment.html">Dubbo</a></li><li>5.<a href="https://hexo.io/docs/deployment.html">Netty</a></li><li>6.<a href="https://hexo.io/docs/deployment.html">Mybatis</a></li><li>7.<a href="https://hexo.io/docs/deployment.html">Hibernate</a></li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>小车正穿行在洛基山脉蜿蜒曲折的盘山公路上，克里朵托夫里维静静地看着窗外，发现车子每当行驶到无路的关头，路边都会出现一块交通指示牌：“前方转弯”或写着“注意急转弯”。而转过每一道弯道之后前方照例又是一片柳暗花明、豁然开朗。山路弯弯、峰回路转，“前方转弯”几个大字一次次冲击着他的眼球，也渐渐敲醒了他的心扉。原来不是路已到了尽头，而是该转弯了……路在脚下，更在心中，心随路转，心路常宽。学会转弯也是人生的智慧，因为挫折往往是转折，危机同时是转机。</p><h3 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h3><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 文章 </tag>
            
            <tag> 汇总 </tag>
            
            <tag> 博客 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之23种设计模式深入理解</title>
      <link href="/Blog/2019/11/25/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/"/>
      <url>/Blog/2019/11/25/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式（Design-Pattern）"><a href="#设计模式（Design-Pattern）" class="headerlink" title="设计模式（Design Pattern）"></a>设计模式（Design Pattern）</h1><p>设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样。项目中合理的运用设计模式可以完美的解决很多问题，每种模式在现在中都有相应的原理来与之对应，每一个模式描述了一个在我们周围不断重复发生的问题，以及该问题的核心解决方案，这也是它能被广泛应用的原因。</p><!--  - 本章系Java之美[从菜鸟到高手演变]系列之设计模式，我们会以理论与实践相结合的方式来进行本章的学习，希望广大程序爱好者，学好设计模式，做一个优秀的软件工程师！--><h1 id="一、设计模式的分类"><a href="#一、设计模式的分类" class="headerlink" title="一、设计模式的分类"></a>一、设计模式的分类</h1><ul><li>总体来说设计模式分为三大类：</li></ul><h2 id="创建型模式，"><a href="#创建型模式，" class="headerlink" title="创建型模式，"></a>创建型模式，</h2><ul><li>共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</li></ul><h2 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a>结构型模式</h2><ul><li>共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</li></ul><h2 id="行为型模式"><a href="#行为型模式" class="headerlink" title="行为型模式"></a>行为型模式</h2><ul><li>共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</li></ul><h3 id="其他模式"><a href="#其他模式" class="headerlink" title="其他模式"></a>其他模式</h3><ul><li>其实还有两类：并发型模式和线程池模式。用一个图片来整体描述一下：<br><img src="/Blog/static/image/20191125/RelationshipBetweenDesignPattern.jpg" alt="设计模式之间的关系"></li></ul><!--  http://www.itmayun.com/upload_files/files/1/subject/995726589692643/1.jpg  --><h1 id="二、设计模式的六大原则"><a href="#二、设计模式的六大原则" class="headerlink" title="二、设计模式的六大原则"></a>二、设计模式的六大原则</h1><h2 id="1、开闭原则（Open-Close-Principle）"><a href="#1、开闭原则（Open-Close-Principle）" class="headerlink" title="1、开闭原则（Open Close Principle）"></a>1、开闭原则（Open Close Principle）</h2><ul><li>开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。</li></ul><h2 id="2、里氏代换原则（Liskov-Substitution-Principle）"><a href="#2、里氏代换原则（Liskov-Substitution-Principle）" class="headerlink" title="2、里氏代换原则（Liskov Substitution Principle）"></a>2、里氏代换原则（Liskov Substitution Principle）</h2><ul><li>里氏代换原则(Liskov Substitution Principle LSP)面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。 LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</li></ul><h2 id="3、依赖倒转原则（Dependence-Inversion-Principle）"><a href="#3、依赖倒转原则（Dependence-Inversion-Principle）" class="headerlink" title="3、依赖倒转原则（Dependence Inversion Principle）"></a>3、依赖倒转原则（Dependence Inversion Principle）</h2><ul><li>这个是开闭原则的基础，具体内容：真对接口编程，依赖于抽象而不依赖于具体。</li></ul><h2 id="4、接口隔离原则（Interface-Segregation-Principle）"><a href="#4、接口隔离原则（Interface-Segregation-Principle）" class="headerlink" title="4、接口隔离原则（Interface Segregation Principle）"></a>4、接口隔离原则（Interface Segregation Principle）</h2><ul><li>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。</li></ul><h2 id="5、迪米特法则（最少知道原则）（Demeter-Principle）"><a href="#5、迪米特法则（最少知道原则）（Demeter-Principle）" class="headerlink" title="5、迪米特法则（最少知道原则）（Demeter Principle）"></a>5、迪米特法则（最少知道原则）（Demeter Principle）</h2><ul><li>最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。</li></ul><h2 id="6、合成复用原则（Composite-Reuse-Principle）"><a href="#6、合成复用原则（Composite-Reuse-Principle）" class="headerlink" title="6、合成复用原则（Composite Reuse Principle）"></a>6、合成复用原则（Composite Reuse Principle）</h2><ul><li>原则是尽量使用合成/聚合的方式，而不是使用继承。</li></ul><h1 id="模式分类Demo源码"><a href="#模式分类Demo源码" class="headerlink" title="模式分类Demo源码"></a>模式分类Demo源码</h1><ul><li>参考：<a href="http://www.cnblogs.com/foryang/p/5849402.html">http://www.cnblogs.com/foryang/p/5849402.html</a></li><li>以下是学习过程中查询到的资料,比较容易理解(毕竟站在巨人的肩膀上…)</li></ul><h2 id="创建型"><a href="#创建型" class="headerlink" title="创建型"></a>创建型</h2><ul><li>抽象工厂模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/03/28/2418836.html">http://www.cnblogs.com/java-my-life/archive/2012/03/28/2418836.html</a></li><li>工厂方法 <a href="http://www.cnblogs.com/java-my-life/archive/2012/03/25/2416227.html">http://www.cnblogs.com/java-my-life/archive/2012/03/25/2416227.html</a></li><li>建造者模式  <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/07/2433939.html">http://www.cnblogs.com/java-my-life/archive/2012/04/07/2433939.html</a></li><li>原型模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/11/2439387.html">http://www.cnblogs.com/java-my-life/archive/2012/04/11/2439387.html</a></li><li>单态模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/03/31/2425631.html">http://www.cnblogs.com/java-my-life/archive/2012/03/31/2425631.html</a></li></ul><h2 id="结构型"><a href="#结构型" class="headerlink" title="结构型"></a>结构型</h2><ul><li>适配器模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/13/2442795.html">http://www.cnblogs.com/java-my-life/archive/2012/04/13/2442795.html</a></li><li>桥接模式 <a href="http://blog.csdn.net/jason0539/article/details/22568865">http://blog.csdn.net/jason0539/article/details/22568865</a></li><li>组合模式 <a href="http://blog.csdn.net/jason0539/article/details/22642281">http://blog.csdn.net/jason0539/article/details/22642281</a></li><li>外观模式 <a href="http://blog.csdn.net/jason0539/article/details/22775311">http://blog.csdn.net/jason0539/article/details/22775311</a></li><li>装饰者模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/20/2455726.html">http://www.cnblogs.com/java-my-life/archive/2012/04/20/2455726.html</a></li><li>享元模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/26/2468499.html">http://www.cnblogs.com/java-my-life/archive/2012/04/26/2468499.html</a></li><li>代理模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/04/23/2466712.html">http://www.cnblogs.com/java-my-life/archive/2012/04/23/2466712.html</a></li></ul><h2 id="行为型"><a href="#行为型" class="headerlink" title="行为型"></a>行为型</h2><ul><li>责任链模式 <a href="http://blog.csdn.net/zhouyong0/article/details/7909456">http://blog.csdn.net/zhouyong0/article/details/7909456</a></li><li>命令模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/06/01/2526972.html">http://www.cnblogs.com/java-my-life/archive/2012/06/01/2526972.html</a></li><li>解释器模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/06/19/2552617.html">http://www.cnblogs.com/java-my-life/archive/2012/06/19/2552617.html</a></li><li>迭代模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/05/22/2511506.html">http://www.cnblogs.com/java-my-life/archive/2012/05/22/2511506.html</a></li><li>中介者模式 <a href="http://blog.csdn.net/chenhuade85/article/details/8141831">http://blog.csdn.net/chenhuade85/article/details/8141831</a></li><li>备忘录模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/06/06/2534942.html">http://www.cnblogs.com/java-my-life/archive/2012/06/06/2534942.html</a></li><li>观察者模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/05/16/2502279.html">http://www.cnblogs.com/java-my-life/archive/2012/05/16/2502279.html</a></li><li>状态模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/06/08/2538146.html">http://www.cnblogs.com/java-my-life/archive/2012/06/08/2538146.html</a></li><li>策略模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/05/10/2491891.html">http://www.cnblogs.com/java-my-life/archive/2012/05/10/2491891.html</a></li><li>模板方法模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/05/14/2495235.html">http://www.cnblogs.com/java-my-life/archive/2012/05/14/2495235.html</a></li><li>访问者模式 <a href="http://www.cnblogs.com/java-my-life/archive/2012/06/14/2545381.html">http://www.cnblogs.com/java-my-life/archive/2012/06/14/2545381.html</a></li></ul><h2 id="题外-http-www-ourlove1314-com"><a href="#题外-http-www-ourlove1314-com" class="headerlink" title="题外: http://www.ourlove1314.com/"></a>题外: <a href="http://www.ourlove1314.com/">http://www.ourlove1314.com/</a></h2><h2 id="设计模式学习资料汇总"><a href="#设计模式学习资料汇总" class="headerlink" title="设计模式学习资料汇总"></a>设计模式学习资料汇总</h2><ul><li><a href="https://gitee.com/ACANX/ACANX-JavaSEBase/tree/master/ACANX-JavaSE-Core/src/main/java/com/acanx/designpattern">我的设计模式Demo代码</a></li><li><a href="https://acanx.gitee.io/blog/2018/07/12/Java%2023%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/">Java 23种设计模式 深入理解</a> </li><li><a href="https://github.com/feixiao/DesignPattern/tree/master/Java">feixiao/DesignPattern</a></li><li><a href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html">设计模式-菜鸟教程</a></li><li><a href="https://github.com/bjmashibing/DesignPatterns">bjmashibing/DesignPatterns</a></li><li><a href="https://blog.csdn.net/u013829202/article/details/52513029">非常全的23种设计模式详解，收藏了</a></li><li><a href="https://github.com/online-demo/spring5projectdemo/tree/master/chapter20/src/main/java/com/test">《Spring 5企业级开发实战》-设计模式源码</a></li><li><a href="http://c.biancheng.net/view/1364.html">设计模式-C语言中文网</a></li><li><a href="https://www.cnblogs.com/chenssy/p/3357683.html">设计模式总结</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-IoC容器源码导读</title>
      <link href="/Blog/2019/11/22/Spring-IoC%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%AF%BC%E8%AF%BB/"/>
      <url>/Blog/2019/11/22/Spring-IoC%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%AF%BC%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="1-几个重要类-接口"><a href="#1-几个重要类-接口" class="headerlink" title="1.几个重要类/接口"></a>1.几个重要类/接口</h1><h2 id="阅读前的准备"><a href="#阅读前的准备" class="headerlink" title="阅读前的准备"></a>阅读前的准备</h2><ul><li>源码下载：<ul><li><a href="https://github.com/spring-projects/spring-framework">https://github.com/spring-projects/spring-framework</a>  </li><li><a href="https://github.com/spring-projects/spring-framework.git">https://github.com/spring-projects/spring-framework.git</a></li></ul></li><li>源码版本：v5.2.1.RELEASE</li></ul><h2 id="1-1-BeanFactory-顶级接口（低配版的IoC容器）"><a href="#1-1-BeanFactory-顶级接口（低配版的IoC容器）" class="headerlink" title="1.1 BeanFactory 顶级接口（低配版的IoC容器）"></a>1.1 BeanFactory 顶级接口（低配版的IoC容器）</h2><h3 id="BeanFactory接口定义说明"><a href="#BeanFactory接口定义说明" class="headerlink" title="BeanFactory接口定义说明"></a>BeanFactory接口定义说明</h3><ul><li>BeanFactory是低配版的IoC容器，定义了Ioc容器基本的功能</li></ul><h3 id="完整版源码："><a href="#完整版源码：" class="headerlink" title="完整版源码："></a>完整版源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright 2002-2019 the original author or authors.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"> * You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.springframework.beans.factory;<br><br><span class="hljs-keyword">import</span> org.springframework.beans.BeansException;<br><span class="hljs-keyword">import</span> org.springframework.core.ResolvableType;<br><span class="hljs-keyword">import</span> org.springframework.lang.Nullable;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * The root interface for accessing a Spring bean container.</span><br><span class="hljs-comment"> * This is the basic client view of a bean container;</span><br><span class="hljs-comment"> * further interfaces such as &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125; and</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.config.ConfigurableBeanFactory&#125;</span><br><span class="hljs-comment"> * are available for specific purposes.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;This interface is implemented by objects that hold a number of bean definitions,</span><br><span class="hljs-comment"> * each uniquely identified by a String name. Depending on the bean definition,</span><br><span class="hljs-comment"> * the factory will return either an independent instance of a contained object</span><br><span class="hljs-comment"> * (the Prototype design pattern), or a single shared instance (a superior</span><br><span class="hljs-comment"> * alternative to the Singleton design pattern, in which the instance is a</span><br><span class="hljs-comment"> * singleton in the scope of the factory). Which type of instance will be returned</span><br><span class="hljs-comment"> * depends on the bean factory configuration: the API is the same. Since Spring</span><br><span class="hljs-comment"> * 2.0, further scopes are available depending on the concrete application</span><br><span class="hljs-comment"> * context (e.g. &quot;request&quot; and &quot;session&quot; scopes in a web environment).</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;The point of this approach is that the BeanFactory is a central registry</span><br><span class="hljs-comment"> * of application components, and centralizes configuration of application</span><br><span class="hljs-comment"> * components (no more do individual objects need to read properties files,</span><br><span class="hljs-comment"> * for example). See chapters 4 and 11 of &quot;Expert One-on-One J2EE Design and</span><br><span class="hljs-comment"> * Development&quot; for a discussion of the benefits of this approach.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;Note that it is generally better to rely on Dependency Injection</span><br><span class="hljs-comment"> * (&quot;push&quot; configuration) to configure application objects through setters</span><br><span class="hljs-comment"> * or constructors, rather than use any form of &quot;pull&quot; configuration like a</span><br><span class="hljs-comment"> * BeanFactory lookup. Spring&#x27;s Dependency Injection functionality is</span><br><span class="hljs-comment"> * implemented using this BeanFactory interface and its subinterfaces.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;Normally a BeanFactory will load bean definitions stored in a configuration</span><br><span class="hljs-comment"> * source (such as an XML document), and use the &#123;<span class="hljs-doctag">@code</span> org.springframework.beans&#125;</span><br><span class="hljs-comment"> * package to configure the beans. However, an implementation could simply return</span><br><span class="hljs-comment"> * Java objects it creates as necessary directly in Java code. There are no</span><br><span class="hljs-comment"> * constraints on how the definitions could be stored: LDAP, RDBMS, XML,</span><br><span class="hljs-comment"> * properties file, etc. Implementations are encouraged to support references</span><br><span class="hljs-comment"> * amongst beans (Dependency Injection).</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;In contrast to the methods in &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125;, all of the</span><br><span class="hljs-comment"> * operations in this interface will also check parent factories if this is a</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> HierarchicalBeanFactory&#125;. If a bean is not found in this factory instance,</span><br><span class="hljs-comment"> * the immediate parent factory will be asked. Beans in this factory instance</span><br><span class="hljs-comment"> * are supposed to override beans of the same name in any parent factory.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;Bean factory implementations should support the standard bean lifecycle interfaces</span><br><span class="hljs-comment"> * as far as possible. The full set of initialization methods and their standard order is:</span><br><span class="hljs-comment"> * &lt;ol&gt;</span><br><span class="hljs-comment"> * &lt;li&gt;BeanNameAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setBeanName&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;BeanClassLoaderAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setBeanClassLoader&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;BeanFactoryAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setBeanFactory&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;EnvironmentAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setEnvironment&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;EmbeddedValueResolverAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setEmbeddedValueResolver&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;ResourceLoaderAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setResourceLoader&#125;</span><br><span class="hljs-comment"> * (only applicable when running in an application context)</span><br><span class="hljs-comment"> * &lt;li&gt;ApplicationEventPublisherAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setApplicationEventPublisher&#125;</span><br><span class="hljs-comment"> * (only applicable when running in an application context)</span><br><span class="hljs-comment"> * &lt;li&gt;MessageSourceAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setMessageSource&#125;</span><br><span class="hljs-comment"> * (only applicable when running in an application context)</span><br><span class="hljs-comment"> * &lt;li&gt;ApplicationContextAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setApplicationContext&#125;</span><br><span class="hljs-comment"> * (only applicable when running in an application context)</span><br><span class="hljs-comment"> * &lt;li&gt;ServletContextAware&#x27;s &#123;<span class="hljs-doctag">@code</span> setServletContext&#125;</span><br><span class="hljs-comment"> * (only applicable when running in a web application context)</span><br><span class="hljs-comment"> * &lt;li&gt;&#123;<span class="hljs-doctag">@code</span> postProcessBeforeInitialization&#125; methods of BeanPostProcessors</span><br><span class="hljs-comment"> * &lt;li&gt;InitializingBean&#x27;s &#123;<span class="hljs-doctag">@code</span> afterPropertiesSet&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;a custom init-method definition</span><br><span class="hljs-comment"> * &lt;li&gt;&#123;<span class="hljs-doctag">@code</span> postProcessAfterInitialization&#125; methods of BeanPostProcessors</span><br><span class="hljs-comment"> * &lt;/ol&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;On shutdown of a bean factory, the following lifecycle methods apply:</span><br><span class="hljs-comment"> * &lt;ol&gt;</span><br><span class="hljs-comment"> * &lt;li&gt;&#123;<span class="hljs-doctag">@code</span> postProcessBeforeDestruction&#125; methods of DestructionAwareBeanPostProcessors</span><br><span class="hljs-comment"> * &lt;li&gt;DisposableBean&#x27;s &#123;<span class="hljs-doctag">@code</span> destroy&#125;</span><br><span class="hljs-comment"> * &lt;li&gt;a custom destroy-method definition</span><br><span class="hljs-comment"> * &lt;/ol&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Rod Johnson</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Juergen Hoeller</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Chris Beams</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 13 April 2001</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanNameAware#setBeanName</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanClassLoaderAware#setBeanClassLoader</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryAware#setBeanFactory</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.context.ResourceLoaderAware#setResourceLoader</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.context.ApplicationEventPublisherAware#setApplicationEventPublisher</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.context.MessageSourceAware#setMessageSource</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.context.ApplicationContextAware#setApplicationContext</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.web.context.ServletContextAware#setServletContext</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.config.BeanPostProcessor#postProcessBeforeInitialization</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> InitializingBean#afterPropertiesSet</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.support.RootBeanDefinition#getInitMethodName</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.config.BeanPostProcessor#postProcessAfterInitialization</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> DisposableBean#destroy</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.support.RootBeanDefinition#getDestroyMethodName</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Used to dereference a &#123;<span class="hljs-doctag">@link</span> FactoryBean&#125; instance and distinguish it from</span><br><span class="hljs-comment"> * beans &lt;i&gt;created&lt;/i&gt; by the FactoryBean. For example, if the bean named</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> myJndiObject&#125; is a FactoryBean, getting &#123;<span class="hljs-doctag">@code</span> &amp;myJndiObject&#125;</span><br><span class="hljs-comment"> * will return the factory, not the instance returned by the factory.</span><br><span class="hljs-comment"> */</span><br>String FACTORY_BEAN_PREFIX = <span class="hljs-string">&quot;&amp;&quot;</span>;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return an instance, which may be shared or independent, of the specified bean.</span><br><span class="hljs-comment"> * &lt;p&gt;This method allows a Spring BeanFactory to be used as a replacement for the</span><br><span class="hljs-comment"> * Singleton or Prototype design pattern. Callers may retain references to</span><br><span class="hljs-comment"> * returned objects in the case of Singleton beans.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to retrieve</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> an instance of the bean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the specified name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if the bean could not be obtained</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Object <span class="hljs-title">getBean</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return an instance, which may be shared or independent, of the specified bean.</span><br><span class="hljs-comment"> * &lt;p&gt;Behaves the same as &#123;<span class="hljs-doctag">@link</span> #getBean(String)&#125;, but provides a measure of type</span><br><span class="hljs-comment"> * safety by throwing a BeanNotOfRequiredTypeException if the bean is not of the</span><br><span class="hljs-comment"> * required type. This means that ClassCastException can&#x27;t be thrown on casting</span><br><span class="hljs-comment"> * the result correctly, as can happen with &#123;<span class="hljs-doctag">@link</span> #getBean(String)&#125;.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to retrieve</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> requiredType type the bean must match; can be an interface or superclass</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> an instance of the bean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no such bean definition</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeanNotOfRequiredTypeException if the bean is not of the required type</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if the bean could not be created</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(String name, Class&lt;T&gt; requiredType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return an instance, which may be shared or independent, of the specified bean.</span><br><span class="hljs-comment"> * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,</span><br><span class="hljs-comment"> * overriding the specified default arguments (if any) in the bean definition.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to retrieve</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> args arguments to use when creating a bean instance using explicit arguments</span><br><span class="hljs-comment"> * (only applied when creating a new instance as opposed to retrieving an existing one)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> an instance of the bean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no such bean definition</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeanDefinitionStoreException if arguments have been given but</span><br><span class="hljs-comment"> * the affected bean isn&#x27;t a prototype</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if the bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2.5</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Object <span class="hljs-title">getBean</span><span class="hljs-params">(String name, Object... args)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the bean instance that uniquely matches the given object type, if any.</span><br><span class="hljs-comment"> * &lt;p&gt;This method goes into &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125; by-type lookup territory</span><br><span class="hljs-comment"> * but may also be translated into a conventional by-name lookup based on the name</span><br><span class="hljs-comment"> * of the given type. For more extensive retrieval operations across sets of beans,</span><br><span class="hljs-comment"> * use &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125; and/or &#123;<span class="hljs-doctag">@link</span> BeanFactoryUtils&#125;.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> requiredType type the bean must match; can be an interface or superclass</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> an instance of the single bean matching the required type</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if no bean of the given type was found</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoUniqueBeanDefinitionException if more than one bean of the given type was found</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if the bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 3.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ListableBeanFactory</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(Class&lt;T&gt; requiredType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return an instance, which may be shared or independent, of the specified bean.</span><br><span class="hljs-comment"> * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,</span><br><span class="hljs-comment"> * overriding the specified default arguments (if any) in the bean definition.</span><br><span class="hljs-comment"> * &lt;p&gt;This method goes into &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125; by-type lookup territory</span><br><span class="hljs-comment"> * but may also be translated into a conventional by-name lookup based on the name</span><br><span class="hljs-comment"> * of the given type. For more extensive retrieval operations across sets of beans,</span><br><span class="hljs-comment"> * use &#123;<span class="hljs-doctag">@link</span> ListableBeanFactory&#125; and/or &#123;<span class="hljs-doctag">@link</span> BeanFactoryUtils&#125;.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> requiredType type the bean must match; can be an interface or superclass</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> args arguments to use when creating a bean instance using explicit arguments</span><br><span class="hljs-comment"> * (only applied when creating a new instance as opposed to retrieving an existing one)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> an instance of the bean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no such bean definition</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeanDefinitionStoreException if arguments have been given but</span><br><span class="hljs-comment"> * the affected bean isn&#x27;t a prototype</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if the bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 4.1</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(Class&lt;T&gt; requiredType, Object... args)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a provider for the specified bean, allowing for lazy on-demand retrieval</span><br><span class="hljs-comment"> * of instances, including availability and uniqueness options.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> requiredType type the bean must match; can be an interface or superclass</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a corresponding provider handle</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBeanProvider(ResolvableType)</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">ObjectProvider&lt;T&gt; <span class="hljs-title">getBeanProvider</span><span class="hljs-params">(Class&lt;T&gt; requiredType)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a provider for the specified bean, allowing for lazy on-demand retrieval</span><br><span class="hljs-comment"> * of instances, including availability and uniqueness options.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> requiredType type the bean must match; can be a generic type declaration.</span><br><span class="hljs-comment"> * Note that collection types are not supported here, in contrast to reflective</span><br><span class="hljs-comment"> * injection points. For programmatically retrieving a list of beans matching a</span><br><span class="hljs-comment"> * specific type, specify the actual bean type as an argument here and subsequently</span><br><span class="hljs-comment"> * use &#123;<span class="hljs-doctag">@link</span> ObjectProvider#orderedStream()&#125; or its lazy streaming/iteration options.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a corresponding provider handle</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ObjectProvider#iterator()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ObjectProvider#stream()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ObjectProvider#orderedStream()</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">ObjectProvider&lt;T&gt; <span class="hljs-title">getBeanProvider</span><span class="hljs-params">(ResolvableType requiredType)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Does this bean factory contain a bean definition or externally registered singleton</span><br><span class="hljs-comment"> * instance with the given name?</span><br><span class="hljs-comment"> * &lt;p&gt;If the given name is an alias, it will be translated back to the corresponding</span><br><span class="hljs-comment"> * canonical bean name.</span><br><span class="hljs-comment"> * &lt;p&gt;If this factory is hierarchical, will ask any parent factory if the bean cannot</span><br><span class="hljs-comment"> * be found in this factory instance.</span><br><span class="hljs-comment"> * &lt;p&gt;If a bean definition or singleton instance matching the given name is found,</span><br><span class="hljs-comment"> * this method will return &#123;<span class="hljs-doctag">@code</span> true&#125; whether the named bean definition is concrete</span><br><span class="hljs-comment"> * or abstract, lazy or eager, in scope or not. Therefore, note that a &#123;<span class="hljs-doctag">@code</span> true&#125;</span><br><span class="hljs-comment"> * return value from this method does not necessarily indicate that &#123;<span class="hljs-doctag">@link</span> #getBean&#125;</span><br><span class="hljs-comment"> * will be able to obtain an instance for the same name.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> whether a bean with the given name is present</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsBean</span><span class="hljs-params">(String name)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Is this bean a shared singleton? That is, will &#123;<span class="hljs-doctag">@link</span> #getBean&#125; always</span><br><span class="hljs-comment"> * return the same instance?</span><br><span class="hljs-comment"> * &lt;p&gt;Note: This method returning &#123;<span class="hljs-doctag">@code</span> false&#125; does not clearly indicate</span><br><span class="hljs-comment"> * independent instances. It indicates non-singleton instances, which may correspond</span><br><span class="hljs-comment"> * to a scoped bean as well. Use the &#123;<span class="hljs-doctag">@link</span> #isPrototype&#125; operation to explicitly</span><br><span class="hljs-comment"> * check for independent instances.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> whether this bean corresponds to a singleton instance</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #isPrototype</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isSingleton</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Is this bean a prototype? That is, will &#123;<span class="hljs-doctag">@link</span> #getBean&#125; always return</span><br><span class="hljs-comment"> * independent instances?</span><br><span class="hljs-comment"> * &lt;p&gt;Note: This method returning &#123;<span class="hljs-doctag">@code</span> false&#125; does not clearly indicate</span><br><span class="hljs-comment"> * a singleton object. It indicates non-independent instances, which may correspond</span><br><span class="hljs-comment"> * to a scoped bean as well. Use the &#123;<span class="hljs-doctag">@link</span> #isSingleton&#125; operation to explicitly</span><br><span class="hljs-comment"> * check for a shared singleton instance.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> whether this bean will always deliver independent instances</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2.0.3</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #isSingleton</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrototype</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Check whether the bean with the given name matches the specified type.</span><br><span class="hljs-comment"> * More specifically, check whether a &#123;<span class="hljs-doctag">@link</span> #getBean&#125; call for the given name</span><br><span class="hljs-comment"> * would return an object that is assignable to the specified target type.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> typeToMatch the type to match against (as a &#123;<span class="hljs-doctag">@code</span> ResolvableType&#125;)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@code</span> true&#125; if the bean type matches,</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> false&#125; if it doesn&#x27;t match or cannot be determined yet</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 4.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getType</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isTypeMatch</span><span class="hljs-params">(String name, ResolvableType typeToMatch)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Check whether the bean with the given name matches the specified type.</span><br><span class="hljs-comment"> * More specifically, check whether a &#123;<span class="hljs-doctag">@link</span> #getBean&#125; call for the given name</span><br><span class="hljs-comment"> * would return an object that is assignable to the specified target type.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> typeToMatch the type to match against (as a &#123;<span class="hljs-doctag">@code</span> Class&#125;)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@code</span> true&#125; if the bean type matches,</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> false&#125; if it doesn&#x27;t match or cannot be determined yet</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2.0.1</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getType</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isTypeMatch</span><span class="hljs-params">(String name, Class&lt;?&gt; typeToMatch)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Determine the type of the bean with the given name. More specifically,</span><br><span class="hljs-comment"> * determine the type of object that &#123;<span class="hljs-doctag">@link</span> #getBean&#125; would return for the given name.</span><br><span class="hljs-comment"> * &lt;p&gt;For a &#123;<span class="hljs-doctag">@link</span> FactoryBean&#125;, return the type of object that the FactoryBean creates,</span><br><span class="hljs-comment"> * as exposed by &#123;<span class="hljs-doctag">@link</span> FactoryBean#getObjectType()&#125;. This may lead to the initialization</span><br><span class="hljs-comment"> * of a previously uninitialized &#123;<span class="hljs-doctag">@code</span> FactoryBean&#125; (see &#123;<span class="hljs-doctag">@link</span> #getType(String, boolean)&#125;).</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the type of the bean, or &#123;<span class="hljs-doctag">@code</span> null&#125; if not determinable</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 1.1.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #isTypeMatch</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>Class&lt;?&gt; getType(String name) <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Determine the type of the bean with the given name. More specifically,</span><br><span class="hljs-comment"> * determine the type of object that &#123;<span class="hljs-doctag">@link</span> #getBean&#125; would return for the given name.</span><br><span class="hljs-comment"> * &lt;p&gt;For a &#123;<span class="hljs-doctag">@link</span> FactoryBean&#125;, return the type of object that the FactoryBean creates,</span><br><span class="hljs-comment"> * as exposed by &#123;<span class="hljs-doctag">@link</span> FactoryBean#getObjectType()&#125;. Depending on the</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> allowFactoryBeanInit&#125; flag, this may lead to the initialization of a previously</span><br><span class="hljs-comment"> * uninitialized &#123;<span class="hljs-doctag">@code</span> FactoryBean&#125; if no early type information is available.</span><br><span class="hljs-comment"> * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.</span><br><span class="hljs-comment"> * Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> allowFactoryBeanInit whether a &#123;<span class="hljs-doctag">@code</span> FactoryBean&#125; may get initialized</span><br><span class="hljs-comment"> * just for the purpose of determining its object type</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the type of the bean, or &#123;<span class="hljs-doctag">@code</span> null&#125; if not determinable</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #isTypeMatch</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>Class&lt;?&gt; getType(String name, <span class="hljs-keyword">boolean</span> allowFactoryBeanInit) <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the aliases for the given bean name, if any.</span><br><span class="hljs-comment"> * All of those aliases point to the same bean when used in a &#123;<span class="hljs-doctag">@link</span> #getBean&#125; call.</span><br><span class="hljs-comment"> * &lt;p&gt;If the given name is an alias, the corresponding original bean name</span><br><span class="hljs-comment"> * and other aliases (if any) will be returned, with the original bean name</span><br><span class="hljs-comment"> * being the first element in the array.</span><br><span class="hljs-comment"> * &lt;p&gt;Will ask the parent factory if the bean cannot be found in this factory instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the bean name to check for aliases</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the aliases, or an empty array if none</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBean</span><br><span class="hljs-comment"> */</span><br>String[] getAliases(String name);<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="BeanFactory方法属性摘要"><a href="#BeanFactory方法属性摘要" class="headerlink" title="BeanFactory方法属性摘要"></a>BeanFactory方法属性摘要</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String FACTORY_BEAN_PREFIX = <span class="hljs-string">&quot;&amp;&quot;</span>;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Object <span class="hljs-title">getBean</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(String name, Class&lt;T&gt; requiredType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Object <span class="hljs-title">getBean</span><span class="hljs-params">(String name, Object... args)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(Class&lt;T&gt; requiredType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">T <span class="hljs-title">getBean</span><span class="hljs-params">(Class&lt;T&gt; requiredType, Object... args)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">ObjectProvider&lt;T&gt; <span class="hljs-title">getBeanProvider</span><span class="hljs-params">(Class&lt;T&gt; requiredType)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">ObjectProvider&lt;T&gt; <span class="hljs-title">getBeanProvider</span><span class="hljs-params">(ResolvableType requiredType)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsBean</span><span class="hljs-params">(String name)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isSingleton</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrototype</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isTypeMatch</span><span class="hljs-params">(String name, ResolvableType typeToMatch)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isTypeMatch</span><span class="hljs-params">(String name, Class&lt;?&gt; typeToMatch)</span> <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>Class&lt;?&gt; getType(String name) <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>Class&lt;?&gt; getType(String name, <span class="hljs-keyword">boolean</span> allowFactoryBeanInit) <span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getAliases(String name);<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-2-HierarchicalBeanFactory接口"><a href="#1-2-HierarchicalBeanFactory接口" class="headerlink" title="1.2 HierarchicalBeanFactory接口"></a>1.2 HierarchicalBeanFactory接口</h3><h3 id="完整版源码：-1"><a href="#完整版源码：-1" class="headerlink" title="完整版源码："></a>完整版源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright 2002-2012 the original author or authors.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"> * You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.springframework.beans.factory;<br><br><span class="hljs-keyword">import</span> org.springframework.lang.Nullable;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Sub-interface implemented by bean factories that can be part</span><br><span class="hljs-comment"> * of a hierarchy.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;The corresponding &#123;<span class="hljs-doctag">@code</span> setParentBeanFactory&#125; method for bean</span><br><span class="hljs-comment"> * factories that allow setting the parent in a configurable</span><br><span class="hljs-comment"> * fashion can be found in the ConfigurableBeanFactory interface.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Rod Johnson</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Juergen Hoeller</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 07.07.2003</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.config.ConfigurableBeanFactory#setParentBeanFactory</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">HierarchicalBeanFactory</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the parent bean factory, or &#123;<span class="hljs-doctag">@code</span> null&#125; if there is none.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">BeanFactory <span class="hljs-title">getParentBeanFactory</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether the local bean factory contains a bean of the given name,</span><br><span class="hljs-comment"> * ignoring beans defined in ancestor contexts.</span><br><span class="hljs-comment"> * &lt;p&gt;This is an alternative to &#123;<span class="hljs-doctag">@code</span> containsBean&#125;, ignoring a bean</span><br><span class="hljs-comment"> * of the given name from an ancestor bean factory.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> name the name of the bean to query</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> whether a bean with the given name is defined in the local factory</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactory#containsBean</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsLocalBean</span><span class="hljs-params">(String name)</span></span>;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="HierarchicalBeanFactory方法属性摘要"><a href="#HierarchicalBeanFactory方法属性摘要" class="headerlink" title="HierarchicalBeanFactory方法属性摘要"></a>HierarchicalBeanFactory方法属性摘要</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">HierarchicalBeanFactory</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">BeanFactory <span class="hljs-title">getParentBeanFactory</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsLocalBean</span><span class="hljs-params">(String name)</span></span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-3-ListableBeanFactory接口"><a href="#1-3-ListableBeanFactory接口" class="headerlink" title="1.3 ListableBeanFactory接口"></a>1.3 ListableBeanFactory接口</h3><h3 id="完整版源码：-2"><a href="#完整版源码：-2" class="headerlink" title="完整版源码："></a>完整版源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright 2002-2019 the original author or authors.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"> * You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.springframework.beans.factory;<br><br><span class="hljs-keyword">import</span> java.lang.annotation.Annotation;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">import</span> org.springframework.beans.BeansException;<br><span class="hljs-keyword">import</span> org.springframework.core.ResolvableType;<br><span class="hljs-keyword">import</span> org.springframework.lang.Nullable;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Extension of the &#123;<span class="hljs-doctag">@link</span> BeanFactory&#125; interface to be implemented by bean factories</span><br><span class="hljs-comment"> * that can enumerate all their bean instances, rather than attempting bean lookup</span><br><span class="hljs-comment"> * by name one by one as requested by clients. BeanFactory implementations that</span><br><span class="hljs-comment"> * preload all their bean definitions (such as XML-based factories) may implement</span><br><span class="hljs-comment"> * this interface.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;If this is a &#123;<span class="hljs-doctag">@link</span> HierarchicalBeanFactory&#125;, the return values will &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * take any BeanFactory hierarchy into account, but will relate only to the beans</span><br><span class="hljs-comment"> * defined in the current factory. Use the &#123;<span class="hljs-doctag">@link</span> BeanFactoryUtils&#125; helper class</span><br><span class="hljs-comment"> * to consider beans in ancestor factories too.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;The methods in this interface will just respect bean definitions of this factory.</span><br><span class="hljs-comment"> * They will ignore any singleton beans that have been registered by other means like</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.config.ConfigurableBeanFactory&#125;&#x27;s</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> registerSingleton&#125; method, with the exception of</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> getBeanNamesOfType&#125; and &#123;<span class="hljs-doctag">@code</span> getBeansOfType&#125; which will check</span><br><span class="hljs-comment"> * such manually registered singletons too. Of course, BeanFactory&#x27;s &#123;<span class="hljs-doctag">@code</span> getBean&#125;</span><br><span class="hljs-comment"> * does allow transparent access to such special beans as well. However, in typical</span><br><span class="hljs-comment"> * scenarios, all beans will be defined by external bean definitions anyway, so most</span><br><span class="hljs-comment"> * applications don&#x27;t need to worry about this differentiation.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span>&lt;/b&gt; With the exception of &#123;<span class="hljs-doctag">@code</span> getBeanDefinitionCount&#125;</span><br><span class="hljs-comment"> * and &#123;<span class="hljs-doctag">@code</span> containsBeanDefinition&#125;, the methods in this interface</span><br><span class="hljs-comment"> * are not designed for frequent invocation. Implementations may be slow.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Rod Johnson</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Juergen Hoeller</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 16 April 2001</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> HierarchicalBeanFactory</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ListableBeanFactory</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Check if this bean factory contains a bean definition with the given name.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in,</span><br><span class="hljs-comment"> * and ignores any singleton beans that have been registered by</span><br><span class="hljs-comment"> * other means than bean definitions.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> beanName the name of the bean to look for</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> if this bean factory contains a bean definition with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #containsBean</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsBeanDefinition</span><span class="hljs-params">(String beanName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the number of beans defined in the factory.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in,</span><br><span class="hljs-comment"> * and ignores any singleton beans that have been registered by</span><br><span class="hljs-comment"> * other means than bean definitions.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the number of beans defined in the factory</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getBeanDefinitionCount</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the names of all beans defined in this factory.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in,</span><br><span class="hljs-comment"> * and ignores any singleton beans that have been registered by</span><br><span class="hljs-comment"> * other means than bean definitions.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of all beans defined in this factory,</span><br><span class="hljs-comment"> * or an empty array if none defined</span><br><span class="hljs-comment"> */</span><br>String[] getBeanDefinitionNames();<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the names of beans matching the given type (including subclasses),</span><br><span class="hljs-comment"> * judging from either bean definitions or the value of &#123;<span class="hljs-doctag">@code</span> getObjectType&#125;</span><br><span class="hljs-comment"> * in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans</span><br><span class="hljs-comment"> * will get initialized. If the object created by the FactoryBean doesn&#x27;t match,</span><br><span class="hljs-comment"> * the raw FactoryBean itself will be matched against the type.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beanNamesForTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;This version of &#123;<span class="hljs-doctag">@code</span> getBeanNamesForType&#125; matches all kinds of beans,</span><br><span class="hljs-comment"> * be it singletons, prototypes, or FactoryBeans. In most implementations, the</span><br><span class="hljs-comment"> * result will be the same as for &#123;<span class="hljs-doctag">@code</span> getBeanNamesForType(type, true, true)&#125;.</span><br><span class="hljs-comment"> * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the</span><br><span class="hljs-comment"> * order of definition&lt;/i&gt; in the backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the generically typed class or interface to match</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of beans (or objects created by FactoryBeans) matching</span><br><span class="hljs-comment"> * the given object type (including subclasses), or an empty array if none</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 4.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #isTypeMatch(String, ResolvableType)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType)</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(ResolvableType type);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the names of beans matching the given type (including subclasses),</span><br><span class="hljs-comment"> * judging from either bean definitions or the value of &#123;<span class="hljs-doctag">@code</span> getObjectType&#125;</span><br><span class="hljs-comment"> * in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans if the &quot;allowEagerInit&quot; flag is set,</span><br><span class="hljs-comment"> * which means that FactoryBeans will get initialized. If the object created by the</span><br><span class="hljs-comment"> * FactoryBean doesn&#x27;t match, the raw FactoryBean itself will be matched against the</span><br><span class="hljs-comment"> * type. If &quot;allowEagerInit&quot; is not set, only raw FactoryBeans will be checked</span><br><span class="hljs-comment"> * (which doesn&#x27;t require initialization of each FactoryBean).</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beanNamesForTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the</span><br><span class="hljs-comment"> * order of definition&lt;/i&gt; in the backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the generically typed class or interface to match</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> includeNonSingletons whether to include prototype or scoped beans too</span><br><span class="hljs-comment"> * or just singletons (also applies to FactoryBeans)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and</span><br><span class="hljs-comment"> * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a</span><br><span class="hljs-comment"> * &quot;factory-bean&quot; reference) for the type check. Note that FactoryBeans need to be</span><br><span class="hljs-comment"> * eagerly initialized to determine their type: So be aware that passing in &quot;true&quot;</span><br><span class="hljs-comment"> * for this flag will initialize FactoryBeans and &quot;factory-bean&quot; references.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of beans (or objects created by FactoryBeans) matching</span><br><span class="hljs-comment"> * the given object type (including subclasses), or an empty array if none</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType, boolean, boolean)</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(ResolvableType type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the names of beans matching the given type (including subclasses),</span><br><span class="hljs-comment"> * judging from either bean definitions or the value of &#123;<span class="hljs-doctag">@code</span> getObjectType&#125;</span><br><span class="hljs-comment"> * in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans</span><br><span class="hljs-comment"> * will get initialized. If the object created by the FactoryBean doesn&#x27;t match,</span><br><span class="hljs-comment"> * the raw FactoryBean itself will be matched against the type.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beanNamesForTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;This version of &#123;<span class="hljs-doctag">@code</span> getBeanNamesForType&#125; matches all kinds of beans,</span><br><span class="hljs-comment"> * be it singletons, prototypes, or FactoryBeans. In most implementations, the</span><br><span class="hljs-comment"> * result will be the same as for &#123;<span class="hljs-doctag">@code</span> getBeanNamesForType(type, true, true)&#125;.</span><br><span class="hljs-comment"> * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the</span><br><span class="hljs-comment"> * order of definition&lt;/i&gt; in the backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the class or interface to match, or &#123;<span class="hljs-doctag">@code</span> null&#125; for all bean names</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of beans (or objects created by FactoryBeans) matching</span><br><span class="hljs-comment"> * the given object type (including subclasses), or an empty array if none</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(<span class="hljs-meta">@Nullable</span> Class&lt;?&gt; type);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the names of beans matching the given type (including subclasses),</span><br><span class="hljs-comment"> * judging from either bean definitions or the value of &#123;<span class="hljs-doctag">@code</span> getObjectType&#125;</span><br><span class="hljs-comment"> * in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans if the &quot;allowEagerInit&quot; flag is set,</span><br><span class="hljs-comment"> * which means that FactoryBeans will get initialized. If the object created by the</span><br><span class="hljs-comment"> * FactoryBean doesn&#x27;t match, the raw FactoryBean itself will be matched against the</span><br><span class="hljs-comment"> * type. If &quot;allowEagerInit&quot; is not set, only raw FactoryBeans will be checked</span><br><span class="hljs-comment"> * (which doesn&#x27;t require initialization of each FactoryBean).</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beanNamesForTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the</span><br><span class="hljs-comment"> * order of definition&lt;/i&gt; in the backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the class or interface to match, or &#123;<span class="hljs-doctag">@code</span> null&#125; for all bean names</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> includeNonSingletons whether to include prototype or scoped beans too</span><br><span class="hljs-comment"> * or just singletons (also applies to FactoryBeans)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and</span><br><span class="hljs-comment"> * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a</span><br><span class="hljs-comment"> * &quot;factory-bean&quot; reference) for the type check. Note that FactoryBeans need to be</span><br><span class="hljs-comment"> * eagerly initialized to determine their type: So be aware that passing in &quot;true&quot;</span><br><span class="hljs-comment"> * for this flag will initialize FactoryBeans and &quot;factory-bean&quot; references.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of beans (or objects created by FactoryBeans) matching</span><br><span class="hljs-comment"> * the given object type (including subclasses), or an empty array if none</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(<span class="hljs-meta">@Nullable</span> Class&lt;?&gt; type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the bean instances that match the given object type (including</span><br><span class="hljs-comment"> * subclasses), judging from either bean definitions or the value of</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> getObjectType&#125; in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans</span><br><span class="hljs-comment"> * will get initialized. If the object created by the FactoryBean doesn&#x27;t match,</span><br><span class="hljs-comment"> * the raw FactoryBean itself will be matched against the type.</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beansOfTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;This version of getBeansOfType matches all kinds of beans, be it</span><br><span class="hljs-comment"> * singletons, prototypes, or FactoryBeans. In most implementations, the</span><br><span class="hljs-comment"> * result will be the same as for &#123;<span class="hljs-doctag">@code</span> getBeansOfType(type, true, true)&#125;.</span><br><span class="hljs-comment"> * &lt;p&gt;The Map returned by this method should always return bean names and</span><br><span class="hljs-comment"> * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the</span><br><span class="hljs-comment"> * backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the class or interface to match, or &#123;<span class="hljs-doctag">@code</span> null&#125; for all concrete beans</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a Map with the matching beans, containing the bean names as</span><br><span class="hljs-comment"> * keys and the corresponding bean instances as values</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if a bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 1.1.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class)</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">Map&lt;String, T&gt; <span class="hljs-title">getBeansOfType</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> Class&lt;T&gt; type)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the bean instances that match the given object type (including</span><br><span class="hljs-comment"> * subclasses), judging from either bean definitions or the value of</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> getObjectType&#125; in the case of FactoryBeans.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;</span><br><span class="hljs-comment"> * check nested beans which might match the specified type as well.</span><br><span class="hljs-comment"> * &lt;p&gt;Does consider objects created by FactoryBeans if the &quot;allowEagerInit&quot; flag is set,</span><br><span class="hljs-comment"> * which means that FactoryBeans will get initialized. If the object created by the</span><br><span class="hljs-comment"> * FactoryBean doesn&#x27;t match, the raw FactoryBean itself will be matched against the</span><br><span class="hljs-comment"> * type. If &quot;allowEagerInit&quot; is not set, only raw FactoryBeans will be checked</span><br><span class="hljs-comment"> * (which doesn&#x27;t require initialization of each FactoryBean).</span><br><span class="hljs-comment"> * &lt;p&gt;Does not consider any hierarchy this factory may participate in.</span><br><span class="hljs-comment"> * Use BeanFactoryUtils&#x27; &#123;<span class="hljs-doctag">@code</span> beansOfTypeIncludingAncestors&#125;</span><br><span class="hljs-comment"> * to include beans in ancestor factories too.</span><br><span class="hljs-comment"> * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered</span><br><span class="hljs-comment"> * by other means than bean definitions.</span><br><span class="hljs-comment"> * &lt;p&gt;The Map returned by this method should always return bean names and</span><br><span class="hljs-comment"> * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the</span><br><span class="hljs-comment"> * backend configuration, as far as possible.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> type the class or interface to match, or &#123;<span class="hljs-doctag">@code</span> null&#125; for all concrete beans</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> includeNonSingletons whether to include prototype or scoped beans too</span><br><span class="hljs-comment"> * or just singletons (also applies to FactoryBeans)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and</span><br><span class="hljs-comment"> * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a</span><br><span class="hljs-comment"> * &quot;factory-bean&quot; reference) for the type check. Note that FactoryBeans need to be</span><br><span class="hljs-comment"> * eagerly initialized to determine their type: So be aware that passing in &quot;true&quot;</span><br><span class="hljs-comment"> * for this flag will initialize FactoryBeans and &quot;factory-bean&quot; references.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a Map with the matching beans, containing the bean names as</span><br><span class="hljs-comment"> * keys and the corresponding bean instances as values</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if a bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> FactoryBean#getObjectType</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</span><br><span class="hljs-comment"> */</span><br>&lt;T&gt; <span class="hljs-function">Map&lt;String, T&gt; <span class="hljs-title">getBeansOfType</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> Class&lt;T&gt; type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Find all names of beans which are annotated with the supplied &#123;<span class="hljs-doctag">@link</span> Annotation&#125;</span><br><span class="hljs-comment"> * type, without creating corresponding bean instances yet.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means</span><br><span class="hljs-comment"> * that FactoryBeans will get initialized in order to determine their object type.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> annotationType the type of annotation to look for</span><br><span class="hljs-comment"> * (at class, interface or factory method level of the specified bean)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the names of all matching beans</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 4.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #findAnnotationOnBean</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Find all beans which are annotated with the supplied &#123;<span class="hljs-doctag">@link</span> Annotation&#125; type,</span><br><span class="hljs-comment"> * returning a Map of bean names with corresponding bean instances.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means</span><br><span class="hljs-comment"> * that FactoryBeans will get initialized in order to determine their object type.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> annotationType the type of annotation to look for</span><br><span class="hljs-comment"> * (at class, interface or factory method level of the specified bean)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a Map with the matching beans, containing the bean names as</span><br><span class="hljs-comment"> * keys and the corresponding bean instances as values</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> BeansException if a bean could not be created</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 3.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #findAnnotationOnBean</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Map&lt;String, Object&gt; <span class="hljs-title">getBeansWithAnnotation</span><span class="hljs-params">(Class&lt;? extends Annotation&gt; annotationType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Find an &#123;<span class="hljs-doctag">@link</span> Annotation&#125; of &#123;<span class="hljs-doctag">@code</span> annotationType&#125; on the specified bean,</span><br><span class="hljs-comment"> * traversing its interfaces and super classes if no annotation can be found on</span><br><span class="hljs-comment"> * the given class itself, as well as checking the bean&#x27;s factory method (if any).</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> beanName the name of the bean to look for annotations on</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> annotationType the type of annotation to look for</span><br><span class="hljs-comment"> * (at class, interface or factory method level of the specified bean)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the annotation of the given type if found, or &#123;<span class="hljs-doctag">@code</span> null&#125; otherwise</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> NoSuchBeanDefinitionException if there is no bean with the given name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 3.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBeanNamesForAnnotation</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getBeansWithAnnotation</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>&lt;A extends Annotation&gt; <span class="hljs-function">A <span class="hljs-title">findAnnotationOnBean</span><span class="hljs-params">(String beanName, Class&lt;A&gt; annotationType)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ListableBeanFactory方法属性摘要"><a href="#ListableBeanFactory方法属性摘要" class="headerlink" title="ListableBeanFactory方法属性摘要"></a>ListableBeanFactory方法属性摘要</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ListableBeanFactory</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BeanFactory</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsBeanDefinition</span><span class="hljs-params">(String beanName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getBeanDefinitionCount</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getBeanDefinitionNames();<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(ResolvableType type);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(ResolvableType type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(<span class="hljs-meta">@Nullable</span> Class&lt;?&gt; type);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> */</span><br>String[] getBeanNamesForType(<span class="hljs-meta">@Nullable</span> Class&lt;?&gt; type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit);<br><br><br>&lt;T&gt; <span class="hljs-function">Map&lt;String, T&gt; <span class="hljs-title">getBeansOfType</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> Class&lt;T&gt; type)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><br>&lt;T&gt; <span class="hljs-function">Map&lt;String, T&gt; <span class="hljs-title">getBeansOfType</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> Class&lt;T&gt; type, <span class="hljs-keyword">boolean</span> includeNonSingletons, <span class="hljs-keyword">boolean</span> allowEagerInit)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeansException</span>;<br><br><br>String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);<br><br><br><span class="hljs-function">Map&lt;String, Object&gt; <span class="hljs-title">getBeansWithAnnotation</span><span class="hljs-params">(Class&lt;? extends Annotation&gt; annotationType)</span> <span class="hljs-keyword">throws</span> BeansException</span>;<br><br><br><span class="hljs-meta">@Nullable</span><br>&lt;A extends Annotation&gt; <span class="hljs-function">A <span class="hljs-title">findAnnotationOnBean</span><span class="hljs-params">(String beanName, Class&lt;A&gt; annotationType)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> NoSuchBeanDefinitionException</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-4-ApplicationContext接口"><a href="#1-4-ApplicationContext接口" class="headerlink" title="1.4 ApplicationContext接口"></a>1.4 ApplicationContext接口</h2><h3 id="ApplicationContext接口解析"><a href="#ApplicationContext接口解析" class="headerlink" title="ApplicationContext接口解析"></a>ApplicationContext接口解析</h3><ul><li>相比于BeanFactory,ApplicationContext是高配版的Ioc容器，其在BeanFactory的基础上实现了更加复杂的扩展功能</li><li>ListableBeanFactory, HierarchicalBeanFactory都是BeanFactory的子接口，ApplicationContext继承了这两个接口，ApplicationContext进一步扩展了BeanFactory接口的功能</li><li>. . .</li></ul><h3 id="完整版源码：-3"><a href="#完整版源码：-3" class="headerlink" title="完整版源码："></a>完整版源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright 2002-2014 the original author or authors.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"> * You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.springframework.context;<br><br><span class="hljs-keyword">import</span> org.springframework.beans.factory.HierarchicalBeanFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.ListableBeanFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.config.AutowireCapableBeanFactory;<br><span class="hljs-keyword">import</span> org.springframework.core.env.EnvironmentCapable;<br><span class="hljs-keyword">import</span> org.springframework.core.io.support.ResourcePatternResolver;<br><span class="hljs-keyword">import</span> org.springframework.lang.Nullable;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Central interface to provide configuration for an application.</span><br><span class="hljs-comment"> * This is read-only while the application is running, but may be</span><br><span class="hljs-comment"> * reloaded if the implementation supports this.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;An ApplicationContext provides:</span><br><span class="hljs-comment"> * &lt;ul&gt;</span><br><span class="hljs-comment"> * &lt;li&gt;Bean factory methods for accessing application components.</span><br><span class="hljs-comment"> * Inherited from &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.ListableBeanFactory&#125;.</span><br><span class="hljs-comment"> * &lt;li&gt;The ability to load file resources in a generic fashion.</span><br><span class="hljs-comment"> * Inherited from the &#123;<span class="hljs-doctag">@link</span> org.springframework.core.io.ResourceLoader&#125; interface.</span><br><span class="hljs-comment"> * &lt;li&gt;The ability to publish events to registered listeners.</span><br><span class="hljs-comment"> * Inherited from the &#123;<span class="hljs-doctag">@link</span> ApplicationEventPublisher&#125; interface.</span><br><span class="hljs-comment"> * &lt;li&gt;The ability to resolve messages, supporting internationalization.</span><br><span class="hljs-comment"> * Inherited from the &#123;<span class="hljs-doctag">@link</span> MessageSource&#125; interface.</span><br><span class="hljs-comment"> * &lt;li&gt;Inheritance from a parent context. Definitions in a descendant context</span><br><span class="hljs-comment"> * will always take priority. This means, for example, that a single parent</span><br><span class="hljs-comment"> * context can be used by an entire web application, while each servlet has</span><br><span class="hljs-comment"> * its own child context that is independent of that of any other servlet.</span><br><span class="hljs-comment"> * &lt;/ul&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;In addition to standard &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.BeanFactory&#125;</span><br><span class="hljs-comment"> * lifecycle capabilities, ApplicationContext implementations detect and invoke</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> ApplicationContextAware&#125; beans as well as &#123;<span class="hljs-doctag">@link</span> ResourceLoaderAware&#125;,</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> ApplicationEventPublisherAware&#125; and &#123;<span class="hljs-doctag">@link</span> MessageSourceAware&#125; beans.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Rod Johnson</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Juergen Hoeller</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ConfigurableApplicationContext</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.BeanFactory</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.core.io.ResourceLoader</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ApplicationContext</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EnvironmentCapable</span>, <span class="hljs-title">ListableBeanFactory</span>, <span class="hljs-title">HierarchicalBeanFactory</span>,</span><br><span class="hljs-class"><span class="hljs-title">MessageSource</span>, <span class="hljs-title">ApplicationEventPublisher</span>, <span class="hljs-title">ResourcePatternResolver</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the unique id of this application context.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the unique id of the context, or &#123;<span class="hljs-doctag">@code</span> null&#125; if none</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getId</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a name for the deployed application that this context belongs to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a name for the deployed application, or the empty String by default</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">String <span class="hljs-title">getApplicationName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a friendly name for this context.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> a display name for this context (never &#123;<span class="hljs-doctag">@code</span> null&#125;)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">String <span class="hljs-title">getDisplayName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the timestamp when this context was first loaded.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the timestamp (ms) when this context was first loaded</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-title">getStartupDate</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the parent context, or &#123;<span class="hljs-doctag">@code</span> null&#125; if there is no parent</span><br><span class="hljs-comment"> * and this is the root of the context hierarchy.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the parent context, or &#123;<span class="hljs-doctag">@code</span> null&#125; if there is no parent</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">ApplicationContext <span class="hljs-title">getParent</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Expose AutowireCapableBeanFactory functionality for this context.</span><br><span class="hljs-comment"> * &lt;p&gt;This is not typically used by application code, except for the purpose of</span><br><span class="hljs-comment"> * initializing bean instances that live outside of the application context,</span><br><span class="hljs-comment"> * applying the Spring bean lifecycle (fully or partly) to them.</span><br><span class="hljs-comment"> * &lt;p&gt;Alternatively, the internal BeanFactory exposed by the</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> ConfigurableApplicationContext&#125; interface offers access to the</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> AutowireCapableBeanFactory&#125; interface too. The present method mainly</span><br><span class="hljs-comment"> * serves as a convenient, specific facility on the ApplicationContext interface.</span><br><span class="hljs-comment"> * &lt;p&gt;&lt;b&gt;<span class="hljs-doctag">NOTE:</span> As of 4.2, this method will consistently throw IllegalStateException</span><br><span class="hljs-comment"> * after the application context has been closed.&lt;/b&gt; In current Spring Framework</span><br><span class="hljs-comment"> * versions, only refreshable application contexts behave that way; as of 4.2,</span><br><span class="hljs-comment"> * all application context implementations will be required to comply.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the AutowireCapableBeanFactory for this context</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IllegalStateException if the context does not support the</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> AutowireCapableBeanFactory&#125; interface, or does not hold an</span><br><span class="hljs-comment"> * autowire-capable bean factory yet (e.g. if &#123;<span class="hljs-doctag">@code</span> refresh()&#125; has</span><br><span class="hljs-comment"> * never been called), or if the context has been closed already</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ConfigurableApplicationContext#refresh()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ConfigurableApplicationContext#getBeanFactory()</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">AutowireCapableBeanFactory <span class="hljs-title">getAutowireCapableBeanFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IllegalStateException</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ApplicationContext方法属性摘要"><a href="#ApplicationContext方法属性摘要" class="headerlink" title="ApplicationContext方法属性摘要"></a>ApplicationContext方法属性摘要</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ApplicationContext</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EnvironmentCapable</span>, <span class="hljs-title">ListableBeanFactory</span>, <span class="hljs-title">HierarchicalBeanFactory</span>,</span><br><span class="hljs-class"><span class="hljs-title">MessageSource</span>, <span class="hljs-title">ApplicationEventPublisher</span>, <span class="hljs-title">ResourcePatternResolver</span> </span>&#123;<br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getId</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function">String <span class="hljs-title">getApplicationName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function">String <span class="hljs-title">getDisplayName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-title">getStartupDate</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">ApplicationContext <span class="hljs-title">getParent</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-function">AutowireCapableBeanFactory <span class="hljs-title">getAutowireCapableBeanFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IllegalStateException</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-5-BeanDefination接口"><a href="#1-5-BeanDefination接口" class="headerlink" title="1.5 BeanDefination接口"></a>1.5 BeanDefination接口</h2><h3 id="BeanDefination接口定义解析"><a href="#BeanDefination接口定义解析" class="headerlink" title="BeanDefination接口定义解析"></a>BeanDefination接口定义解析</h3><ul><li>BeanDefination用于管理Ioc容器中JavaBean与JavaBean之间的依赖关系，其抽象了Java开发人员对于JavaBean的定义</li><li>Spring将开发人员定义的JavaBean的数据结构转化为内存中的BeanDefination数据结构进行维护</li></ul><h3 id="完整版源码：-4"><a href="#完整版源码：-4" class="headerlink" title="完整版源码："></a>完整版源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Copyright 2002-2019 the original author or authors.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"> * you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"> * You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.springframework.beans.factory.config;<br><br><span class="hljs-keyword">import</span> org.springframework.beans.BeanMetadataElement;<br><span class="hljs-keyword">import</span> org.springframework.beans.MutablePropertyValues;<br><span class="hljs-keyword">import</span> org.springframework.core.AttributeAccessor;<br><span class="hljs-keyword">import</span> org.springframework.core.ResolvableType;<br><span class="hljs-keyword">import</span> org.springframework.lang.Nullable;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A BeanDefinition describes a bean instance, which has property values,</span><br><span class="hljs-comment"> * constructor argument values, and further information supplied by</span><br><span class="hljs-comment"> * concrete implementations.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;This is just a minimal interface: The main intention is to allow a</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> BeanFactoryPostProcessor&#125; to introspect and modify property values</span><br><span class="hljs-comment"> * and other bean metadata.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Juergen Hoeller</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Rob Harrop</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 19.03.2004</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ConfigurableListableBeanFactory#getBeanDefinition</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.support.RootBeanDefinition</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> org.springframework.beans.factory.support.ChildBeanDefinition</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">BeanDefinition</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AttributeAccessor</span>, <span class="hljs-title">BeanMetadataElement</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Scope identifier for the standard singleton scope: &quot;singleton&quot;.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that extended bean factories might support further scopes.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setScope</span><br><span class="hljs-comment"> */</span><br>String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Scope identifier for the standard prototype scope: &quot;prototype&quot;.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that extended bean factories might support further scopes.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setScope</span><br><span class="hljs-comment"> */</span><br>String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Role hint indicating that a &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125; is a major part</span><br><span class="hljs-comment"> * of the application. Typically corresponds to a user-defined bean.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">int</span> ROLE_APPLICATION = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Role hint indicating that a &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125; is a supporting</span><br><span class="hljs-comment"> * part of some larger configuration, typically an outer</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.parsing.ComponentDefinition&#125;.</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@code</span> SUPPORT&#125; beans are considered important enough to be aware</span><br><span class="hljs-comment"> * of when looking more closely at a particular</span><br><span class="hljs-comment"> * &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.parsing.ComponentDefinition&#125;,</span><br><span class="hljs-comment"> * but not when looking at the overall configuration of an application.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">int</span> ROLE_SUPPORT = <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Role hint indicating that a &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125; is providing an</span><br><span class="hljs-comment"> * entirely background role and has no relevance to the end-user. This hint is</span><br><span class="hljs-comment"> * used when registering beans that are completely part of the internal workings</span><br><span class="hljs-comment"> * of a &#123;<span class="hljs-doctag">@link</span> org.springframework.beans.factory.parsing.ComponentDefinition&#125;.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">int</span> ROLE_INFRASTRUCTURE = <span class="hljs-number">2</span>;<br><br><br><span class="hljs-comment">// Modifiable attributes</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set the name of the parent definition of this bean definition, if any.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setParentName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String parentName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the name of the parent definition of this bean definition, if any.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getParentName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Specify the bean class name of this bean definition.</span><br><span class="hljs-comment"> * &lt;p&gt;The class name can be modified during bean factory post-processing,</span><br><span class="hljs-comment"> * typically replacing the original class name with a parsed variant of it.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setParentName</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setFactoryBeanName</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setFactoryMethodName</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setBeanClassName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String beanClassName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the current bean class name of this bean definition.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that this does not have to be the actual class name used at runtime, in</span><br><span class="hljs-comment"> * case of a child definition overriding/inheriting the class name from its parent.</span><br><span class="hljs-comment"> * Also, this may just be the class that a factory method is called on, or it may</span><br><span class="hljs-comment"> * even be empty in case of a factory bean reference that a method is called on.</span><br><span class="hljs-comment"> * Hence, do &lt;i&gt;not&lt;/i&gt; consider this to be the definitive bean type at runtime but</span><br><span class="hljs-comment"> * rather only use it for parsing purposes at the individual bean definition level.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getParentName()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getFactoryBeanName()</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getFactoryMethodName()</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getBeanClassName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Override the target scope of this bean, specifying a new scope name.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #SCOPE_SINGLETON</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #SCOPE_PROTOTYPE</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setScope</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String scope)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the name of the current target scope for this bean,</span><br><span class="hljs-comment"> * or &#123;<span class="hljs-doctag">@code</span> null&#125; if not known yet.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getScope</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set whether this bean should be lazily initialized.</span><br><span class="hljs-comment"> * &lt;p&gt;If &#123;<span class="hljs-doctag">@code</span> false&#125;, the bean will get instantiated on startup by bean</span><br><span class="hljs-comment"> * factories that perform eager initialization of singletons.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setLazyInit</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> lazyInit)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this bean should be lazily initialized, i.e. not</span><br><span class="hljs-comment"> * eagerly instantiated on startup. Only applicable to a singleton bean.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isLazyInit</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set the names of the beans that this bean depends on being initialized.</span><br><span class="hljs-comment"> * The bean factory will guarantee that these beans get initialized first.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDependsOn</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String... dependsOn)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the bean names that this bean depends on.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>String[] getDependsOn();<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set whether this bean is a candidate for getting autowired into some other bean.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that this flag is designed to only affect type-based autowiring.</span><br><span class="hljs-comment"> * It does not affect explicit references by name, which will get resolved even</span><br><span class="hljs-comment"> * if the specified bean is not marked as an autowire candidate. As a consequence,</span><br><span class="hljs-comment"> * autowiring by name will nevertheless inject a bean if the name matches.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setAutowireCandidate</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> autowireCandidate)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this bean is a candidate for getting autowired into some other bean.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isAutowireCandidate</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set whether this bean is a primary autowire candidate.</span><br><span class="hljs-comment"> * &lt;p&gt;If this value is &#123;<span class="hljs-doctag">@code</span> true&#125; for exactly one bean among multiple</span><br><span class="hljs-comment"> * matching candidates, it will serve as a tie-breaker.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setPrimary</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> primary)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this bean is a primary autowire candidate.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrimary</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Specify the factory bean to use, if any.</span><br><span class="hljs-comment"> * This the name of the bean to call the specified factory method on.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setFactoryMethodName</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFactoryBeanName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String factoryBeanName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the factory bean name, if any.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getFactoryBeanName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Specify a factory method, if any. This method will be invoked with</span><br><span class="hljs-comment"> * constructor arguments, or with no arguments if none are specified.</span><br><span class="hljs-comment"> * The method will be invoked on the specified factory bean, if any,</span><br><span class="hljs-comment"> * or otherwise as a static method on the local bean class.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setFactoryBeanName</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #setBeanClassName</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFactoryMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String factoryMethodName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a factory method, if any.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getFactoryMethodName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the constructor argument values for this bean.</span><br><span class="hljs-comment"> * &lt;p&gt;The returned instance can be modified during bean factory post-processing.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the ConstructorArgumentValues object (never &#123;<span class="hljs-doctag">@code</span> null&#125;)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ConstructorArgumentValues <span class="hljs-title">getConstructorArgumentValues</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return if there are constructor argument values defined for this bean.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.0.2</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">default</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasConstructorArgumentValues</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> !getConstructorArgumentValues().isEmpty();<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the property values to be applied to a new instance of the bean.</span><br><span class="hljs-comment"> * &lt;p&gt;The returned instance can be modified during bean factory post-processing.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the MutablePropertyValues object (never &#123;<span class="hljs-doctag">@code</span> null&#125;)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">MutablePropertyValues <span class="hljs-title">getPropertyValues</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return if there are property values values defined for this bean.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.0.2</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">default</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasPropertyValues</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> !getPropertyValues().isEmpty();<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set the name of the initializer method.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setInitMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String initMethodName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the name of the initializer method.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getInitMethodName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set the name of the destroy method.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDestroyMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String destroyMethodName)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the name of the destroy method.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getDestroyMethodName</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set the role hint for this &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125;. The role hint</span><br><span class="hljs-comment"> * provides the frameworks as well as tools with an indication of</span><br><span class="hljs-comment"> * the role and importance of a particular &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125;.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_APPLICATION</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_SUPPORT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_INFRASTRUCTURE</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setRole</span><span class="hljs-params">(<span class="hljs-keyword">int</span> role)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Get the role hint for this &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125;. The role hint</span><br><span class="hljs-comment"> * provides the frameworks as well as tools with an indication of</span><br><span class="hljs-comment"> * the role and importance of a particular &#123;<span class="hljs-doctag">@code</span> BeanDefinition&#125;.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_APPLICATION</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_SUPPORT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #ROLE_INFRASTRUCTURE</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getRole</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Set a human-readable description of this bean definition.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDescription</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String description)</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a human-readable description of this bean definition.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getDescription</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-comment">// Read-only attributes</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a resolvable type for this bean definition,</span><br><span class="hljs-comment"> * based on the bean class or other specific metadata.</span><br><span class="hljs-comment"> * &lt;p&gt;This is typically fully resolved on a runtime-merged bean definition</span><br><span class="hljs-comment"> * but not necessarily on a configuration-time definition instance.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> the resolvable type (potentially &#123;<span class="hljs-doctag">@link</span> ResolvableType#NONE&#125;)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 5.2</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> ConfigurableBeanFactory#getMergedBeanDefinition</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResolvableType <span class="hljs-title">getResolvableType</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this a &lt;b&gt;Singleton&lt;/b&gt;, with a single, shared instance</span><br><span class="hljs-comment"> * returned on all calls.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #SCOPE_SINGLETON</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isSingleton</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this a &lt;b&gt;Prototype&lt;/b&gt;, with an independent instance</span><br><span class="hljs-comment"> * returned for each call.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 3.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #SCOPE_PROTOTYPE</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrototype</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return whether this bean is &quot;abstract&quot;, that is, not meant to be instantiated.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isAbstract</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return a description of the resource that this bean definition</span><br><span class="hljs-comment"> * came from (for the purpose of showing context in case of errors).</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getResourceDescription</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the originating BeanDefinition, or &#123;<span class="hljs-doctag">@code</span> null&#125; if none.</span><br><span class="hljs-comment"> * Allows for retrieving the decorated bean definition, if any.</span><br><span class="hljs-comment"> * &lt;p&gt;Note that this method returns the immediate originator. Iterate through the</span><br><span class="hljs-comment"> * originator chain to find the original BeanDefinition as defined by the user.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">BeanDefinition <span class="hljs-title">getOriginatingBeanDefinition</span><span class="hljs-params">()</span></span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="BeanDefination方法属性摘要"><a href="#BeanDefination方法属性摘要" class="headerlink" title="BeanDefination方法属性摘要"></a>BeanDefination方法属性摘要</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">BeanDefinition</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AttributeAccessor</span>, <span class="hljs-title">BeanMetadataElement</span> </span>&#123;<br><br>String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;<br><br>String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;<br><br><span class="hljs-keyword">int</span> ROLE_APPLICATION = <span class="hljs-number">0</span>;<br><br><br><span class="hljs-keyword">int</span> ROLE_SUPPORT = <span class="hljs-number">1</span>;<br><br>    <span class="hljs-comment">// infrastructure</span><br><span class="hljs-keyword">int</span> ROLE_INFRASTRUCTURE = <span class="hljs-number">2</span>;<br><br><br><span class="hljs-comment">// Modifiable attributes</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setParentName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String parentName)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getParentName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setBeanClassName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String beanClassName)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getBeanClassName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setScope</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String scope)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getScope</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setLazyInit</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> lazyInit)</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isLazyInit</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDependsOn</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String... dependsOn)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br>String[] getDependsOn();<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setAutowireCandidate</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> autowireCandidate)</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isAutowireCandidate</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setPrimary</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> primary)</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrimary</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFactoryBeanName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String factoryBeanName)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getFactoryBeanName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFactoryMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String factoryMethodName)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getFactoryMethodName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function">ConstructorArgumentValues <span class="hljs-title">getConstructorArgumentValues</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">default</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasConstructorArgumentValues</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> !getConstructorArgumentValues().isEmpty();<br>&#125;<br><br><br><span class="hljs-function">MutablePropertyValues <span class="hljs-title">getPropertyValues</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">default</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasPropertyValues</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> !getPropertyValues().isEmpty();<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setInitMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String initMethodName)</span></span>;<br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getInitMethodName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDestroyMethodName</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String destroyMethodName)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getDestroyMethodName</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setRole</span><span class="hljs-params">(<span class="hljs-keyword">int</span> role)</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getRole</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDescription</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String description)</span></span>;<br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getDescription</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-comment">// Read-only attributes</span><br><br><br><span class="hljs-function">ResolvableType <span class="hljs-title">getResolvableType</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isSingleton</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isPrototype</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isAbstract</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">String <span class="hljs-title">getResourceDescription</span><span class="hljs-params">()</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">BeanDefinition <span class="hljs-title">getOriginatingBeanDefinition</span><span class="hljs-params">()</span></span>;<br><br>&#125;<br><br><br><br><span class="hljs-comment">// org.springframework.core.AttributeAccessor</span><br><span class="hljs-keyword">package</span> org.springframework.core;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">AttributeAccessor</span> </span>&#123;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setAttribute</span><span class="hljs-params">(String name, <span class="hljs-meta">@Nullable</span> Object value)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">Object <span class="hljs-title">getAttribute</span><span class="hljs-params">(String name)</span></span>;<br><br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function">Object <span class="hljs-title">removeAttribute</span><span class="hljs-params">(String name)</span></span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">hasAttribute</span><span class="hljs-params">(String name)</span></span>;<br><br><br>String[] attributeNames();<br><br>&#125;<br><br><br><br><span class="hljs-comment">// org.springframework.beans.BeanMetadataElemen</span><br><span class="hljs-keyword">package</span> org.springframework.beans;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">BeanMetadataElement</span> </span>&#123;<br><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function"><span class="hljs-keyword">default</span> Object <span class="hljs-title">getSource</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><h1 id="2-从一个Demo程序开始"><a href="#2-从一个Demo程序开始" class="headerlink" title="2.从一个Demo程序开始"></a>2.从一个Demo程序开始</h1><h2 id="2-1-Demo项目配置"><a href="#2-1-Demo项目配置" class="headerlink" title="2.1 Demo项目配置"></a>2.1 Demo项目配置</h2><h3 id="maven的pom-xml配置文件"><a href="#maven的pom-xml配置文件" class="headerlink" title="maven的pom.xml配置文件"></a>maven的pom.xml配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--        &lt;parent&gt;--&gt;</span><br>    <span class="hljs-comment">&lt;!--            &lt;groupId&gt;com.acanx&lt;/groupId&gt;--&gt;</span><br>    <span class="hljs-comment">&lt;!--            &lt;artifactId&gt;ACANX-JavaEE-Dependencies&lt;/artifactId&gt;--&gt;</span><br>    <span class="hljs-comment">&lt;!--            &lt;version&gt;0.0.1&lt;/version&gt;--&gt;</span><br>    <span class="hljs-comment">&lt;!--        &lt;/parent&gt;--&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.acanx<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>JavaWeb-Spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>JavaWeb-Spring<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>JavaWeb-Spring project<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.reporting.outputEncoding</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">spring.version</span>&gt;</span>5.2.1.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">spring.version</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- log4j日志文件管理包版本 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">slf4j.version</span>&gt;</span>2.0.0-alpha1<span class="hljs-tag">&lt;/<span class="hljs-name">slf4j.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">logback.version</span>&gt;</span>1.3.0-alpha5<span class="hljs-tag">&lt;/<span class="hljs-name">logback.version</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- log4j日志包版本号 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">log4j2.version</span>&gt;</span>2.8.2<span class="hljs-tag">&lt;/<span class="hljs-name">log4j2.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">log4j.version</span>&gt;</span>1.2.17<span class="hljs-tag">&lt;/<span class="hljs-name">log4j.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">junit.version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">junit.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">fastjson.version</span>&gt;</span>1.2.62<span class="hljs-tag">&lt;/<span class="hljs-name">fastjson.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven-compiler-plugin.version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">maven-compiler-plugin.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 添加fastjson --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--  单元测试--&gt;</span><br>        <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="2-2-Demo程序"><a href="#2-2-Demo程序" class="headerlink" title="2.2 Demo程序"></a>2.2 Demo程序</h2><h3 id="2-2-1启动类"><a href="#2-2-1启动类" class="headerlink" title="2.2.1启动类"></a>2.2.1启动类</h3><ul><li>代码位置:com.acanx.spring.xml.CspringIocConfigByFileSystemXmlApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">package</span> com.acanx.spring.xml;<br><br><span class="hljs-keyword">import</span> com.acanx.spring.bean.Car;<br><span class="hljs-keyword">import</span> org.apache.commons.logging.Log;<br><span class="hljs-keyword">import</span> org.apache.commons.logging.LogFactory;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> org.springframework.context.ApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.context.support.FileSystemXmlApplicationContext;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * ACANX-JavaWeb / com.acanx.spring.xml / SpringIocConfigByXmlFileInClassPath.java</span><br><span class="hljs-comment"> * 文件由 ACANX 创建于 2019/7/30 - 13:39</span><br><span class="hljs-comment"> * Description  SpringIocConfigByXmlFileInClassPath:</span><br><span class="hljs-comment"> * 补充说明： 使用FileSystemXmlApplicationContext加载文件系统下的配置文件</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> ACANX</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@version</span> 0.0.1.0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2019/7/30  13:39</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 0.0.1-SNAPSHOT</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CspringIocConfigByFileSystemXmlApplicationContext</span> </span>&#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Logger logger= LoggerFactory.getLogger(CspringIocConfigByFileSystemXmlApplicationContext.class);<br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span>  </span>&#123;<br>        logger.info(<span class="hljs-string">&quot;-------------------&quot;</span>);<br>        logger.info(System.getProperty(<span class="hljs-string">&quot;org.apache.commons.logging.LogFactory&quot;</span>));<br>        logger.info(System.getProperty(<span class="hljs-string">&quot;org.apache.commons.logging.Log&quot;</span>));<br>        logger.info(<span class="hljs-string">&quot;-------------------&quot;</span>);<br>        String location=<span class="hljs-string">&quot;D:\\ProgramCode\\JavaCode\\ACANX-JavaWeb\\JavaWeb-Spring\\ApplicationContextC.xml&quot;</span>;<br>        ApplicationContext applicationContext = <span class="hljs-keyword">new</span> FileSystemXmlApplicationContext(location);<br>        Car car = (Car) applicationContext.getBean(<span class="hljs-string">&quot;myCar&quot;</span>);<br>        logger.info(car.toString());<br>        logger.info(<span class="hljs-string">&quot;Info :&#123;&#125;&quot;</span>,logger.isInfoEnabled());<br>        String[] beanNames=applicationContext.getBeanDefinitionNames();<br>        <span class="hljs-keyword">for</span> (String beanName:beanNames) &#123;<br>             logger.info(beanName+<span class="hljs-string">&quot;::::: &quot;</span>+applicationContext.getBean(beanName).toString());<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="2-2-2使用到的Bena对象"><a href="#2-2-2使用到的Bena对象" class="headerlink" title="2.2.2使用到的Bena对象"></a>2.2.2使用到的Bena对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.acanx.spring.bean;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Car</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span>  String name;<br><br>    <span class="hljs-keyword">private</span>  String price;<br><br><span class="hljs-comment">// get set 默认构造方法已省略</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2-3-springContext的xml文件ApplicationContextC-xml"><a href="#2-2-3-springContext的xml文件ApplicationContextC-xml" class="headerlink" title="2.2.3 springContext的xml文件ApplicationContextC.xml"></a>2.2.3 springContext的xml文件ApplicationContextC.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myCar&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.acanx.spring.bean.Car&quot;</span> &gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;QQAI&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;price&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;2222&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="2-2-4-配置日志-logback-xml（resources文件夹下）"><a href="#2-2-4-配置日志-logback-xml（resources文件夹下）" class="headerlink" title="2.2.4 配置日志 logback.xml（resources文件夹下）"></a>2.2.4 配置日志 logback.xml（resources文件夹下）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span> <span class="hljs-attr">scan</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">scanPeriod</span>=<span class="hljs-string">&quot;60 seconds&quot;</span> <span class="hljs-attr">debug</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LOG_PATH&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.log&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;APP_NAME&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;IOCDemo&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--设置系统日志目录--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;APP_DIR&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;app-IOCDemo&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;CONSOLE_LOG_PATTERN&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;[CLP]$&#123;CONSOLE_LOG_PATTERN:-%clr(%d&#123;$&#123;LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS&#125;&#125;)&#123;faint&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(---)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %clr(%-40.40logger&#123;39&#125;)&#123;cyan&#125; %clr(%-15.15method)&#123;cyan&#125; %clr([%4.4line&#123;4&#125;])&#123;magenta&#125; %clr(:)&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;FILE_LOG_PATTERN&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;FILE_LOG_PATTERN:-%d&#123;$&#123;LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS&#125;&#125; $&#123;LOG_LEVEL_PATTERN:-%5p&#125; $&#123;PID:- &#125; --- [%t] %-40.40logger&#123;39&#125; : %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;CONSOLE_LOGBACK_PATTERN&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;[控制台] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level | %-80logger # %-40M [%4line] : %msg%n&quot;</span>/&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">contextName</span>&gt;</span>logback<span class="hljs-tag">&lt;/<span class="hljs-name">contextName</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--输出到控制台--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;CONSOLE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--  文件名 [%file]--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ERROR_FILE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>ERROR<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMatch</span>&gt;</span>ACCEPT<span class="hljs-tag">&lt;/<span class="hljs-name">onMatch</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMismatch</span>&gt;</span>DENY<span class="hljs-tag">&lt;/<span class="hljs-name">onMismatch</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">File</span>&gt;</span>.log/ACANX-JavaWeb/LOG-ERROR.log<span class="hljs-tag">&lt;/<span class="hljs-name">File</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>.log/server-error-%d&#123;yyyyMMdd&#125;.log.%i<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>5MB<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;WARN_FILE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>WARN<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMatch</span>&gt;</span>ACCEPT<span class="hljs-tag">&lt;/<span class="hljs-name">onMatch</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMismatch</span>&gt;</span>DENY<span class="hljs-tag">&lt;/<span class="hljs-name">onMismatch</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">File</span>&gt;</span>.log/ACANX-JavaWeb/LOG-WARN.log<span class="hljs-tag">&lt;/<span class="hljs-name">File</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>.log/ACANX-JavaWeb/server-WARN-%d&#123;yyyyMMdd&#125;.log.%i<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>5MB<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;INFO_FILE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">File</span>&gt;</span>.log/ACANX-JavaWeb/LOG-INFO.log<span class="hljs-tag">&lt;/<span class="hljs-name">File</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>INFO<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMatch</span>&gt;</span>ACCEPT<span class="hljs-tag">&lt;/<span class="hljs-name">onMatch</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMismatch</span>&gt;</span>DENY<span class="hljs-tag">&lt;/<span class="hljs-name">onMismatch</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>.log/ACANX-JavaWeb/server-info-%d&#123;yyyyMMdd&#125;.log.%i<span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>5MB<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TRACE_FILE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMatch</span>&gt;</span>ACCEPT<span class="hljs-tag">&lt;/<span class="hljs-name">onMatch</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">onMismatch</span>&gt;</span>DENY<span class="hljs-tag">&lt;/<span class="hljs-name">onMismatch</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">File</span>&gt;</span>.log/ACANX-JavaWeb/LOG-TRACE.log<span class="hljs-tag">&lt;/<span class="hljs-name">File</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>.log/ACANX-JavaWeb/server-TRACE-%d&#123;yyyyMMdd&#125;.log.%i<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>5MB<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;FULL_LEVEL_FILE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">File</span>&gt;</span>.log/ACANX-JavaWeb/LOG-FULL.log<span class="hljs-tag">&lt;/<span class="hljs-name">File</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--  文件名 [%file] --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>.log/ACANX-JavaWeb/LOG-FULL-%d&#123;yyyyMMdd&#125;.log.%i<span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>5MB<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOGBACK_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;TRACE&quot;</span> <span class="hljs-attr">additivity</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;CONSOLE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;WARN_FILE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;ERROR_FILE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;INFO_FILE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;TRACE_FILE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;FULL_LEVEL_FILE&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;TRACE&quot;</span> <span class="hljs-attr">additivity</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.springframework.context&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;TRACE&quot;</span> <span class="hljs-attr">additivity</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;TRACE&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.alibaba&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;TRACE&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!-- 如果这里设置了additivity=true 代码打印信息向上传递,将打印信息传递到root ，并且自己的appender-ref 也会打印，这样就是打印了俩次日志--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h1 id="3-Spring-IOC容器的创建"><a href="#3-Spring-IOC容器的创建" class="headerlink" title="3.Spring IOC容器的创建"></a>3.Spring IOC容器的创建</h1><h2 id="3-1-进入FileSystemXmlApplicationContext（AbstractXmlApplicationContext抽象类的具体实现类）"><a href="#3-1-进入FileSystemXmlApplicationContext（AbstractXmlApplicationContext抽象类的具体实现类）" class="headerlink" title="3.1 进入FileSystemXmlApplicationContext（AbstractXmlApplicationContext抽象类的具体实现类）"></a>3.1 进入FileSystemXmlApplicationContext（AbstractXmlApplicationContext抽象类的具体实现类）</h2><ul><li>代码位置: org.springframework.context.support.FileSystemXmlApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FileSystemXmlApplicationContext</span><span class="hljs-params">(String configLocation)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-keyword">this</span>(<span class="hljs-keyword">new</span> String[] &#123;configLocation&#125;, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">null</span>);<br>&#125;<br><br><br>   <span class="hljs-comment">// 上面的this 来到下面的重载构造方法</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FileSystemXmlApplicationContext</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">String[] configLocations, <span class="hljs-keyword">boolean</span> refresh, <span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><br><span class="hljs-keyword">super</span>(parent);  <span class="hljs-comment">// 初始化父容器AbstractApplicationContext</span><br>setConfigLocations(configLocations); <span class="hljs-comment">// 设置资源文件的位置</span><br><span class="hljs-keyword">if</span> (refresh) &#123;<br>refresh();<span class="hljs-comment">// 核心方法，具体定义在超类AbstractApplicationContext（抽象类）中，是一个模板方法</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="3-2-初始化父容器AbstractApplicationContext"><a href="#3-2-初始化父容器AbstractApplicationContext" class="headerlink" title="3.2 初始化父容器AbstractApplicationContext"></a>3.2 初始化父容器AbstractApplicationContext</h2><h3 id="3-2-1-AbstractXmlApplicationContext抽象类（FileSystemXmlApplicationContext的父类）"><a href="#3-2-1-AbstractXmlApplicationContext抽象类（FileSystemXmlApplicationContext的父类）" class="headerlink" title="3.2.1 AbstractXmlApplicationContext抽象类（FileSystemXmlApplicationContext的父类）"></a>3.2.1 AbstractXmlApplicationContext抽象类（FileSystemXmlApplicationContext的父类）</h3><ul><li>代码位置: org.springframework.context.support.AbstractXmlApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractXmlApplicationContext</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br><span class="hljs-keyword">super</span>(parent);<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2-2-AbstractRefreshableConfigApplicationContext抽象类（-AbstractXmlApplicationContext的父类）"><a href="#3-2-2-AbstractRefreshableConfigApplicationContext抽象类（-AbstractXmlApplicationContext的父类）" class="headerlink" title="3.2.2 AbstractRefreshableConfigApplicationContext抽象类（ AbstractXmlApplicationContext的父类）"></a>3.2.2 AbstractRefreshableConfigApplicationContext抽象类（ AbstractXmlApplicationContext的父类）</h3><ul><li>代码位置:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractRefreshableConfigApplicationContext</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br><span class="hljs-keyword">super</span>(parent);<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2-3-AbstractRefreshableApplicationContext抽象类"><a href="#3-2-3-AbstractRefreshableApplicationContext抽象类" class="headerlink" title="3.2.3 AbstractRefreshableApplicationContext抽象类"></a>3.2.3 AbstractRefreshableApplicationContext抽象类</h3><ul><li> 代码位置:org.springframework.context.support.AbstractRefreshableApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractRefreshableApplicationContext</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br><span class="hljs-keyword">super</span>(parent);<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2-4-AbstractApplicationContext抽象类"><a href="#3-2-4-AbstractApplicationContext抽象类" class="headerlink" title="3.2.4 AbstractApplicationContext抽象类"></a>3.2.4 AbstractApplicationContext抽象类</h3><ul><li>代码位置:org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractApplicationContext</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br><span class="hljs-keyword">this</span>();<br>setParent(parent);<br>&#125;<br><br>   <span class="hljs-comment">//上面对应的this()方法 </span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractApplicationContext</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">this</span>.resourcePatternResolver = getResourcePatternResolver();<br>&#125;<br><br>   <span class="hljs-comment">//上面对应的 getResourcePatternResolver()方法</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> ResourcePatternResolver <span class="hljs-title">getResourcePatternResolver</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> PathMatchingResourcePatternResolver(<span class="hljs-keyword">this</span>);<br>&#125;<br><br>   <span class="hljs-comment">// this()之后的setParent(parent);方法</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setParent</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.parent = parent;<br><span class="hljs-keyword">if</span> (parent != <span class="hljs-keyword">null</span>) &#123;<br>Environment parentEnvironment = parent.getEnvironment();<br><span class="hljs-keyword">if</span> (parentEnvironment <span class="hljs-keyword">instanceof</span> ConfigurableEnvironment) &#123;<br>getEnvironment().merge((ConfigurableEnvironment) parentEnvironment);<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h2 id="3-5-PathMatchingResourcePatternResolver类"><a href="#3-5-PathMatchingResourcePatternResolver类" class="headerlink" title="3.5 PathMatchingResourcePatternResolver类"></a>3.5 PathMatchingResourcePatternResolver类</h2><ul><li>PathMatchingResourcePatternResolver(this)对应的构造方法</li><li>代码位置:org.springframework.core.io.support.PathMatchingResourcePatternResolver.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PathMatchingResourcePatternResolver</span><span class="hljs-params">(ResourceLoader resourceLoader)</span> </span>&#123;<br>Assert.notNull(resourceLoader, <span class="hljs-string">&quot;ResourceLoader must not be null&quot;</span>);<br><span class="hljs-keyword">this</span>.resourceLoader = resourceLoader;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h1 id="4-setConfigLocations-String…-locations-方法"><a href="#4-setConfigLocations-String…-locations-方法" class="headerlink" title="4.setConfigLocations(String… locations) 方法"></a>4.setConfigLocations(String… locations) 方法</h1><ul><li>设置资源文件的位置</li></ul><h2 id="4-1-AbstractRefreshableConfigApplicationContext-setConfigLocations-Nullable-String…-locations-方法"><a href="#4-1-AbstractRefreshableConfigApplicationContext-setConfigLocations-Nullable-String…-locations-方法" class="headerlink" title="4.1 AbstractRefreshableConfigApplicationContext.setConfigLocations(@Nullable String… locations) 方法"></a>4.1 AbstractRefreshableConfigApplicationContext.setConfigLocations(@Nullable String… locations) 方法</h2><ul><li> 代码位置:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setConfigLocations</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> String... locations)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (locations != <span class="hljs-keyword">null</span>) &#123;<br>Assert.noNullElements(locations, <span class="hljs-string">&quot;Config locations must not be null&quot;</span>);<br><span class="hljs-keyword">this</span>.configLocations = <span class="hljs-keyword">new</span> String[locations.length];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; locations.length; i++) &#123;<br><span class="hljs-keyword">this</span>.configLocations[i] = resolvePath(locations[i]).trim();<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">this</span>.configLocations = <span class="hljs-keyword">null</span>;<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure></li></ul><h1 id="5-refresh-方法"><a href="#5-refresh-方法" class="headerlink" title="5. refresh()方法"></a>5. refresh()方法</h1><ul><li>AbstractApplicationContext抽象类中定义的refresh()模板方法</li><li>定义了需要执行刷新操作的一些步骤，只是一个模板，个性化的逻辑由其子类来具体实现<h2 id="5-1-refresh-方法定义"><a href="#5-1-refresh-方法定义" class="headerlink" title="5.1 refresh()方法定义"></a>5.1 refresh()方法定义</h2></li><li> 代码位置:org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">refresh</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> BeansException, IllegalStateException </span>&#123;<br><span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.startupShutdownMonitor) &#123;<br><span class="hljs-comment">// Prepare this context for refreshing.</span><br>prepareRefresh();<br><br><span class="hljs-comment">// Tell the subclass to refresh the internal bean factory.</span><br><span class="hljs-comment">// 创建BeanFactory</span><br>ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();<br><br><span class="hljs-comment">// Prepare the bean factory for use in this context.</span><br>prepareBeanFactory(beanFactory);<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// Allows post-processing of the bean factory in context subclasses.</span><br>postProcessBeanFactory(beanFactory);<br><br><span class="hljs-comment">// Invoke factory processors registered as beans in the context.</span><br>invokeBeanFactoryPostProcessors(beanFactory);<br><br><span class="hljs-comment">// Register bean processors that intercept bean creation.</span><br>registerBeanPostProcessors(beanFactory);<br><br><span class="hljs-comment">// Initialize message source for this context.</span><br>initMessageSource();<br><br><span class="hljs-comment">// Initialize event multicaster for this context.</span><br>initApplicationEventMulticaster();<br><br><span class="hljs-comment">// Initialize other special beans in specific context subclasses.</span><br>onRefresh();<br><br><span class="hljs-comment">// Check for listener beans and register them.</span><br>registerListeners();<br><br><span class="hljs-comment">// Instantiate all remaining (non-lazy-init) singletons.</span><br><span class="hljs-comment">// 实例化Bean</span><br>finishBeanFactoryInitialization(beanFactory);<br><br><span class="hljs-comment">// Last step: publish corresponding event.</span><br>finishRefresh();<br>&#125;<br><br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br><span class="hljs-keyword">if</span> (logger.isWarnEnabled()) &#123;<br>logger.warn(<span class="hljs-string">&quot;Exception encountered during context initialization - &quot;</span> +<br><span class="hljs-string">&quot;cancelling refresh attempt: &quot;</span> + ex);<br>&#125;<br><br><span class="hljs-comment">// Destroy already created singletons to avoid dangling resources.</span><br>destroyBeans();<br><br><span class="hljs-comment">// Reset &#x27;active&#x27; flag.</span><br>cancelRefresh(ex);<br><br><span class="hljs-comment">// Propagate exception to caller.</span><br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><br><span class="hljs-keyword">finally</span> &#123;<br><span class="hljs-comment">// Reset common introspection caches in Spring&#x27;s core, since we</span><br><span class="hljs-comment">// might not ever need metadata for singleton beans anymore...</span><br>resetCommonCaches();<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h2 id="5-2-prepareRefresh-方法"><a href="#5-2-prepareRefresh-方法" class="headerlink" title="5.2 prepareRefresh()方法"></a>5.2 prepareRefresh()方法</h2><ul><li>正式Refresh()操作前的准备工作</li><li>代码位置:org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">prepareRefresh</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// Switch to active.</span><br><span class="hljs-keyword">this</span>.startupDate = System.currentTimeMillis();<br><span class="hljs-keyword">this</span>.closed.set(<span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">this</span>.active.set(<span class="hljs-keyword">true</span>);<br><br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Refreshing &quot;</span> + <span class="hljs-keyword">this</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>logger.debug(<span class="hljs-string">&quot;Refreshing &quot;</span> + getDisplayName());<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Initialize any placeholder property sources in the context environment.</span><br>initPropertySources();<br><br><span class="hljs-comment">// Validate that all properties marked as required are resolvable:</span><br><span class="hljs-comment">// see ConfigurablePropertyResolver#setRequiredProperties</span><br>getEnvironment().validateRequiredProperties();<br><br><span class="hljs-comment">// Store pre-refresh ApplicationListeners...</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.earlyApplicationListeners == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">this</span>.earlyApplicationListeners = <span class="hljs-keyword">new</span> LinkedHashSet&lt;&gt;(<span class="hljs-keyword">this</span>.applicationListeners);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Reset local application listeners to pre-refresh state.</span><br><span class="hljs-keyword">this</span>.applicationListeners.clear();<br><span class="hljs-keyword">this</span>.applicationListeners.addAll(<span class="hljs-keyword">this</span>.earlyApplicationListeners);<br>&#125;<br><br><span class="hljs-comment">// Allow for the collection of early ApplicationEvents,</span><br><span class="hljs-comment">// to be published once the multicaster is available...</span><br><span class="hljs-keyword">this</span>.earlyApplicationEvents = <span class="hljs-keyword">new</span> LinkedHashSet&lt;&gt;();<br>&#125;<br><br><span class="hljs-comment">// 上述定义的initPropertySources()方法，具体由子类实现</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initPropertySources</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// For subclasses: do nothing by default.</span><br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h2 id="5-3-obtainFreshBeanFactory-方法"><a href="#5-3-obtainFreshBeanFactory-方法" class="headerlink" title="5.3 obtainFreshBeanFactory()方法"></a>5.3 obtainFreshBeanFactory()方法</h2><ul><li>创建BeanFactory的核心方法</li><li>代码位置:org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> ConfigurableListableBeanFactory <span class="hljs-title">obtainFreshBeanFactory</span><span class="hljs-params">()</span> </span>&#123;<br>refreshBeanFactory();<span class="hljs-comment">// 刷新BeanFactory，抽象方法由其子类实现,5.3.1中有说明</span><br><span class="hljs-keyword">return</span> getBeanFactory();<span class="hljs-comment">// 获取BeanFactory，父类的抽象方法继承并由其子类实现</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">refreshBeanFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> BeansException, IllegalStateException</span>;<br><br><span class="hljs-meta">@Override</span> <span class="hljs-comment">// 该方法在ConfigurableApplicationContext接口中定义</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> ConfigurableListableBeanFactory <span class="hljs-title">getBeanFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IllegalStateException</span>;<br></code></pre></td></tr></table></figure></li></ul><h3 id="5-3-1-refreshBeanFactory-方法的一种实现"><a href="#5-3-1-refreshBeanFactory-方法的一种实现" class="headerlink" title="5.3.1 refreshBeanFactory()方法的一种实现"></a>5.3.1 refreshBeanFactory()方法的一种实现</h3><ul><li>org.springframework.context.support.AbstractRefreshableApplicationContext中的具体实现如下</li><li>refreshBeanFactory()方法是AbstractApplicationContext中定义的抽象方法</li><li>AbstractRefreshableApplicationContext中的refreshBeanFactory()方法是该抽象方法的一个具体实现</li><li>主要作用：刷新BeanFactory<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// AbstractRefreshableApplicationContext中refreshBeanFactory()方法的一种实现</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title">refreshBeanFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-comment">// 检查上下文中是否已存在BeanFactory</span><br><span class="hljs-keyword">if</span> (hasBeanFactory()) &#123;<br><span class="hljs-comment">// 存在BeanFactory时先销毁已存在的BeanFactory</span><br>destroyBeans();<span class="hljs-comment">//调用AbstractApplicationContext中的实现</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 以下是AbstractApplicationContext中destroyBeans()方法的实现</span><br><span class="hljs-comment">* protected void destroyBeans() &#123;</span><br><span class="hljs-comment">*    getBeanFactory().destroySingletons();</span><br><span class="hljs-comment">* &#125;</span><br><span class="hljs-comment">*/</span><br>closeBeanFactory();<span class="hljs-comment">// 调用本抽象类中的closeBeanFactory()方法，具体代码在下面列出</span><br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 创建新的BeanFactory</span><br><span class="hljs-comment">// 下面这行代码只会创建一个空的BeanFactory，并未有任何Bean</span><br>DefaultListableBeanFactory beanFactory = createBeanFactory();<br>beanFactory.setSerializationId(getId());<br>customizeBeanFactory(beanFactory);<br>loadBeanDefinitions(beanFactory);<span class="hljs-comment">// refreshBeanFactory()方法实现的核心</span><br><span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.beanFactoryMonitor) &#123;<br><span class="hljs-keyword">this</span>.beanFactory = beanFactory;<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (IOException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ApplicationContextException(<span class="hljs-string">&quot;I/O error parsing bean definition source for &quot;</span> + getDisplayName(), ex);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// AbstractRefreshableApplicationContext抽象类中refreshBeanFactory()方法内调用的closeBeanFactory()方法</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title">closeBeanFactory</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.beanFactoryMonitor) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.beanFactory != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">//销毁已存在的BeanFactory</span><br><span class="hljs-keyword">this</span>.beanFactory.setSerializationId(<span class="hljs-keyword">null</span>);<br><span class="hljs-keyword">this</span>.beanFactory = <span class="hljs-keyword">null</span>;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//AbstractRefreshableApplicationContext抽象类中refreshBeanFactory()方法内调用createBeanFactory()方法</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> DefaultListableBeanFactory <span class="hljs-title">createBeanFactory</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// 调用下面 AbstractApplicationContext中的getInternalParentBeanFactory()方法</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> DefaultListableBeanFactory(getInternalParentBeanFactory());<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractApplicationContext中的getInternalParentBeanFactory-方法"><a href="#AbstractApplicationContext中的getInternalParentBeanFactory-方法" class="headerlink" title="AbstractApplicationContext中的getInternalParentBeanFactory()方法"></a>AbstractApplicationContext中的getInternalParentBeanFactory()方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Nullable</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> BeanFactory <span class="hljs-title">getInternalParentBeanFactory</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> (getParent() <span class="hljs-keyword">instanceof</span> ConfigurableApplicationContext ?<br>((ConfigurableApplicationContext) getParent()).getBeanFactory() : getParent());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="DefaultListableBeanFactory的构造方法"><a href="#DefaultListableBeanFactory的构造方法" class="headerlink" title="DefaultListableBeanFactory的构造方法"></a>DefaultListableBeanFactory的构造方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DefaultListableBeanFactory</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> BeanFactory parentBeanFactory)</span> </span>&#123;<br><span class="hljs-keyword">super</span>(parentBeanFactory);<span class="hljs-comment">// 调用AbstractAutowireCapableBeanFactory(抽象类)的构造方法</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="DefaultListableBeanFactory父类AbstractAutowireCapableBeanFactory-抽象类-的构造方法"><a href="#DefaultListableBeanFactory父类AbstractAutowireCapableBeanFactory-抽象类-的构造方法" class="headerlink" title="DefaultListableBeanFactory父类AbstractAutowireCapableBeanFactory(抽象类)的构造方法"></a>DefaultListableBeanFactory父类AbstractAutowireCapableBeanFactory(抽象类)的构造方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractAutowireCapableBeanFactory</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> BeanFactory parentBeanFactory)</span> </span>&#123;<br><span class="hljs-keyword">this</span>();<br>setParentBeanFactory(parentBeanFactory);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="AbstractRefreshableApplicationContext中的customizeBeanFactory-beanFactory-方法"><a href="#AbstractRefreshableApplicationContext中的customizeBeanFactory-beanFactory-方法" class="headerlink" title="AbstractRefreshableApplicationContext中的customizeBeanFactory(beanFactory)方法"></a>AbstractRefreshableApplicationContext中的customizeBeanFactory(beanFactory)方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">customizeBeanFactory</span><span class="hljs-params">(DefaultListableBeanFactory beanFactory)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.allowBeanDefinitionOverriding != <span class="hljs-keyword">null</span>) &#123;<br>beanFactory.setAllowBeanDefinitionOverriding(<span class="hljs-keyword">this</span>.allowBeanDefinitionOverriding);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.allowCircularReferences != <span class="hljs-keyword">null</span>) &#123;<br>beanFactory.setAllowCircularReferences(<span class="hljs-keyword">this</span>.allowCircularReferences);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="AbstractRefreshableApplicationContext中的loadBeanDefinitions-beanFactory-方法"><a href="#AbstractRefreshableApplicationContext中的loadBeanDefinitions-beanFactory-方法" class="headerlink" title="AbstractRefreshableApplicationContext中的loadBeanDefinitions(beanFactory)方法"></a>AbstractRefreshableApplicationContext中的loadBeanDefinitions(beanFactory)方法</h4><ul><li>是实现refreshBeanFactory()方法的核心</li><li>org.springframework.context.support.AbstractRefreshableApplicationContext中定义的抽象方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(DefaultListableBeanFactory beanFactory)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeansException, IOException</span>;<br></code></pre></td></tr></table></figure></li><li>该抽象方法的一个具体实现在org.springframework.context.support.AbstractXmlApplicationContext中</li></ul><h4 id="org-springframework-context-support-AbstractXmlApplicationContext中的loadBeanDefinitions-DefaultListableBeanFactory-beanFactory-方法"><a href="#org-springframework-context-support-AbstractXmlApplicationContext中的loadBeanDefinitions-DefaultListableBeanFactory-beanFactory-方法" class="headerlink" title="org.springframework.context.support.AbstractXmlApplicationContext中的loadBeanDefinitions(DefaultListableBeanFactory beanFactory)方法"></a>org.springframework.context.support.AbstractXmlApplicationContext中的loadBeanDefinitions(DefaultListableBeanFactory beanFactory)方法</h4><ul><li>org.springframework.context.support.AbstractRefreshableApplicationContext中定义的抽象方法loadBeanDefinitions(DefaultListableBeanFactory beanFactory)的一个实现<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(DefaultListableBeanFactory beanFactory)</span> <span class="hljs-keyword">throws</span> BeansException, IOException </span>&#123;<br><span class="hljs-comment">// Create a new XmlBeanDefinitionReader for the given BeanFactory.</span><br><span class="hljs-comment">// 通过上一步创建的空BeanFactory来创建新的XmlBeanDefinitionReader对象</span><br><span class="hljs-comment">// XmlBeanDefinitionReader用于解析xml文件中定义的bean</span><br>XmlBeanDefinitionReader beanDefinitionReader = <span class="hljs-keyword">new</span> XmlBeanDefinitionReader(beanFactory); <span class="hljs-comment">//</span><br><br><span class="hljs-comment">// Configure the bean definition reader with this context&#x27;s</span><br><span class="hljs-comment">// resource loading environment.</span><br>beanDefinitionReader.setEnvironment(<span class="hljs-keyword">this</span>.getEnvironment());<br>beanDefinitionReader.setResourceLoader(<span class="hljs-keyword">this</span>);<br>beanDefinitionReader.setEntityResolver(<span class="hljs-keyword">new</span> ResourceEntityResolver(<span class="hljs-keyword">this</span>));<br><br><span class="hljs-comment">// Allow a subclass to provide custom initialization of the reader,</span><br><span class="hljs-comment">// then proceed with actually loading the bean definitions.</span><br>initBeanDefinitionReader(beanDefinitionReader);<br>loadBeanDefinitions(beanDefinitionReader); <span class="hljs-comment">//这是一个重载方法，入参是上面生成的beanDefinitionReader</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="new-XmlBeanDefinitionReader-beanFactory"><a href="#new-XmlBeanDefinitionReader-beanFactory" class="headerlink" title="new XmlBeanDefinitionReader(beanFactory)"></a>new XmlBeanDefinitionReader(beanFactory)</h4><ul><li>XmlBeanDefinitionReader(beanFactory)构造方法调用其父类AbstractBeanDefinitionReader的构造方法，具体如下<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-title">AbstractBeanDefinitionReader</span><span class="hljs-params">(BeanDefinitionRegistry registry)</span> </span>&#123;<br>Assert.notNull(registry, <span class="hljs-string">&quot;BeanDefinitionRegistry must not be null&quot;</span>);<br><span class="hljs-keyword">this</span>.registry = registry;<br><br><span class="hljs-comment">// Determine ResourceLoader to use.</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.registry <span class="hljs-keyword">instanceof</span> ResourceLoader) &#123;<br><span class="hljs-keyword">this</span>.resourceLoader = (ResourceLoader) <span class="hljs-keyword">this</span>.registry;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">this</span>.resourceLoader = <span class="hljs-keyword">new</span> PathMatchingResourcePatternResolver();<br>&#125;<br><br><span class="hljs-comment">// Inherit Environment if possible</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.registry <span class="hljs-keyword">instanceof</span> EnvironmentCapable) &#123;<br><span class="hljs-keyword">this</span>.environment = ((EnvironmentCapable) <span class="hljs-keyword">this</span>.registry).getEnvironment();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">this</span>.environment = <span class="hljs-keyword">new</span> StandardEnvironment();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractXmlApplicationContext抽象类中的initBeanDefinitionReader-beanDefinitionReader-方法"><a href="#AbstractXmlApplicationContext抽象类中的initBeanDefinitionReader-beanDefinitionReader-方法" class="headerlink" title="AbstractXmlApplicationContext抽象类中的initBeanDefinitionReader(beanDefinitionReader)方法"></a>AbstractXmlApplicationContext抽象类中的initBeanDefinitionReader(beanDefinitionReader)方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initBeanDefinitionReader</span><span class="hljs-params">(XmlBeanDefinitionReader reader)</span> </span>&#123;<br>reader.setValidating(<span class="hljs-keyword">this</span>.validating);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="AbstractXmlApplicationContext抽象类中的loadBeanDefinitions-XmlBeanDefinitionReader-reader-方法"><a href="#AbstractXmlApplicationContext抽象类中的loadBeanDefinitions-XmlBeanDefinitionReader-reader-方法" class="headerlink" title="AbstractXmlApplicationContext抽象类中的loadBeanDefinitions(XmlBeanDefinitionReader reader)方法"></a>AbstractXmlApplicationContext抽象类中的loadBeanDefinitions(XmlBeanDefinitionReader reader)方法</h4><ul><li>主要功能是解析资源文件的位置</li><li>调用XmlBeanDefinitionReader对象的loadBeanDefinitions方法解析bean的定义<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(XmlBeanDefinitionReader reader)</span> <span class="hljs-keyword">throws</span> BeansException, IOException </span>&#123;<br>Resource[] configResources = getConfigResources();<br><span class="hljs-keyword">if</span> (configResources != <span class="hljs-keyword">null</span>) &#123;<br>reader.loadBeanDefinitions(configResources); <span class="hljs-comment">//具体调用AbstractBeanDefinitionReader中实现的loadBeanDefinitions(Resource... resources)方法</span><br>&#125;<br>String[] configLocations = getConfigLocations();<br><span class="hljs-keyword">if</span> (configLocations != <span class="hljs-keyword">null</span>) &#123;<br>reader.loadBeanDefinitions(configLocations);<span class="hljs-comment">//具体调用AbstractBeanDefinitionReader中实现的loadBeanDefinitions(String... locations)</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h5 id="reader-loadBeanDefinitions-configResources-方法与reader-loadBeanDefinitions-configLocations-方法"><a href="#reader-loadBeanDefinitions-configResources-方法与reader-loadBeanDefinitions-configLocations-方法" class="headerlink" title="reader.loadBeanDefinitions(configResources)方法与reader.loadBeanDefinitions(configLocations)方法"></a>reader.loadBeanDefinitions(configResources)方法与reader.loadBeanDefinitions(configLocations)方法</h5><ul><li>XmlBeanDefinitionReader对象的loadBeanDefinitions方法用于解析bean的定义</li><li>reader是XmlBeanDefinitionReader类型的对象，loadBeanDefinitions方法定义在BeanDefinitionReader接口中，</li><li>loadBeanDefinitions方法具体是在AbstractBeanDefinitionReader抽象类中实现的，具体代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(Resource... resources)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br>Assert.notNull(resources, <span class="hljs-string">&quot;Resource array must not be null&quot;</span>);<br><span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-comment">// 遍历每一个资源并依次调用重载方法loadBeanDefinitions(Resource resource)，定义在XmlBeanDefinitionReader中，具体实现在XmlBeanDefinitionReader中</span><br><span class="hljs-keyword">for</span> (Resource resource : resources) &#123;<br>count += loadBeanDefinitions(resource);<span class="hljs-comment">//</span><br>&#125;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(String... locations)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br>Assert.notNull(locations, <span class="hljs-string">&quot;Location array must not be null&quot;</span>);<br><span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//遍历资源数组，调用重载方法loadBeanDefinitions(String location)</span><br><span class="hljs-keyword">for</span> (String location : locations) &#123;<br>count += loadBeanDefinitions(location);<span class="hljs-comment">//</span><br>&#125;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h4 id="count-loadBeanDefinitions-resource-中的loadBeanDefinitions-resource-方法"><a href="#count-loadBeanDefinitions-resource-中的loadBeanDefinitions-resource-方法" class="headerlink" title="count += loadBeanDefinitions(resource)中的loadBeanDefinitions(resource)方法"></a>count += loadBeanDefinitions(resource)中的loadBeanDefinitions(resource)方法</h4><ul><li>loadBeanDefinitions(resource)方法在BeanDefinitionReader接口中定义，具体实现是在XmlBeanDefinitionReader中</li><li>XmlBeanDefinitionReader中的实现代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(Resource resource)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br><span class="hljs-keyword">return</span> loadBeanDefinitions(<span class="hljs-keyword">new</span> EncodedResource(resource));<br>&#125;<br></code></pre></td></tr></table></figure></li><li>可以看到，上面的方法又调用了loadBeanDefinitions(new EncodedResource(resource))方法，该方法在BeanDefinitionReader接口中定义，具体实现在XmlBeanDefinitionReader中,具体实现，详细代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(EncodedResource encodedResource)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br>Assert.notNull(encodedResource, <span class="hljs-string">&quot;EncodedResource must not be null&quot;</span>);<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Loading XML bean definitions from &quot;</span> + encodedResource);<br>&#125;<br><br>Set&lt;EncodedResource&gt; currentResources = <span class="hljs-keyword">this</span>.resourcesCurrentlyBeingLoaded.get();<br><span class="hljs-keyword">if</span> (currentResources == <span class="hljs-keyword">null</span>) &#123;<br>currentResources = <span class="hljs-keyword">new</span> HashSet&lt;&gt;(<span class="hljs-number">4</span>);<br><span class="hljs-keyword">this</span>.resourcesCurrentlyBeingLoaded.set(currentResources);<br>&#125;<br><span class="hljs-keyword">if</span> (!currentResources.add(encodedResource)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(<span class="hljs-string">&quot;Detected cyclic loading of &quot;</span> + encodedResource + <span class="hljs-string">&quot; - check your import definitions!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">//以流的形式读取资源文件</span><br>InputStream inputStream = encodedResource.getResource().getInputStream();<br><span class="hljs-keyword">try</span> &#123;<br>InputSource inputSource = <span class="hljs-keyword">new</span> InputSource(inputStream);<br><span class="hljs-keyword">if</span> (encodedResource.getEncoding() != <span class="hljs-keyword">null</span>) &#123;<br>inputSource.setEncoding(encodedResource.getEncoding());<br>&#125;<br><span class="hljs-comment">// 调用doLoadBeanDefinitions解析载入文件中的bean定义</span><br><span class="hljs-keyword">return</span> doLoadBeanDefinitions(inputSource, encodedResource.getResource());<br>&#125;<br><span class="hljs-keyword">finally</span> &#123;<br>inputStream.close();<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (IOException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(<br><span class="hljs-string">&quot;IOException parsing XML document from &quot;</span> + encodedResource.getResource(), ex);<br>&#125;<br><span class="hljs-keyword">finally</span> &#123;<br>currentResources.remove(encodedResource);<br><span class="hljs-keyword">if</span> (currentResources.isEmpty()) &#123;<br><span class="hljs-keyword">this</span>.resourcesCurrentlyBeingLoaded.remove();<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="count-loadBeanDefinitions-location-中的loadBeanDefinitions-location-方法"><a href="#count-loadBeanDefinitions-location-中的loadBeanDefinitions-location-方法" class="headerlink" title="count += loadBeanDefinitions(location)中的loadBeanDefinitions(location)方法"></a>count += loadBeanDefinitions(location)中的loadBeanDefinitions(location)方法</h4><ul><li>loadBeanDefinitions(location)方法的具体实现AbstractBeanDefinitionReader中；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(String location)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br><span class="hljs-keyword">return</span> loadBeanDefinitions(location, <span class="hljs-keyword">null</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li>解析资源文件的路径，得到Resource[]资源数组</li><li>上面AbstractBeanDefinitionReader中的loadBeanDefinitions(String location)方法又调用了同类里面的一个重载方法loadBeanDefinitions(String location, @Nullable Set<Resource> actualResources) 具体实现如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">loadBeanDefinitions</span><span class="hljs-params">(String location, <span class="hljs-meta">@Nullable</span> Set&lt;Resource&gt; actualResources)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br>ResourceLoader resourceLoader = getResourceLoader();<br><span class="hljs-keyword">if</span> (resourceLoader == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(<br><span class="hljs-string">&quot;Cannot load bean definitions from location [&quot;</span> + location + <span class="hljs-string">&quot;]: no ResourceLoader available&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (resourceLoader <span class="hljs-keyword">instanceof</span> ResourcePatternResolver) &#123;<br><span class="hljs-comment">// Resource pattern matching available.</span><br><span class="hljs-keyword">try</span> &#123;<br>Resource[] resources = ((ResourcePatternResolver) resourceLoader).getResources(location);<br><span class="hljs-comment">//下一行的核心逻辑  调用上面提到的重载方法loadBeanDefinitions(Resource resource)</span><br><span class="hljs-keyword">int</span> count = loadBeanDefinitions(resources);<br><span class="hljs-keyword">if</span> (actualResources != <span class="hljs-keyword">null</span>) &#123;<br>Collections.addAll(actualResources, resources);<br>&#125;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Loaded &quot;</span> + count + <span class="hljs-string">&quot; bean definitions from location pattern [&quot;</span> + location + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br><span class="hljs-keyword">catch</span> (IOException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(<br><span class="hljs-string">&quot;Could not resolve bean definition resource pattern [&quot;</span> + location + <span class="hljs-string">&quot;]&quot;</span>, ex);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Can only load single resources by absolute URL.</span><br>Resource resource = resourceLoader.getResource(location);<br><span class="hljs-keyword">int</span> count = loadBeanDefinitions(resource);<br><span class="hljs-keyword">if</span> (actualResources != <span class="hljs-keyword">null</span>) &#123;<br>actualResources.add(resource);<br>&#125;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Loaded &quot;</span> + count + <span class="hljs-string">&quot; bean definitions from location [&quot;</span> + location + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="XmlBeanDefinitionReader类中的doLoadBeanDefinitions-InputSource-inputSource-Resource-resource-方法"><a href="#XmlBeanDefinitionReader类中的doLoadBeanDefinitions-InputSource-inputSource-Resource-resource-方法" class="headerlink" title="XmlBeanDefinitionReader类中的doLoadBeanDefinitions(InputSource inputSource, Resource resource)方法"></a>XmlBeanDefinitionReader类中的doLoadBeanDefinitions(InputSource inputSource, Resource resource)方法</h4><ul><li>该方法是载入定义bean的核心方法</li><li>代码位置：org.springframework.beans.factory.xml.XmlBeanDefinitionReader<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">int</span> <span class="hljs-title">doLoadBeanDefinitions</span><span class="hljs-params">(InputSource inputSource, Resource resource)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 解析XML文档</span><br>Document doc = doLoadDocument(inputSource, resource);<br><span class="hljs-comment">// 下面一行代码 注册Bean</span><br><span class="hljs-keyword">int</span> count = registerBeanDefinitions(doc, resource);<br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br>logger.debug(<span class="hljs-string">&quot;Loaded &quot;</span> + count + <span class="hljs-string">&quot; bean definitions from &quot;</span> + resource);<br>&#125;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanDefinitionStoreException ex) &#123;<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><span class="hljs-keyword">catch</span> (SAXParseException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> XmlBeanDefinitionStoreException(resource.getDescription(),<br><span class="hljs-string">&quot;Line &quot;</span> + ex.getLineNumber() + <span class="hljs-string">&quot; in XML document from &quot;</span> + resource + <span class="hljs-string">&quot; is invalid&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (SAXException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> XmlBeanDefinitionStoreException(resource.getDescription(),<br><span class="hljs-string">&quot;XML document from &quot;</span> + resource + <span class="hljs-string">&quot; is invalid&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (ParserConfigurationException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(resource.getDescription(),<br><span class="hljs-string">&quot;Parser configuration exception parsing XML from &quot;</span> + resource, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (IOException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(resource.getDescription(),<br><span class="hljs-string">&quot;IOException parsing XML document from &quot;</span> + resource, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(resource.getDescription(),<br><span class="hljs-string">&quot;Unexpected exception parsing XML document from &quot;</span> + resource, ex);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 注册Bean的方法</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">registerBeanDefinitions</span><span class="hljs-params">(Document doc, Resource resource)</span> <span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br>BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();<br><span class="hljs-keyword">int</span> countBefore = getRegistry().getBeanDefinitionCount();<br><span class="hljs-comment">// 注册bean的核心逻辑</span><br>documentReader.registerBeanDefinitions(doc, createReaderContext(resource));<br><span class="hljs-keyword">return</span> getRegistry().getBeanDefinitionCount() - countBefore;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="DefaultBeanDefinitionDocumentReader-registerBeanDefinitions-Document-doc-XmlReaderContext-readerContext"><a href="#DefaultBeanDefinitionDocumentReader-registerBeanDefinitions-Document-doc-XmlReaderContext-readerContext" class="headerlink" title="DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(Document doc, XmlReaderContext readerContext)"></a>DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(Document doc, XmlReaderContext readerContext)</h4><ul><li>功能：</li><li>代码位置：org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanDefinitions</span><span class="hljs-params">(Document doc, XmlReaderContext readerContext)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.readerContext = readerContext;<br><span class="hljs-comment">// 核心逻辑</span><br>doRegisterBeanDefinitions(doc.getDocumentElement());<br>&#125;<br><br><span class="hljs-comment">// registerBeanDefinitions方法中调用的doRegisterBeanDefinitions方法</span><br><span class="hljs-meta">@SuppressWarnings(&quot;deprecation&quot;)</span>  <span class="hljs-comment">// for Environment.acceptsProfiles(String...)</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doRegisterBeanDefinitions</span><span class="hljs-params">(Element root)</span> </span>&#123;<br><span class="hljs-comment">// Any nested &lt;beans&gt; elements will cause recursion in this method. In</span><br><span class="hljs-comment">// order to propagate and preserve &lt;beans&gt; default-* attributes correctly,</span><br><span class="hljs-comment">// keep track of the current (parent) delegate, which may be null. Create</span><br><span class="hljs-comment">// the new (child) delegate with a reference to the parent for fallback purposes,</span><br><span class="hljs-comment">// then ultimately reset this.delegate back to its original (parent) reference.</span><br><span class="hljs-comment">// this behavior emulates a stack of delegates without actually necessitating one.</span><br>BeanDefinitionParserDelegate parent = <span class="hljs-keyword">this</span>.delegate;<br><span class="hljs-keyword">this</span>.delegate = createDelegate(getReaderContext(), root, parent);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.delegate.isDefaultNamespace(root)) &#123;<br>String profileSpec = root.getAttribute(PROFILE_ATTRIBUTE);<br><span class="hljs-keyword">if</span> (StringUtils.hasText(profileSpec)) &#123;<br>String[] specifiedProfiles = StringUtils.tokenizeToStringArray(<br>profileSpec, BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS);<br><span class="hljs-comment">// We cannot use Profiles.of(...) since profile expressions are not supported</span><br><span class="hljs-comment">// in XML config. See SPR-12458 for details.</span><br><span class="hljs-keyword">if</span> (!getReaderContext().getEnvironment().acceptsProfiles(specifiedProfiles)) &#123;<br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br>logger.debug(<span class="hljs-string">&quot;Skipped XML bean definition file due to specified profiles [&quot;</span> + profileSpec +<br><span class="hljs-string">&quot;] not matching: &quot;</span> + getReaderContext().getResource());<br>&#125;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br>&#125;<br><br>preProcessXml(root);<br><span class="hljs-comment">// 核心逻辑</span><br>parseBeanDefinitions(root, <span class="hljs-keyword">this</span>.delegate);<br>postProcessXml(root);<br><br><span class="hljs-keyword">this</span>.delegate = parent;<br>&#125;<br><br><span class="hljs-comment">// 上面方法中调用的parseBeanDefinitions(root, this.delegate)对应的方法实现</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">parseBeanDefinitions</span><span class="hljs-params">(Element root, BeanDefinitionParserDelegate delegate)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (delegate.isDefaultNamespace(root)) &#123;<br>NodeList nl = root.getChildNodes();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nl.getLength(); i++) &#123;<br>Node node = nl.item(i);<br><span class="hljs-keyword">if</span> (node <span class="hljs-keyword">instanceof</span> Element) &#123;<br>Element ele = (Element) node;<br><span class="hljs-keyword">if</span> (delegate.isDefaultNamespace(ele)) &#123;<br><span class="hljs-comment">// 本方法的核心逻辑</span><br>parseDefaultElement(ele, delegate);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>delegate.parseCustomElement(ele);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>delegate.parseCustomElement(root);<br>&#125;<br>&#125;<br><br><br><span class="hljs-comment">// 上述方法调用的parseDefaultElement(ele, delegate);的具体实现</span><br><span class="hljs-comment">// 根据bean配置的不同，进入不同分支</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">parseDefaultElement</span><span class="hljs-params">(Element ele, BeanDefinitionParserDelegate delegate)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (delegate.nodeNameEquals(ele, IMPORT_ELEMENT)) &#123;<br>importBeanDefinitionResource(ele);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delegate.nodeNameEquals(ele, ALIAS_ELEMENT)) &#123;<br>processAliasRegistration(ele);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delegate.nodeNameEquals(ele, BEAN_ELEMENT)) &#123;<br><span class="hljs-comment">// 本文示例会进入该方法</span><br>processBeanDefinition(ele, delegate);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delegate.nodeNameEquals(ele, NESTED_BEANS_ELEMENT)) &#123;<br><span class="hljs-comment">// recurse</span><br>doRegisterBeanDefinitions(ele);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 上述方法最后进入processBeanDefinition(ele, delegate)后的处理过程：</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">processBeanDefinition</span><span class="hljs-params">(Element ele, BeanDefinitionParserDelegate delegate)</span> </span>&#123;<br>BeanDefinitionHolder bdHolder = delegate.parseBeanDefinitionElement(ele);<br><span class="hljs-keyword">if</span> (bdHolder != <span class="hljs-keyword">null</span>) &#123;<br>bdHolder = delegate.decorateBeanDefinitionIfRequired(ele, bdHolder);<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// Register the final decorated instance.</span><br><span class="hljs-comment">// 注册Bean的关键代码</span><br>BeanDefinitionReaderUtils.registerBeanDefinition(bdHolder, getReaderContext().getRegistry());<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanDefinitionStoreException ex) &#123;<br>getReaderContext().error(<span class="hljs-string">&quot;Failed to register bean definition with name &#x27;&quot;</span> +<br>bdHolder.getBeanName() + <span class="hljs-string">&quot;&#x27;&quot;</span>, ele, ex);<br>&#125;<br><span class="hljs-comment">// Send registration event.</span><br>getReaderContext().fireComponentRegistered(<span class="hljs-keyword">new</span> BeanComponentDefinition(bdHolder));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="BeanDefinitionReaderUtils的registerBeanDefinition-bdHolder-getReaderContext-getRegistry-方法"><a href="#BeanDefinitionReaderUtils的registerBeanDefinition-bdHolder-getReaderContext-getRegistry-方法" class="headerlink" title="BeanDefinitionReaderUtils的registerBeanDefinition(bdHolder, getReaderContext().getRegistry())方法"></a>BeanDefinitionReaderUtils的registerBeanDefinition(bdHolder, getReaderContext().getRegistry())方法</h4><ul><li>主要作用：</li><li>代码位置：org.springframework.beans.factory.support.BeanDefinitionReaderUtils<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanDefinition</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">BeanDefinitionHolder definitionHolder, BeanDefinitionRegistry registry)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br><br><span class="hljs-comment">// Register bean definition under primary name.</span><br>String beanName = definitionHolder.getBeanName();<br><span class="hljs-comment">// 将Bean的名字和BeanDefinition对象进行注册</span><br><span class="hljs-comment">// registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());方法定义在BeanDefinitionRegistry接口中：</span><br><span class="hljs-comment">// 具体实现在中实现</span><br>registry.registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());<br><br><span class="hljs-comment">// Register aliases for bean name, if any.</span><br>String[] aliases = definitionHolder.getAliases();<br><span class="hljs-keyword">if</span> (aliases != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">for</span> (String alias : aliases) &#123;<br>registry.registerAlias(beanName, alias);<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h4 id="DefaultListableBeanFactory中registerBeanDefinition-String-beanName-BeanDefinition-beanDefinition"><a href="#DefaultListableBeanFactory中registerBeanDefinition-String-beanName-BeanDefinition-beanDefinition" class="headerlink" title="DefaultListableBeanFactory中registerBeanDefinition(String beanName, BeanDefinition beanDefinition)"></a>DefaultListableBeanFactory中registerBeanDefinition(String beanName, BeanDefinition beanDefinition)</h4><ul><li>作用：</li><li>DefaultListableBeanFactory的字段beanDefinitionMap是一个ConcurrentHashMap&lt;String, BeanDefinition&gt;，用于存储bean的定义信息</li><li>DefaultListableBeanFactory的字段beanDefinitionNames是一个ArrayList<String>类型数据，用于存储Bean的名称</li><li>代码位置：org.springframework.beans.factory.support.DefaultListableBeanFactory</li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanDefinition</span><span class="hljs-params">(String beanName, BeanDefinition beanDefinition)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeanDefinitionStoreException </span>&#123;<br><br>Assert.hasText(beanName, <span class="hljs-string">&quot;Bean name must not be empty&quot;</span>);<br>Assert.notNull(beanDefinition, <span class="hljs-string">&quot;BeanDefinition must not be null&quot;</span>);<br><br><span class="hljs-keyword">if</span> (beanDefinition <span class="hljs-keyword">instanceof</span> AbstractBeanDefinition) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>((AbstractBeanDefinition) beanDefinition).validate();<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanDefinitionValidationException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;Validation of bean definition failed&quot;</span>, ex);<br>&#125;<br>&#125;<br><br>BeanDefinition existingDefinition = <span class="hljs-keyword">this</span>.beanDefinitionMap.get(beanName);<br><span class="hljs-comment">// 查找是否存在同名的bean</span><br><span class="hljs-keyword">if</span> (existingDefinition != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// 有同名的bean存在时</span><br><span class="hljs-keyword">if</span> (!isAllowBeanDefinitionOverriding()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionOverrideException(beanName, beanDefinition, existingDefinition);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (existingDefinition.getRole() &lt; beanDefinition.getRole()) &#123;<br><span class="hljs-comment">// e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE</span><br><span class="hljs-keyword">if</span> (logger.isInfoEnabled()) &#123;<br>logger.info(<span class="hljs-string">&quot;Overriding user-defined bean definition for bean &#x27;&quot;</span> + beanName +<br><span class="hljs-string">&quot;&#x27; with a framework-generated bean definition: replacing [&quot;</span> +<br>existingDefinition + <span class="hljs-string">&quot;] with [&quot;</span> + beanDefinition + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!beanDefinition.equals(existingDefinition)) &#123;<br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br>logger.debug(<span class="hljs-string">&quot;Overriding bean definition for bean &#x27;&quot;</span> + beanName +<br><span class="hljs-string">&quot;&#x27; with a different definition: replacing [&quot;</span> + existingDefinition +<br><span class="hljs-string">&quot;] with [&quot;</span> + beanDefinition + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Overriding bean definition for bean &#x27;&quot;</span> + beanName +<br><span class="hljs-string">&quot;&#x27; with an equivalent definition: replacing [&quot;</span> + existingDefinition +<br><span class="hljs-string">&quot;] with [&quot;</span> + beanDefinition + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 没有同名的bean存在时</span><br><span class="hljs-keyword">if</span> (hasBeanCreationStarted()) &#123;<br><span class="hljs-comment">// Cannot modify startup-time collection elements anymore (for stable iteration)</span><br><span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.beanDefinitionMap) &#123;<br><span class="hljs-comment">// beanDefinitionMap存储beanName:BeanDefinition一一对应的K:V信息</span><br><span class="hljs-comment">// beanName作为key， beanDefinition作为value存入DefaultListableBeanFactory对象的beanDefinitionMap字段中</span><br><span class="hljs-comment">// 完成Bean的注册，将Bean注册到BeanFactory中</span><br><span class="hljs-keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);<br>List&lt;String&gt; updatedDefinitions = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(<span class="hljs-keyword">this</span>.beanDefinitionNames.size() + <span class="hljs-number">1</span>);<br>updatedDefinitions.addAll(<span class="hljs-keyword">this</span>.beanDefinitionNames);<br>updatedDefinitions.add(beanName);<br><span class="hljs-comment">// 将所有的beanName保存到beanDefinitionNames字段中，数据类型为</span><br><span class="hljs-keyword">this</span>.beanDefinitionNames = updatedDefinitions;<br>removeManualSingletonName(beanName);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Still in startup registration phase</span><br><span class="hljs-keyword">this</span>.beanDefinitionMap.put(beanName, beanDefinition);<br><span class="hljs-keyword">this</span>.beanDefinitionNames.add(beanName);<br>removeManualSingletonName(beanName);<br>&#125;<br><span class="hljs-keyword">this</span>.frozenBeanDefinitionNames = <span class="hljs-keyword">null</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (existingDefinition != <span class="hljs-keyword">null</span> || containsSingleton(beanName)) &#123;<br>resetBeanDefinition(beanName);<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure></li><li>到此上面的 loadBeanDefinitions(XmlBeanDefinitionReader reader)方法基本执行完成</li><li>上一级的loadBeanDefinitions(DefaultListableBeanFactory beanFactory)方法也执行到loadBeanDefinitions(XmlBeanDefinitionReader reader)方法后结束</li><li>在上述创建BeanFactory的过程中，BeanDefination注册到BeanFactory（DefaultListableBeanFactory）中的类型为ConcurrentHashMap&lt;String, BeanDefinition&gt;，字段名beanDefinitionMap的为对象中</li><li>向beanDefinitionMap中注册时beanName为key,beanDefination为value；</li><li>DefaultListableBeanFactory对象的字段beanDefinitionNames是一个ArrayList<String>类型数据，用于存储所有已经注册的Bean的名称</li><li>refreshBeanFactory()方法执行完成，接下来进入其下一行的getBeanFactory()方法</li></ul><h3 id="getBeanFactory-方法的一种实现"><a href="#getBeanFactory-方法的一种实现" class="headerlink" title="getBeanFactory()方法的一种实现"></a>getBeanFactory()方法的一种实现</h3><ul><li>AbstractRefreshableApplicationContext中getBeanFactory()方法的一种实现</li><li>获取BeanFactory<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> ConfigurableListableBeanFactory <span class="hljs-title">getBeanFactory</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.beanFactoryMonitor) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.beanFactory == <span class="hljs-keyword">null</span>) &#123;<br>   <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">&quot;BeanFactory not initialized or already closed - call &#x27;refresh&#x27; before accessing beans via the ApplicationContext&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.beanFactory;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>getBeanFactory()方法执行完，标志上一级的方法obtainFreshBeanFactory()执行完成，接下来将进入AbstractApplicationContext抽象类中定义的refresh()模板方法中的第三步定义的prepareBeanFactory(beanFactory)方法</li></ul><h1 id="6-prepareBeanFactory-beanFactory-方法"><a href="#6-prepareBeanFactory-beanFactory-方法" class="headerlink" title="6 prepareBeanFactory(beanFactory)方法"></a>6 prepareBeanFactory(beanFactory)方法</h1><ul><li>代码位置: org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">prepareBeanFactory</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br><span class="hljs-comment">// Tell the internal bean factory to use the context&#x27;s class loader etc.</span><br>beanFactory.setBeanClassLoader(getClassLoader());<br>beanFactory.setBeanExpressionResolver(<span class="hljs-keyword">new</span> StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));<br>beanFactory.addPropertyEditorRegistrar(<span class="hljs-keyword">new</span> ResourceEditorRegistrar(<span class="hljs-keyword">this</span>, getEnvironment()));<br><br><span class="hljs-comment">// Configure the bean factory with context callbacks.</span><br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> ApplicationContextAwareProcessor(<span class="hljs-keyword">this</span>));<br>beanFactory.ignoreDependencyInterface(EnvironmentAware.class);<br>beanFactory.ignoreDependencyInterface(EmbeddedValueResolverAware.class);<br>beanFactory.ignoreDependencyInterface(ResourceLoaderAware.class);<br>beanFactory.ignoreDependencyInterface(ApplicationEventPublisherAware.class);<br>beanFactory.ignoreDependencyInterface(MessageSourceAware.class);<br>beanFactory.ignoreDependencyInterface(ApplicationContextAware.class);<br><br><span class="hljs-comment">// BeanFactory interface not registered as resolvable type in a plain factory.</span><br><span class="hljs-comment">// MessageSource registered (and found for autowiring) as a bean.</span><br>beanFactory.registerResolvableDependency(BeanFactory.class, beanFactory);<br>beanFactory.registerResolvableDependency(ResourceLoader.class, <span class="hljs-keyword">this</span>);<br>beanFactory.registerResolvableDependency(ApplicationEventPublisher.class, <span class="hljs-keyword">this</span>);<br>beanFactory.registerResolvableDependency(ApplicationContext.class, <span class="hljs-keyword">this</span>);<br><br><span class="hljs-comment">// Register early post-processor for detecting inner beans as ApplicationListeners.</span><br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> ApplicationListenerDetector(<span class="hljs-keyword">this</span>));<br><br><span class="hljs-comment">// Detect a LoadTimeWeaver and prepare for weaving, if found.</span><br><span class="hljs-keyword">if</span> (beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) &#123;<br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> LoadTimeWeaverAwareProcessor(beanFactory));<br><span class="hljs-comment">// Set a temporary ClassLoader for type matching.</span><br>beanFactory.setTempClassLoader(<span class="hljs-keyword">new</span> ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));<br>&#125;<br><br><span class="hljs-comment">// Register default environment beans.</span><br><span class="hljs-keyword">if</span> (!beanFactory.containsLocalBean(ENVIRONMENT_BEAN_NAME)) &#123;<br>beanFactory.registerSingleton(ENVIRONMENT_BEAN_NAME, getEnvironment());<br>&#125;<br><span class="hljs-keyword">if</span> (!beanFactory.containsLocalBean(SYSTEM_PROPERTIES_BEAN_NAME)) &#123;<br>beanFactory.registerSingleton(SYSTEM_PROPERTIES_BEAN_NAME, getEnvironment().getSystemProperties());<br>&#125;<br><span class="hljs-keyword">if</span> (!beanFactory.containsLocalBean(SYSTEM_ENVIRONMENT_BEAN_NAME)) &#123;<br>beanFactory.registerSingleton(SYSTEM_ENVIRONMENT_BEAN_NAME, getEnvironment().getSystemEnvironment());<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h1 id="7-postProcessBeanFactory-ConfigurableListableBeanFactory-beanFactory"><a href="#7-postProcessBeanFactory-ConfigurableListableBeanFactory-beanFactory" class="headerlink" title="7    postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory)"></a>7    postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory)</h1><ul><li>代码位置:org.springframework.context.support.AbstractApplicationContext.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">postProcessBeanFactory</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br><span class="hljs-comment">// 该方法是一个空方法，具体的实现依据具体的情况在其子类中继承或进行重写</span><br><span class="hljs-comment">// 观察AbstractApplicationContext到FileSystemXmlApplicationContext(location)的继承路径，其子类中并未实现具体的逻辑;</span><br>&#125;<br><br></code></pre></td></tr></table></figure></li><li>postProcessBeanFactory(beanFactory)执行完后进入 invokeBeanFactoryPostProcessors(beanFactory)方法</li></ul><h1 id="8-invokeBeanFactoryPostProcessors-beanFactory-方法"><a href="#8-invokeBeanFactoryPostProcessors-beanFactory-方法" class="headerlink" title="8. invokeBeanFactoryPostProcessors(beanFactory)方法"></a>8. invokeBeanFactoryPostProcessors(beanFactory)方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">invokeBeanFactoryPostProcessors</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());<br><br><span class="hljs-comment">// Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime</span><br><span class="hljs-comment">// (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)</span><br><span class="hljs-keyword">if</span> (beanFactory.getTempClassLoader() == <span class="hljs-keyword">null</span> &amp;&amp; beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) &#123;<br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> LoadTimeWeaverAwareProcessor(beanFactory));<br>beanFactory.setTempClassLoader(<span class="hljs-keyword">new</span> ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;BeanFactoryPostProcessor&gt; <span class="hljs-title">getBeanFactoryPostProcessors</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.beanFactoryPostProcessors;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>PostProcessorRegistrationDelegate的invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory, List<BeanFactoryPostProcessor> beanFactoryPostProcessors)静态方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">invokeBeanFactoryPostProcessors</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">ConfigurableListableBeanFactory beanFactory, List&lt;BeanFactoryPostProcessor&gt; beanFactoryPostProcessors)</span> </span>&#123;<br><br><span class="hljs-comment">// Invoke BeanDefinitionRegistryPostProcessors first, if any.</span><br>Set&lt;String&gt; processedBeans = <span class="hljs-keyword">new</span> HashSet&lt;&gt;();<br><br><span class="hljs-keyword">if</span> (beanFactory <span class="hljs-keyword">instanceof</span> BeanDefinitionRegistry) &#123;<br>BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;<br>List&lt;BeanFactoryPostProcessor&gt; regularPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;BeanDefinitionRegistryPostProcessor&gt; registryProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><br><span class="hljs-keyword">for</span> (BeanFactoryPostProcessor postProcessor : beanFactoryPostProcessors) &#123;<br><span class="hljs-keyword">if</span> (postProcessor <span class="hljs-keyword">instanceof</span> BeanDefinitionRegistryPostProcessor) &#123;<br>BeanDefinitionRegistryPostProcessor registryProcessor =<br>(BeanDefinitionRegistryPostProcessor) postProcessor;<br>registryProcessor.postProcessBeanDefinitionRegistry(registry);<br>registryProcessors.add(registryProcessor);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>regularPostProcessors.add(postProcessor);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Do not initialize FactoryBeans here: We need to leave all regular beans</span><br><span class="hljs-comment">// uninitialized to let the bean factory post-processors apply to them!</span><br><span class="hljs-comment">// Separate between BeanDefinitionRegistryPostProcessors that implement</span><br><span class="hljs-comment">// PriorityOrdered, Ordered, and the rest.</span><br>List&lt;BeanDefinitionRegistryPostProcessor&gt; currentRegistryProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><br><span class="hljs-comment">// First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered.</span><br>String[] postProcessorNames =<br>beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">for</span> (String ppName : postProcessorNames) &#123;<br><span class="hljs-keyword">if</span> (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) &#123;<br>currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));<br>processedBeans.add(ppName);<br>&#125;<br>&#125;<br>sortPostProcessors(currentRegistryProcessors, beanFactory);<br>registryProcessors.addAll(currentRegistryProcessors);<br>invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);<br>currentRegistryProcessors.clear();<br><br><span class="hljs-comment">// Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered.</span><br>postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">for</span> (String ppName : postProcessorNames) &#123;<br><span class="hljs-keyword">if</span> (!processedBeans.contains(ppName) &amp;&amp; beanFactory.isTypeMatch(ppName, Ordered.class)) &#123;<br>currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));<br>processedBeans.add(ppName);<br>&#125;<br>&#125;<br>sortPostProcessors(currentRegistryProcessors, beanFactory);<br>registryProcessors.addAll(currentRegistryProcessors);<br>invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);<br>currentRegistryProcessors.clear();<br><br><span class="hljs-comment">// Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear.</span><br><span class="hljs-keyword">boolean</span> reiterate = <span class="hljs-keyword">true</span>;<br><span class="hljs-keyword">while</span> (reiterate) &#123;<br>reiterate = <span class="hljs-keyword">false</span>;<br>postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">for</span> (String ppName : postProcessorNames) &#123;<br><span class="hljs-keyword">if</span> (!processedBeans.contains(ppName)) &#123;<br>currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));<br>processedBeans.add(ppName);<br>reiterate = <span class="hljs-keyword">true</span>;<br>&#125;<br>&#125;<br>sortPostProcessors(currentRegistryProcessors, beanFactory);<br>registryProcessors.addAll(currentRegistryProcessors);<br>invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);<br>currentRegistryProcessors.clear();<br>&#125;<br><br><span class="hljs-comment">// Now, invoke the postProcessBeanFactory callback of all processors handled so far.</span><br>invokeBeanFactoryPostProcessors(registryProcessors, beanFactory);<br>invokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);<br>&#125;<br><br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Invoke factory processors registered with the context instance.</span><br>invokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);<br>&#125;<br><br><span class="hljs-comment">// Do not initialize FactoryBeans here: We need to leave all regular beans</span><br><span class="hljs-comment">// uninitialized to let the bean factory post-processors apply to them!</span><br>String[] postProcessorNames =<br>beanFactory.getBeanNamesForType(BeanFactoryPostProcessor.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><br><span class="hljs-comment">// Separate between BeanFactoryPostProcessors that implement PriorityOrdered,</span><br><span class="hljs-comment">// Ordered, and the rest.</span><br>List&lt;BeanFactoryPostProcessor&gt; priorityOrderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;String&gt; orderedPostProcessorNames = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;String&gt; nonOrderedPostProcessorNames = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><span class="hljs-keyword">for</span> (String ppName : postProcessorNames) &#123;<br><span class="hljs-keyword">if</span> (processedBeans.contains(ppName)) &#123;<br><span class="hljs-comment">// skip - already processed in first phase above</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) &#123;<br>priorityOrderedPostProcessors.add(beanFactory.getBean(ppName, BeanFactoryPostProcessor.class));<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (beanFactory.isTypeMatch(ppName, Ordered.class)) &#123;<br>orderedPostProcessorNames.add(ppName);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>nonOrderedPostProcessorNames.add(ppName);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// First, invoke the BeanFactoryPostProcessors that implement PriorityOrdered.</span><br>sortPostProcessors(priorityOrderedPostProcessors, beanFactory);<br>invokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);<br><br><span class="hljs-comment">// Next, invoke the BeanFactoryPostProcessors that implement Ordered.</span><br>List&lt;BeanFactoryPostProcessor&gt; orderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(orderedPostProcessorNames.size());<br><span class="hljs-keyword">for</span> (String postProcessorName : orderedPostProcessorNames) &#123;<br>orderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));<br>&#125;<br>sortPostProcessors(orderedPostProcessors, beanFactory);<br>invokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);<br><br><span class="hljs-comment">// Finally, invoke all other BeanFactoryPostProcessors.</span><br>List&lt;BeanFactoryPostProcessor&gt; nonOrderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());<br><span class="hljs-keyword">for</span> (String postProcessorName : nonOrderedPostProcessorNames) &#123;<br>nonOrderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));<br>&#125;<br>invokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);<br><br><span class="hljs-comment">// Clear cached merged bean definitions since the post-processors might have</span><br><span class="hljs-comment">// modified the original metadata, e.g. replacing placeholders in values...</span><br>beanFactory.clearMetadataCache();<br>&#125;<br><br><span class="hljs-comment">// 上面的方法内部有调用该重载方法</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">invokeBeanDefinitionRegistryPostProcessors</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">Collection&lt;? extends BeanDefinitionRegistryPostProcessor&gt; postProcessors, BeanDefinitionRegistry registry)</span> </span>&#123;<br><br><span class="hljs-keyword">for</span> (BeanDefinitionRegistryPostProcessor postProcessor : postProcessors) &#123;<br>postProcessor.postProcessBeanDefinitionRegistry(registry);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 上面的方法内部有调用该方法</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sortPostProcessors</span><span class="hljs-params">(List&lt;?&gt; postProcessors, ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br>Comparator&lt;Object&gt; comparatorToUse = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">if</span> (beanFactory <span class="hljs-keyword">instanceof</span> DefaultListableBeanFactory) &#123;<br>comparatorToUse = ((DefaultListableBeanFactory) beanFactory).getDependencyComparator();<br>&#125;<br><span class="hljs-keyword">if</span> (comparatorToUse == <span class="hljs-keyword">null</span>) &#123;<br>comparatorToUse = OrderComparator.INSTANCE;<br>&#125;<br>postProcessors.sort(comparatorToUse);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h1 id="9-registerBeanPostProcessors-beanFactory-方法"><a href="#9-registerBeanPostProcessors-beanFactory-方法" class="headerlink" title="9. registerBeanPostProcessors(beanFactory);方法"></a>9. registerBeanPostProcessors(beanFactory);方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanPostProcessors</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br>PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, <span class="hljs-keyword">this</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>PostProcessorRegistrationDelegate的registerBeanPostProcessors(ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContexs)静态方法，具体代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanPostProcessors</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContext)</span> </span>&#123;<br><br>String[] postProcessorNames = beanFactory.getBeanNamesForType(BeanPostProcessor.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><br><span class="hljs-comment">// Register BeanPostProcessorChecker that logs an info message when</span><br><span class="hljs-comment">// a bean is created during BeanPostProcessor instantiation, i.e. when</span><br><span class="hljs-comment">// a bean is not eligible for getting processed by all BeanPostProcessors.</span><br><span class="hljs-keyword">int</span> beanProcessorTargetCount = beanFactory.getBeanPostProcessorCount() + <span class="hljs-number">1</span> + postProcessorNames.length;<br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> BeanPostProcessorChecker(beanFactory, beanProcessorTargetCount));<br><br><span class="hljs-comment">// Separate between BeanPostProcessors that implement PriorityOrdered,</span><br><span class="hljs-comment">// Ordered, and the rest.</span><br>List&lt;BeanPostProcessor&gt; priorityOrderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;BeanPostProcessor&gt; internalPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;String&gt; orderedPostProcessorNames = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>List&lt;String&gt; nonOrderedPostProcessorNames = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><span class="hljs-keyword">for</span> (String ppName : postProcessorNames) &#123;<br><span class="hljs-keyword">if</span> (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) &#123;<br>BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);<br>priorityOrderedPostProcessors.add(pp);<br><span class="hljs-keyword">if</span> (pp <span class="hljs-keyword">instanceof</span> MergedBeanDefinitionPostProcessor) &#123;<br>internalPostProcessors.add(pp);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (beanFactory.isTypeMatch(ppName, Ordered.class)) &#123;<br>orderedPostProcessorNames.add(ppName);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>nonOrderedPostProcessorNames.add(ppName);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// First, register the BeanPostProcessors that implement PriorityOrdered.</span><br>sortPostProcessors(priorityOrderedPostProcessors, beanFactory);<br>registerBeanPostProcessors(beanFactory, priorityOrderedPostProcessors);<br><br><span class="hljs-comment">// Next, register the BeanPostProcessors that implement Ordered.</span><br>List&lt;BeanPostProcessor&gt; orderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(orderedPostProcessorNames.size());<br><span class="hljs-keyword">for</span> (String ppName : orderedPostProcessorNames) &#123;<br>BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);<br>orderedPostProcessors.add(pp);<br><span class="hljs-keyword">if</span> (pp <span class="hljs-keyword">instanceof</span> MergedBeanDefinitionPostProcessor) &#123;<br>internalPostProcessors.add(pp);<br>&#125;<br>&#125;<br>sortPostProcessors(orderedPostProcessors, beanFactory);<br>registerBeanPostProcessors(beanFactory, orderedPostProcessors);<br><br><span class="hljs-comment">// Now, register all regular BeanPostProcessors.</span><br>List&lt;BeanPostProcessor&gt; nonOrderedPostProcessors = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());<br><span class="hljs-keyword">for</span> (String ppName : nonOrderedPostProcessorNames) &#123;<br>BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);<br>nonOrderedPostProcessors.add(pp);<br><span class="hljs-keyword">if</span> (pp <span class="hljs-keyword">instanceof</span> MergedBeanDefinitionPostProcessor) &#123;<br>internalPostProcessors.add(pp);<br>&#125;<br>&#125;<br>registerBeanPostProcessors(beanFactory, nonOrderedPostProcessors);<br><br><span class="hljs-comment">// Finally, re-register all internal BeanPostProcessors.</span><br>sortPostProcessors(internalPostProcessors, beanFactory);<br>registerBeanPostProcessors(beanFactory, internalPostProcessors);<br><br><span class="hljs-comment">// Re-register post-processor for detecting inner beans as ApplicationListeners,</span><br><span class="hljs-comment">// moving it to the end of the processor chain (for picking up proxies etc).</span><br>beanFactory.addBeanPostProcessor(<span class="hljs-keyword">new</span> ApplicationListenerDetector(applicationContext));<br>&#125;<br><br><br><span class="hljs-comment">//上面的方法内部有调用该重载方法</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerBeanPostProcessors</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">ConfigurableListableBeanFactory beanFactory, List&lt;BeanPostProcessor&gt; postProcessors)</span> </span>&#123;<br><br><span class="hljs-keyword">for</span> (BeanPostProcessor postProcessor : postProcessors) &#123;<br>beanFactory.addBeanPostProcessor(postProcessor);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h1 id="10-initMessageSource-方法"><a href="#10-initMessageSource-方法" class="headerlink" title="10. initMessageSource();方法"></a>10. initMessageSource();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的initMessageSource()方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initMessageSource</span><span class="hljs-params">()</span> </span>&#123;<br>ConfigurableListableBeanFactory beanFactory = getBeanFactory();<br><span class="hljs-keyword">if</span> (beanFactory.containsLocalBean(MESSAGE_SOURCE_BEAN_NAME)) &#123;<br><span class="hljs-keyword">this</span>.messageSource = beanFactory.getBean(MESSAGE_SOURCE_BEAN_NAME, MessageSource.class);<br><span class="hljs-comment">// Make MessageSource aware of parent MessageSource.</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.parent != <span class="hljs-keyword">null</span> &amp;&amp; <span class="hljs-keyword">this</span>.messageSource <span class="hljs-keyword">instanceof</span> HierarchicalMessageSource) &#123;<br>HierarchicalMessageSource hms = (HierarchicalMessageSource) <span class="hljs-keyword">this</span>.messageSource;<br><span class="hljs-keyword">if</span> (hms.getParentMessageSource() == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// Only set parent context as parent MessageSource if no parent MessageSource</span><br><span class="hljs-comment">// registered already.</span><br>hms.setParentMessageSource(getInternalParentMessageSource());<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Using MessageSource [&quot;</span> + <span class="hljs-keyword">this</span>.messageSource + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Use empty MessageSource to be able to accept getMessage calls.</span><br>DelegatingMessageSource dms = <span class="hljs-keyword">new</span> DelegatingMessageSource();<br>dms.setParentMessageSource(getInternalParentMessageSource());<br><span class="hljs-keyword">this</span>.messageSource = dms;<br>beanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, <span class="hljs-keyword">this</span>.messageSource);<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;No &#x27;&quot;</span> + MESSAGE_SOURCE_BEAN_NAME + <span class="hljs-string">&quot;&#x27; bean, using [&quot;</span> + <span class="hljs-keyword">this</span>.messageSource + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h1 id="11-initApplicationEventMulticaster-方法"><a href="#11-initApplicationEventMulticaster-方法" class="headerlink" title="11. initApplicationEventMulticaster();方法"></a>11. initApplicationEventMulticaster();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的initApplicationEventMulticaster()方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initApplicationEventMulticaster</span><span class="hljs-params">()</span> </span>&#123;<br>ConfigurableListableBeanFactory beanFactory = getBeanFactory();<br><span class="hljs-keyword">if</span> (beanFactory.containsLocalBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME)) &#123;<br><span class="hljs-keyword">this</span>.applicationEventMulticaster =<br>beanFactory.getBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, ApplicationEventMulticaster.class);<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Using ApplicationEventMulticaster [&quot;</span> + <span class="hljs-keyword">this</span>.applicationEventMulticaster + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">this</span>.applicationEventMulticaster = <span class="hljs-keyword">new</span> SimpleApplicationEventMulticaster(beanFactory);<br>beanFactory.registerSingleton(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, <span class="hljs-keyword">this</span>.applicationEventMulticaster);<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;No &#x27;&quot;</span> + APPLICATION_EVENT_MULTICASTER_BEAN_NAME + <span class="hljs-string">&quot;&#x27; bean, using &quot;</span> +<br><span class="hljs-string">&quot;[&quot;</span> + <span class="hljs-keyword">this</span>.applicationEventMulticaster.getClass().getSimpleName() + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h1 id="12-onRefresh-方法"><a href="#12-onRefresh-方法" class="headerlink" title="12. onRefresh();方法"></a>12. onRefresh();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的onRefresh()方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onRefresh</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-comment">// 该方法是一个空方法，具体的实现依据具体的情况在其子类中继承或进行重写</span><br><span class="hljs-comment">// For subclasses: do nothing by default.</span><br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h1 id="13-registerListeners-方法"><a href="#13-registerListeners-方法" class="headerlink" title="13. registerListeners();方法"></a>13. registerListeners();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的registerListeners()方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">registerListeners</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// Register statically specified listeners first.</span><br><span class="hljs-keyword">for</span> (ApplicationListener&lt;?&gt; listener : getApplicationListeners()) &#123;<br>getApplicationEventMulticaster().addApplicationListener(listener);<br>&#125;<br><br><span class="hljs-comment">// Do not initialize FactoryBeans here: We need to leave all regular beans</span><br><span class="hljs-comment">// uninitialized to let post-processors apply to them!</span><br>String[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">for</span> (String listenerBeanName : listenerBeanNames) &#123;<br>getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);<br>&#125;<br><br><span class="hljs-comment">// Publish early application events now that we finally have a multicaster...</span><br>Set&lt;ApplicationEvent&gt; earlyEventsToProcess = <span class="hljs-keyword">this</span>.earlyApplicationEvents;<br><span class="hljs-keyword">this</span>.earlyApplicationEvents = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">if</span> (earlyEventsToProcess != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">for</span> (ApplicationEvent earlyEvent : earlyEventsToProcess) &#123;<br>getApplicationEventMulticaster().multicastEvent(earlyEvent);<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h1 id="14-finishBeanFactoryInitialization-beanFactory-方法"><a href="#14-finishBeanFactoryInitialization-beanFactory-方法" class="headerlink" title="14. finishBeanFactoryInitialization(beanFactory);方法"></a>14. finishBeanFactoryInitialization(beanFactory);方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的finishBeanFactoryInitialization(beanFactory)方法</li><li>实例化Bean的核心方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">finishBeanFactoryInitialization</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br><span class="hljs-comment">// Initialize conversion service for this context.</span><br><span class="hljs-keyword">if</span> (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &amp;&amp;<br>beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) &#123;<br>beanFactory.setConversionService(<br>beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));<br>&#125;<br><br><span class="hljs-comment">// Register a default embedded value resolver if no bean post-processor</span><br><span class="hljs-comment">// (such as a PropertyPlaceholderConfigurer bean) registered any before:</span><br><span class="hljs-comment">// at this point, primarily for resolution in annotation attribute values.</span><br><span class="hljs-keyword">if</span> (!beanFactory.hasEmbeddedValueResolver()) &#123;<br>beanFactory.addEmbeddedValueResolver(strVal -&gt; getEnvironment().resolvePlaceholders(strVal));<br>&#125;<br><br><span class="hljs-comment">// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.</span><br>String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, <span class="hljs-keyword">false</span>, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">for</span> (String weaverAwareName : weaverAwareNames) &#123;<br>getBean(weaverAwareName);<br>&#125;<br><br><span class="hljs-comment">// Stop using the temporary ClassLoader for type matching.</span><br>beanFactory.setTempClassLoader(<span class="hljs-keyword">null</span>);<br><br><span class="hljs-comment">// Allow for caching all bean definition metadata, not expecting further changes.</span><br>beanFactory.freezeConfiguration();<br><br><span class="hljs-comment">// Instantiate all remaining (non-lazy-init) singletons.</span><br><span class="hljs-comment">// 实例化bean的核心代码</span><br>beanFactory.preInstantiateSingletons(); <br><span class="hljs-comment">// 上一行的preInstantiateSingletons()方法定义在ConfigurableListableBeanFactory接口中，</span><br><span class="hljs-comment">// 具体实现是在DefaultListableBeanFactory中preInstantiateSingletons()方法</span><br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h4 id="DefaultListableBeanFactory中preInstantiateSingletons-方法"><a href="#DefaultListableBeanFactory中preInstantiateSingletons-方法" class="headerlink" title="DefaultListableBeanFactory中preInstantiateSingletons()方法"></a>DefaultListableBeanFactory中preInstantiateSingletons()方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">preInstantiateSingletons</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Pre-instantiating singletons in &quot;</span> + <span class="hljs-keyword">this</span>);<br>&#125;<br><br><span class="hljs-comment">// Iterate over a copy to allow for init methods which in turn register new bean definitions.</span><br><span class="hljs-comment">// While this may not be part of the regular factory bootstrap, it does otherwise work fine.</span><br>List&lt;String&gt; beanNames = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(<span class="hljs-keyword">this</span>.beanDefinitionNames);<br><br><span class="hljs-comment">// Trigger initialization of all non-lazy singleton beans...</span><br><span class="hljs-comment">// 遍历beanDefinitionNames这个ArrayList对象中的beanName，</span><br><span class="hljs-keyword">for</span> (String beanName : beanNames) &#123;<br>RootBeanDefinition bd = getMergedLocalBeanDefinition(beanName);<br><span class="hljs-keyword">if</span> (!bd.isAbstract() &amp;&amp; bd.isSingleton() &amp;&amp; !bd.isLazyInit()) &#123;<br><span class="hljs-keyword">if</span> (isFactoryBean(beanName)) &#123;<br>Object bean = getBean(FACTORY_BEAN_PREFIX + beanName);<br><span class="hljs-keyword">if</span> (bean <span class="hljs-keyword">instanceof</span> FactoryBean) &#123;<br><span class="hljs-keyword">final</span> FactoryBean&lt;?&gt; factory = (FactoryBean&lt;?&gt;) bean;<br><span class="hljs-keyword">boolean</span> isEagerInit;<br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span> &amp;&amp; factory <span class="hljs-keyword">instanceof</span> SmartFactoryBean) &#123;<br>isEagerInit = AccessController.doPrivileged((PrivilegedAction&lt;Boolean&gt;)<br>((SmartFactoryBean&lt;?&gt;) factory)::isEagerInit,<br>getAccessControlContext());<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>isEagerInit = (factory <span class="hljs-keyword">instanceof</span> SmartFactoryBean &amp;&amp;<br>((SmartFactoryBean&lt;?&gt;) factory).isEagerInit());<br>&#125;<br><span class="hljs-keyword">if</span> (isEagerInit) &#123;<br><span class="hljs-comment">// 创建bean并递归构建Bean之间的依赖关系</span><br>getBean(beanName);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 创建bean并递归构建Bean之间的依赖关系</span><br>getBean(beanName);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Trigger post-initialization callback for all applicable beans...</span><br><span class="hljs-keyword">for</span> (String beanName : beanNames) &#123;<br>Object singletonInstance = getSingleton(beanName);<br><span class="hljs-keyword">if</span> (singletonInstance <span class="hljs-keyword">instanceof</span> SmartInitializingSingleton) &#123;<br><span class="hljs-keyword">final</span> SmartInitializingSingleton smartSingleton = (SmartInitializingSingleton) singletonInstance;<br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span>) &#123;<br>AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; &#123;<br>smartSingleton.afterSingletonsInstantiated();<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;, getAccessControlContext());<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>smartSingleton.afterSingletonsInstantiated();<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="preInstantiateSingletons-方法中调用的getBean方法"><a href="#preInstantiateSingletons-方法中调用的getBean方法" class="headerlink" title="preInstantiateSingletons()方法中调用的getBean方法"></a>preInstantiateSingletons()方法中调用的getBean方法</h3><ul><li>getBean方法定义在BeanFactory接口中</li><li>getBean方法org.springframework.beans.factory.support.AbstractBeanFactory中实现<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">getBean</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-keyword">return</span> doGetBean(name, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">false</span>);<br>&#125;<br><br><br><br><span class="hljs-comment">//下面是上面方法调用doGetBean(name, null, null, false)方法</span><br><span class="hljs-comment">// 这个方法特别长，以下是完整代码：</span><br><span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="hljs-keyword">protected</span> &lt;T&gt; <span class="hljs-function">T <span class="hljs-title">doGetBean</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String name, <span class="hljs-meta">@Nullable</span> <span class="hljs-keyword">final</span> Class&lt;T&gt; requiredType,</span></span><br><span class="hljs-function"><span class="hljs-params"><span class="hljs-meta">@Nullable</span> <span class="hljs-keyword">final</span> Object[] args, <span class="hljs-keyword">boolean</span> typeCheckOnly)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><br><span class="hljs-keyword">final</span> String beanName = transformedBeanName(name);<br>Object bean;<br><br><span class="hljs-comment">// Eagerly check singleton cache for manually registered singletons.</span><br>Object sharedInstance = getSingleton(beanName);<br><span class="hljs-keyword">if</span> (sharedInstance != <span class="hljs-keyword">null</span> &amp;&amp; args == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br><span class="hljs-keyword">if</span> (isSingletonCurrentlyInCreation(beanName)) &#123;<br>logger.trace(<span class="hljs-string">&quot;Returning eagerly cached instance of singleton bean &#x27;&quot;</span> + beanName +<br><span class="hljs-string">&quot;&#x27; that is not fully initialized yet - a consequence of a circular reference&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>logger.trace(<span class="hljs-string">&quot;Returning cached instance of singleton bean &#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27;&quot;</span>);<br>&#125;<br>&#125;<br>bean = getObjectForBeanInstance(sharedInstance, name, beanName, <span class="hljs-keyword">null</span>);<br>&#125;<br><br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Fail if we&#x27;re already creating this bean instance:</span><br><span class="hljs-comment">// We&#x27;re assumably within a circular reference.</span><br><span class="hljs-keyword">if</span> (isPrototypeCurrentlyInCreation(beanName)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCurrentlyInCreationException(beanName);<br>&#125;<br><br><span class="hljs-comment">// Check if bean definition exists in this factory.</span><br>BeanFactory parentBeanFactory = getParentBeanFactory();<br><span class="hljs-keyword">if</span> (parentBeanFactory != <span class="hljs-keyword">null</span> &amp;&amp; !containsBeanDefinition(beanName)) &#123;<br><span class="hljs-comment">// Not found -&gt; check parent.</span><br>String nameToLookup = originalBeanName(name);<br><span class="hljs-keyword">if</span> (parentBeanFactory <span class="hljs-keyword">instanceof</span> AbstractBeanFactory) &#123;<br><span class="hljs-keyword">return</span> ((AbstractBeanFactory) parentBeanFactory).doGetBean(<br>nameToLookup, requiredType, args, typeCheckOnly);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (args != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// Delegation to parent with explicit args.</span><br><span class="hljs-keyword">return</span> (T) parentBeanFactory.getBean(nameToLookup, args);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (requiredType != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// No args -&gt; delegate to standard getBean method.</span><br><span class="hljs-keyword">return</span> parentBeanFactory.getBean(nameToLookup, requiredType);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> (T) parentBeanFactory.getBean(nameToLookup);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (!typeCheckOnly) &#123;<br>markBeanAsCreated(beanName);<br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">final</span> RootBeanDefinition mbd = getMergedLocalBeanDefinition(beanName);<br>checkMergedBeanDefinition(mbd, beanName, args);<br><br><span class="hljs-comment">// Guarantee initialization of beans that the current bean depends on.</span><br><span class="hljs-comment">// 获取当前bean的依赖关系</span><br>String[] dependsOn = mbd.getDependsOn();<br><span class="hljs-comment">// 根据依赖的beanName递归调用getBean()方法，不断探寻其依赖的bean，直到getSingleton方法返回依赖的Bean，即当前正在创建的Bean</span><br><span class="hljs-comment">// 直到依赖关系最底层的bean没有依赖对象了，至此整个递归过程结束  </span><br><span class="hljs-keyword">if</span> (dependsOn != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">for</span> (String dep : dependsOn) &#123;<br><span class="hljs-keyword">if</span> (isDependent(beanName, dep)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(mbd.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;Circular depends-on relationship between &#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27; and &#x27;&quot;</span> + dep + <span class="hljs-string">&quot;&#x27;&quot;</span>);<br>&#125;<br><span class="hljs-comment">// </span><br>registerDependentBean(dep, beanName);<br><span class="hljs-keyword">try</span> &#123;<br>getBean(dep);<br>&#125;<br><span class="hljs-keyword">catch</span> (NoSuchBeanDefinitionException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(mbd.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;&#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27; depends on missing bean &#x27;&quot;</span> + dep + <span class="hljs-string">&quot;&#x27;&quot;</span>, ex);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">// Create bean instance.</span><br><span class="hljs-keyword">if</span> (mbd.isSingleton()) &#123;<br><span class="hljs-comment">// getSingleton方法的参数是createBean(beanName, mbd, args)方法的返回值</span><br>sharedInstance = getSingleton(beanName, () -&gt; &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// createBean方法在AbstractBeanFactory抽象类中定义，具体实现是在AbstractAutowireCapableBeanFactory抽象类中</span><br><span class="hljs-keyword">return</span> createBean(beanName, mbd, args);<br>&#125;<br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br><span class="hljs-comment">// Explicitly remove instance from singleton cache: It might have been put there</span><br><span class="hljs-comment">// eagerly by the creation process, to allow for circular reference resolution.</span><br><span class="hljs-comment">// Also remove any beans that received a temporary reference to the bean.</span><br>destroySingleton(beanName);<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br>&#125;);<br>bean = getObjectForBeanInstance(sharedInstance, name, beanName, mbd);<br>&#125;<br><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mbd.isPrototype()) &#123;<br><span class="hljs-comment">// It&#x27;s a prototype -&gt; create a new instance.</span><br>Object prototypeInstance = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">try</span> &#123;<br>beforePrototypeCreation(beanName);<br>prototypeInstance = createBean(beanName, mbd, args);<br>&#125;<br><span class="hljs-keyword">finally</span> &#123;<br>afterPrototypeCreation(beanName);<br>&#125;<br>bean = getObjectForBeanInstance(prototypeInstance, name, beanName, mbd);<br>&#125;<br><br><span class="hljs-keyword">else</span> &#123;<br>String scopeName = mbd.getScope();<br><span class="hljs-keyword">final</span> Scope scope = <span class="hljs-keyword">this</span>.scopes.get(scopeName);<br><span class="hljs-keyword">if</span> (scope == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">&quot;No Scope registered for scope name &#x27;&quot;</span> + scopeName + <span class="hljs-string">&quot;&#x27;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br>Object scopedInstance = scope.get(beanName, () -&gt; &#123;<br>beforePrototypeCreation(beanName);<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">return</span> createBean(beanName, mbd, args);<br>&#125;<br><span class="hljs-keyword">finally</span> &#123;<br>afterPrototypeCreation(beanName);<br>&#125;<br>&#125;);<br>bean = getObjectForBeanInstance(scopedInstance, name, beanName, mbd);<br>&#125;<br><span class="hljs-keyword">catch</span> (IllegalStateException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(beanName,<br><span class="hljs-string">&quot;Scope &#x27;&quot;</span> + scopeName + <span class="hljs-string">&quot;&#x27; is not active for the current thread; consider &quot;</span> +<br><span class="hljs-string">&quot;defining a scoped proxy for this bean if you intend to refer to it from a singleton&quot;</span>,<br>ex);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br>cleanupAfterBeanCreationFailure(beanName);<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Check if required type matches the type of the actual bean instance.</span><br><span class="hljs-keyword">if</span> (requiredType != <span class="hljs-keyword">null</span> &amp;&amp; !requiredType.isInstance(bean)) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>T convertedBean = getTypeConverter().convertIfNecessary(bean, requiredType);<br><span class="hljs-keyword">if</span> (convertedBean == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());<br>&#125;<br><span class="hljs-keyword">return</span> convertedBean;<br>&#125;<br><span class="hljs-keyword">catch</span> (TypeMismatchException ex) &#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Failed to convert bean &#x27;&quot;</span> + name + <span class="hljs-string">&quot;&#x27; to required type &#x27;&quot;</span> +<br>ClassUtils.getQualifiedName(requiredType) + <span class="hljs-string">&quot;&#x27;&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> (T) bean;<br>&#125;<br><br><br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractAutowireCapableBeanFactory类中的createBean-String-beanName-RootBeanDefinition-mbd-Nullable-Object-args-方法"><a href="#AbstractAutowireCapableBeanFactory类中的createBean-String-beanName-RootBeanDefinition-mbd-Nullable-Object-args-方法" class="headerlink" title="AbstractAutowireCapableBeanFactory类中的createBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)方法"></a>AbstractAutowireCapableBeanFactory类中的createBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)方法</h4><ul><li>代码位置：org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> Object <span class="hljs-title">createBean</span><span class="hljs-params">(String beanName, RootBeanDefinition mbd, <span class="hljs-meta">@Nullable</span> Object[] args)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeanCreationException </span>&#123;<br><br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Creating instance of bean &#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27;&quot;</span>);<br>&#125;<br>RootBeanDefinition mbdToUse = mbd;<br><br><span class="hljs-comment">// Make sure bean class is actually resolved at this point, and</span><br><span class="hljs-comment">// clone the bean definition in case of a dynamically resolved Class</span><br><span class="hljs-comment">// which cannot be stored in the shared merged bean definition.</span><br>Class&lt;?&gt; resolvedClass = resolveBeanClass(mbd, beanName);<br><span class="hljs-keyword">if</span> (resolvedClass != <span class="hljs-keyword">null</span> &amp;&amp; !mbd.hasBeanClass() &amp;&amp; mbd.getBeanClassName() != <span class="hljs-keyword">null</span>) &#123;<br>mbdToUse = <span class="hljs-keyword">new</span> RootBeanDefinition(mbd);<br>mbdToUse.setBeanClass(resolvedClass);<br>&#125;<br><br><span class="hljs-comment">// Prepare method overrides.</span><br><span class="hljs-keyword">try</span> &#123;<br>mbdToUse.prepareMethodOverrides();<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanDefinitionValidationException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(mbdToUse.getResourceDescription(),<br>beanName, <span class="hljs-string">&quot;Validation of method overrides failed&quot;</span>, ex);<br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.</span><br>Object bean = resolveBeforeInstantiation(beanName, mbdToUse);<br><span class="hljs-keyword">if</span> (bean != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> bean;<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(mbdToUse.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;BeanPostProcessor before instantiation of bean failed&quot;</span>, ex);<br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// createBean方法的核心  该方法会返回Bean对象的实例，具体代码在下面贴出</span><br>Object beanInstance = doCreateBean(beanName, mbdToUse, args);<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Finished creating instance of bean &#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> beanInstance;<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanCreationException | ImplicitlyAppearedSingletonException ex) &#123;<br><span class="hljs-comment">// A previously detected exception with proper bean creation context already,</span><br><span class="hljs-comment">// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry.</span><br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbdToUse.getResourceDescription(), beanName, <span class="hljs-string">&quot;Unexpected exception during bean creation&quot;</span>, ex);<br>&#125;<br>&#125;<br><br><br><br><span class="hljs-comment">// 在AbstractAutowireCapableBeanFactory抽象类的createBean方法中调用的doCreateBean(beanName, mbdToUse, args)方法</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> Object <span class="hljs-title">doCreateBean</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String beanName, <span class="hljs-keyword">final</span> RootBeanDefinition mbd, <span class="hljs-keyword">final</span> <span class="hljs-meta">@Nullable</span> Object[] args)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeanCreationException </span>&#123;<br><br><span class="hljs-comment">// Instantiate the bean.</span><br>BeanWrapper instanceWrapper = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">if</span> (mbd.isSingleton()) &#123;<br>instanceWrapper = <span class="hljs-keyword">this</span>.factoryBeanInstanceCache.remove(beanName);<br>&#125;<br><span class="hljs-keyword">if</span> (instanceWrapper == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// 创建Bean实例</span><br>instanceWrapper = createBeanInstance(beanName, mbd, args);<br>&#125;<br><span class="hljs-keyword">final</span> Object bean = instanceWrapper.getWrappedInstance();<br>Class&lt;?&gt; beanType = instanceWrapper.getWrappedClass();<br><span class="hljs-keyword">if</span> (beanType != NullBean.class) &#123;<br>mbd.resolvedTargetType = beanType;<br>&#125;<br><br><span class="hljs-comment">// Allow post-processors to modify the merged bean definition.</span><br><span class="hljs-keyword">synchronized</span> (mbd.postProcessingLock) &#123;<br><span class="hljs-keyword">if</span> (!mbd.postProcessed) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName);<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(mbd.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;Post-processing of merged bean definition failed&quot;</span>, ex);<br>&#125;<br>mbd.postProcessed = <span class="hljs-keyword">true</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Eagerly cache singletons to be able to resolve circular references</span><br><span class="hljs-comment">// even when triggered by lifecycle interfaces like BeanFactoryAware.</span><br><span class="hljs-keyword">boolean</span> earlySingletonExposure = (mbd.isSingleton() &amp;&amp; <span class="hljs-keyword">this</span>.allowCircularReferences &amp;&amp;<br>isSingletonCurrentlyInCreation(beanName));<br><span class="hljs-keyword">if</span> (earlySingletonExposure) &#123;<br><span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>logger.trace(<span class="hljs-string">&quot;Eagerly caching bean &#x27;&quot;</span> + beanName +<br><span class="hljs-string">&quot;&#x27; to allow for resolving potential circular references&quot;</span>);<br>&#125;<br>addSingletonFactory(beanName, () -&gt; getEarlyBeanReference(beanName, mbd, bean));<br>&#125;<br><br><span class="hljs-comment">// Initialize the bean instance.</span><br>Object exposedObject = bean;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 填充bean，实际进行依赖注入的地方</span><br>populateBean(beanName, mbd, instanceWrapper);<br>exposedObject = initializeBean(beanName, exposedObject, mbd);<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">if</span> (ex <span class="hljs-keyword">instanceof</span> BeanCreationException &amp;&amp; beanName.equals(((BeanCreationException) ex).getBeanName())) &#123;<br><span class="hljs-keyword">throw</span> (BeanCreationException) ex;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Initialization of bean failed&quot;</span>, ex);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (earlySingletonExposure) &#123;<br>Object earlySingletonReference = getSingleton(beanName, <span class="hljs-keyword">false</span>);<br><span class="hljs-keyword">if</span> (earlySingletonReference != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">if</span> (exposedObject == bean) &#123;<br>exposedObject = earlySingletonReference;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.allowRawInjectionDespiteWrapping &amp;&amp; hasDependentBean(beanName)) &#123;<br>String[] dependentBeans = getDependentBeans(beanName);<br>Set&lt;String&gt; actualDependentBeans = <span class="hljs-keyword">new</span> LinkedHashSet&lt;&gt;(dependentBeans.length);<br><span class="hljs-keyword">for</span> (String dependentBean : dependentBeans) &#123;<br><span class="hljs-keyword">if</span> (!removeSingletonIfCreatedForTypeCheckOnly(dependentBean)) &#123;<br>actualDependentBeans.add(dependentBean);<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (!actualDependentBeans.isEmpty()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCurrentlyInCreationException(beanName,<br><span class="hljs-string">&quot;Bean with name &#x27;&quot;</span> + beanName + <span class="hljs-string">&quot;&#x27; has been injected into other beans [&quot;</span> +<br>StringUtils.collectionToCommaDelimitedString(actualDependentBeans) +<br><span class="hljs-string">&quot;] in its raw version as part of a circular reference, but has eventually been &quot;</span> +<br><span class="hljs-string">&quot;wrapped. This means that said other beans do not use the final version of the &quot;</span> +<br><span class="hljs-string">&quot;bean. This is often the result of over-eager type matching - consider using &quot;</span> +<br><span class="hljs-string">&quot;&#x27;getBeanNamesOfType&#x27; with the &#x27;allowEagerInit&#x27; flag turned off, for example.&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Register bean as disposable.</span><br><span class="hljs-keyword">try</span> &#123;<br>registerDisposableBeanIfNecessary(beanName, bean, mbd);<br>&#125;<br><span class="hljs-keyword">catch</span> (BeanDefinitionValidationException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Invalid destruction signature&quot;</span>, ex);<br>&#125;<br><br><span class="hljs-keyword">return</span> exposedObject;<br>&#125;<br><br><br><span class="hljs-comment">// 在AbstractAutowireCapableBeanFactory抽象类的doCreateBean方法中调用的 createBeanInstance(beanName, mbd, args)方法</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> BeanWrapper <span class="hljs-title">createBeanInstance</span><span class="hljs-params">(String beanName, RootBeanDefinition mbd, <span class="hljs-meta">@Nullable</span> Object[] args)</span> </span>&#123;<br><span class="hljs-comment">// Make sure bean class is actually resolved at this point.</span><br>Class&lt;?&gt; beanClass = resolveBeanClass(mbd, beanName);<br><br><span class="hljs-keyword">if</span> (beanClass != <span class="hljs-keyword">null</span> &amp;&amp; !Modifier.isPublic(beanClass.getModifiers()) &amp;&amp; !mbd.isNonPublicAccessAllowed()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(mbd.getResourceDescription(), beanName,<br><span class="hljs-string">&quot;Bean class isn&#x27;t public, and non-public access not allowed: &quot;</span> + beanClass.getName());<br>&#125;<br><br>Supplier&lt;?&gt; instanceSupplier = mbd.getInstanceSupplier();<br><span class="hljs-keyword">if</span> (instanceSupplier != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> obtainFromSupplier(instanceSupplier, beanName);<br>&#125;<br><br><span class="hljs-keyword">if</span> (mbd.getFactoryMethodName() != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> instantiateUsingFactoryMethod(beanName, mbd, args);<br>&#125;<br><br><span class="hljs-comment">// Shortcut when re-creating the same bean...</span><br><span class="hljs-keyword">boolean</span> resolved = <span class="hljs-keyword">false</span>;<br><span class="hljs-keyword">boolean</span> autowireNecessary = <span class="hljs-keyword">false</span>;<br><span class="hljs-keyword">if</span> (args == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">synchronized</span> (mbd.constructorArgumentLock) &#123;<br><span class="hljs-keyword">if</span> (mbd.resolvedConstructorOrFactoryMethod != <span class="hljs-keyword">null</span>) &#123;<br>resolved = <span class="hljs-keyword">true</span>;<br>autowireNecessary = mbd.constructorArgumentsResolved;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (resolved) &#123;<br><span class="hljs-keyword">if</span> (autowireNecessary) &#123;<br><span class="hljs-keyword">return</span> autowireConstructor(beanName, mbd, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 调用instantiateBean方法</span><br><span class="hljs-keyword">return</span> instantiateBean(beanName, mbd);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Candidate constructors for autowiring?</span><br>Constructor&lt;?&gt;[] ctors = determineConstructorsFromBeanPostProcessors(beanClass, beanName);<br><span class="hljs-keyword">if</span> (ctors != <span class="hljs-keyword">null</span> || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||<br>mbd.hasConstructorArgumentValues() || !ObjectUtils.isEmpty(args)) &#123;<br><span class="hljs-keyword">return</span> autowireConstructor(beanName, mbd, ctors, args);<br>&#125;<br><br><span class="hljs-comment">// Preferred constructors for default construction?</span><br>ctors = mbd.getPreferredConstructors();<br><span class="hljs-keyword">if</span> (ctors != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> autowireConstructor(beanName, mbd, ctors, <span class="hljs-keyword">null</span>);<br>&#125;<br><br><span class="hljs-comment">// No special handling: simply use no-arg constructor.</span><br><span class="hljs-keyword">return</span> instantiateBean(beanName, mbd);<br>&#125;<br><br><span class="hljs-comment">// 在AbstractAutowireCapableBeanFactory抽象类的createBeanInstance方法中调用的instantiateBean(beanName, mbd)方法</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> BeanWrapper <span class="hljs-title">instantiateBean</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String beanName, <span class="hljs-keyword">final</span> RootBeanDefinition mbd)</span> </span>&#123;<br><span class="hljs-keyword">try</span> &#123;<br>Object beanInstance;<br><span class="hljs-keyword">final</span> BeanFactory parent = <span class="hljs-keyword">this</span>;<br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// 核心逻辑</span><br>beanInstance = AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt;<br>getInstantiationStrategy().instantiate(mbd, beanName, parent),<br>getAccessControlContext());<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 核心逻辑</span><br>beanInstance = getInstantiationStrategy().instantiate(mbd, beanName, parent);<br>&#125;<br>BeanWrapper bw = <span class="hljs-keyword">new</span> BeanWrapperImpl(beanInstance);<br>initBeanWrapper(bw);<br><span class="hljs-keyword">return</span> bw;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Instantiation of bean failed&quot;</span>, ex);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 上面的getInstantiationStrategy()方法代码</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> InstantiationStrategy <span class="hljs-title">getInstantiationStrategy</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.instantiationStrategy;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="getInstantiationStrategy-方法的返回接口对象的策略对象的一个实现SimpleInstantiationStrategy"><a href="#getInstantiationStrategy-方法的返回接口对象的策略对象的一个实现SimpleInstantiationStrategy" class="headerlink" title="getInstantiationStrategy()方法的返回接口对象的策略对象的一个实现SimpleInstantiationStrategy"></a>getInstantiationStrategy()方法的返回接口对象的策略对象的一个实现SimpleInstantiationStrategy</h3><ul><li>org.springframework.beans.factory.support.SimpleInstantiationStrategy</li><li>SimpleInstantiationStrategy.instantiate(RootBeanDefinition bd, @Nullable String beanName, BeanFactory owner)方法的具体实现：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">instantiate</span><span class="hljs-params">(RootBeanDefinition bd, <span class="hljs-meta">@Nullable</span> String beanName, BeanFactory owner)</span> </span>&#123;<br><span class="hljs-comment">// Don&#x27;t override the class with CGLIB if no overrides.</span><br><span class="hljs-keyword">if</span> (!bd.hasMethodOverrides()) &#123;<br>Constructor&lt;?&gt; constructorToUse;<br><span class="hljs-keyword">synchronized</span> (bd.constructorArgumentLock) &#123;<br>constructorToUse = (Constructor&lt;?&gt;) bd.resolvedConstructorOrFactoryMethod;<br><span class="hljs-keyword">if</span> (constructorToUse == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">final</span> Class&lt;?&gt; clazz = bd.getBeanClass();<br><span class="hljs-keyword">if</span> (clazz.isInterface()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(clazz, <span class="hljs-string">&quot;Specified class is an interface&quot;</span>);<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span>) &#123;<br>constructorToUse = AccessController.doPrivileged(<br>(PrivilegedExceptionAction&lt;Constructor&lt;?&gt;&gt;) clazz::getDeclaredConstructor);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>constructorToUse = clazz.getDeclaredConstructor();<br>&#125;<br>bd.resolvedConstructorOrFactoryMethod = constructorToUse;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(clazz, <span class="hljs-string">&quot;No default constructor found&quot;</span>, ex);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">// 调用静态方法BeanUtils.instantiateClass(constructorToUse);</span><br><span class="hljs-keyword">return</span> BeanUtils.instantiateClass(constructorToUse);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Must generate CGLIB subclass.</span><br><span class="hljs-keyword">return</span> instantiateWithMethodInjection(bd, beanName, owner);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="静态方法BeanUtils-instantiateClass-constructorToUse-的实现细节"><a href="#静态方法BeanUtils-instantiateClass-constructorToUse-的实现细节" class="headerlink" title="静态方法BeanUtils.instantiateClass(constructorToUse)的实现细节"></a>静态方法BeanUtils.instantiateClass(constructorToUse)的实现细节</h4></li><li>代码位置：org.springframework.beans.BeanUtils<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-function">T <span class="hljs-title">instantiateClass</span><span class="hljs-params">(Constructor&lt;T&gt; ctor, Object... args)</span> <span class="hljs-keyword">throws</span> BeanInstantiationException </span>&#123;<br>Assert.notNull(ctor, <span class="hljs-string">&quot;Constructor must not be null&quot;</span>);<br><span class="hljs-keyword">try</span> &#123;<br>ReflectionUtils.makeAccessible(ctor);<br><span class="hljs-comment">// 判断是否是Kotlin类型</span><br><span class="hljs-keyword">if</span> (KotlinDetector.isKotlinReflectPresent() &amp;&amp; KotlinDetector.isKotlinType(ctor.getDeclaringClass())) &#123;<br><span class="hljs-comment">// 是Kotlin类型</span><br><span class="hljs-keyword">return</span> KotlinDelegate.instantiateClass(ctor, args);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 不是Kotlin类型</span><br>Class&lt;?&gt;[] parameterTypes = ctor.getParameterTypes();<br>Assert.isTrue(args.length &lt;= parameterTypes.length, <span class="hljs-string">&quot;Can&#x27;t specify more arguments than constructor parameters&quot;</span>);<br>Object[] argsWithDefaultValues = <span class="hljs-keyword">new</span> Object[args.length];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; args.length; i++) &#123;<br><span class="hljs-keyword">if</span> (args[i] == <span class="hljs-keyword">null</span>) &#123;<br>Class&lt;?&gt; parameterType = parameterTypes[i];<br>argsWithDefaultValues[i] = (parameterType.isPrimitive() ? DEFAULT_TYPE_VALUES.get(parameterType) : <span class="hljs-keyword">null</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>argsWithDefaultValues[i] = args[i];<br>&#125;<br>&#125;<br><span class="hljs-comment">// 调用Constructor的newInstance方法，使用反射创建实例</span><br><span class="hljs-comment">// 到此之后bean实例创建完成</span><br><span class="hljs-keyword">return</span> ctor.newInstance(argsWithDefaultValues);<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (InstantiationException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(ctor, <span class="hljs-string">&quot;Is it an abstract class?&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (IllegalAccessException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(ctor, <span class="hljs-string">&quot;Is the constructor accessible?&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (IllegalArgumentException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(ctor, <span class="hljs-string">&quot;Illegal arguments for constructor&quot;</span>, ex);<br>&#125;<br><span class="hljs-keyword">catch</span> (InvocationTargetException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanInstantiationException(ctor, <span class="hljs-string">&quot;Constructor threw exception&quot;</span>, ex.getTargetException());<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractAutowireCapableBeanFactory抽象类的中doCreateBean方法中调用的populateBean-beanName-mbd-instanceWrapper-方法"><a href="#AbstractAutowireCapableBeanFactory抽象类的中doCreateBean方法中调用的populateBean-beanName-mbd-instanceWrapper-方法" class="headerlink" title="AbstractAutowireCapableBeanFactory抽象类的中doCreateBean方法中调用的populateBean(beanName, mbd, instanceWrapper)方法"></a>AbstractAutowireCapableBeanFactory抽象类的中doCreateBean方法中调用的populateBean(beanName, mbd, instanceWrapper)方法</h4><ul><li>在AbstractAutowireCapableBeanFactory抽象类中的方法populateBean方法</li><li>该方法用于填充bean 具体发生依赖注入的地方<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SuppressWarnings(&quot;deprecation&quot;)</span>  <span class="hljs-comment">// for postProcessPropertyValues</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">populateBean</span><span class="hljs-params">(String beanName, RootBeanDefinition mbd, <span class="hljs-meta">@Nullable</span> BeanWrapper bw)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (bw == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">if</span> (mbd.hasPropertyValues()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Cannot apply property values to null instance&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Skip property population phase for null instance.</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Give any InstantiationAwareBeanPostProcessors the opportunity to modify the</span><br><span class="hljs-comment">// state of the bean before properties are set. This can be used, for example,</span><br><span class="hljs-comment">// to support styles of field injection.</span><br><span class="hljs-keyword">boolean</span> continueWithPropertyPopulation = <span class="hljs-keyword">true</span>;<br><br><span class="hljs-keyword">if</span> (!mbd.isSynthetic() &amp;&amp; hasInstantiationAwareBeanPostProcessors()) &#123;<br><span class="hljs-keyword">for</span> (BeanPostProcessor bp : getBeanPostProcessors()) &#123;<br><span class="hljs-keyword">if</span> (bp <span class="hljs-keyword">instanceof</span> InstantiationAwareBeanPostProcessor) &#123;<br>InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;<br><span class="hljs-keyword">if</span> (!ibp.postProcessAfterInstantiation(bw.getWrappedInstance(), beanName)) &#123;<br>continueWithPropertyPopulation = <span class="hljs-keyword">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (!continueWithPropertyPopulation) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>    <span class="hljs-comment">// 获取bean的所有属性 用于后面配置Property元素 即依赖关系</span><br>PropertyValues pvs = (mbd.hasPropertyValues() ? mbd.getPropertyValues() : <span class="hljs-keyword">null</span>);<br><br><span class="hljs-keyword">int</span> resolvedAutowireMode = mbd.getResolvedAutowireMode();<br><span class="hljs-keyword">if</span> (resolvedAutowireMode == AUTOWIRE_BY_NAME || resolvedAutowireMode == AUTOWIRE_BY_TYPE) &#123;<br>MutablePropertyValues newPvs = <span class="hljs-keyword">new</span> MutablePropertyValues(pvs);<br><span class="hljs-comment">// Add property values based on autowire by name if applicable.</span><br><span class="hljs-keyword">if</span> (resolvedAutowireMode == AUTOWIRE_BY_NAME) &#123;<br>autowireByName(beanName, mbd, bw, newPvs);<br>&#125;<br><span class="hljs-comment">// Add property values based on autowire by type if applicable.</span><br><span class="hljs-keyword">if</span> (resolvedAutowireMode == AUTOWIRE_BY_TYPE) &#123;<br>autowireByType(beanName, mbd, bw, newPvs);<br>&#125;<br>pvs = newPvs;<br>&#125;<br><br><span class="hljs-keyword">boolean</span> hasInstAwareBpps = hasInstantiationAwareBeanPostProcessors();<br><span class="hljs-keyword">boolean</span> needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);<br><br>PropertyDescriptor[] filteredPds = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">if</span> (hasInstAwareBpps) &#123;<br><span class="hljs-keyword">if</span> (pvs == <span class="hljs-keyword">null</span>) &#123;<br>pvs = mbd.getPropertyValues();<br>&#125;<br><span class="hljs-keyword">for</span> (BeanPostProcessor bp : getBeanPostProcessors()) &#123;<br><span class="hljs-keyword">if</span> (bp <span class="hljs-keyword">instanceof</span> InstantiationAwareBeanPostProcessor) &#123;<br>InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;<br>PropertyValues pvsToUse = ibp.postProcessProperties(pvs, bw.getWrappedInstance(), beanName);<br><span class="hljs-keyword">if</span> (pvsToUse == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">if</span> (filteredPds == <span class="hljs-keyword">null</span>) &#123;<br>filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);<br>&#125;<br>pvsToUse = ibp.postProcessPropertyValues(pvs, filteredPds, bw.getWrappedInstance(), beanName);<br><span class="hljs-keyword">if</span> (pvsToUse == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br>pvs = pvsToUse;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (needsDepCheck) &#123;<br><span class="hljs-keyword">if</span> (filteredPds == <span class="hljs-keyword">null</span>) &#123;<br>filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);<br>&#125;<br>checkDependencies(beanName, mbd, filteredPds, pvs);<br>&#125;<br><br><span class="hljs-keyword">if</span> (pvs != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// 核心逻辑 applyPropertyValues方法的具体代码在下面</span><br>applyPropertyValues(beanName, mbd, bw, pvs);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 上面方法中调用的applyPropertyValues方法具体代码</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">applyPropertyValues</span><span class="hljs-params">(String beanName, BeanDefinition mbd, BeanWrapper bw, PropertyValues pvs)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (pvs.isEmpty()) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span> &amp;&amp; bw <span class="hljs-keyword">instanceof</span> BeanWrapperImpl) &#123;<br>((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());<br>&#125;<br><br>MutablePropertyValues mpvs = <span class="hljs-keyword">null</span>;<br>List&lt;PropertyValue&gt; original;<br><br><span class="hljs-keyword">if</span> (pvs <span class="hljs-keyword">instanceof</span> MutablePropertyValues) &#123;<br>mpvs = (MutablePropertyValues) pvs;<br><span class="hljs-keyword">if</span> (mpvs.isConverted()) &#123;<br><span class="hljs-comment">// Shortcut: use the pre-converted values as-is.</span><br><span class="hljs-keyword">try</span> &#123;<br>bw.setPropertyValues(mpvs);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Error setting property values&quot;</span>, ex);<br>&#125;<br>&#125;<br>original = mpvs.getPropertyValueList();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>original = Arrays.asList(pvs.getPropertyValues());<br>&#125;<br><br>TypeConverter converter = getCustomTypeConverter();<br><span class="hljs-keyword">if</span> (converter == <span class="hljs-keyword">null</span>) &#123;<br>converter = bw;<br>&#125;<br>BeanDefinitionValueResolver valueResolver = <span class="hljs-keyword">new</span> BeanDefinitionValueResolver(<span class="hljs-keyword">this</span>, beanName, mbd, converter);<br><br><span class="hljs-comment">// Create a deep copy, resolving any references for values.</span><br>List&lt;PropertyValue&gt; deepCopy = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(original.size());<br><span class="hljs-keyword">boolean</span> resolveNecessary = <span class="hljs-keyword">false</span>;<br><span class="hljs-keyword">for</span> (PropertyValue pv : original) &#123;<br><span class="hljs-keyword">if</span> (pv.isConverted()) &#123;<br>deepCopy.add(pv);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>String propertyName = pv.getName();<br>Object originalValue = pv.getValue();<br><span class="hljs-keyword">if</span> (originalValue == AutowiredPropertyMarker.INSTANCE) &#123;<br>Method writeMethod = bw.getPropertyDescriptor(propertyName).getWriteMethod();<br><span class="hljs-keyword">if</span> (writeMethod == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">&quot;Autowire marker for property without write method: &quot;</span> + pv);<br>&#125;<br>originalValue = <span class="hljs-keyword">new</span> DependencyDescriptor(<span class="hljs-keyword">new</span> MethodParameter(writeMethod, <span class="hljs-number">0</span>), <span class="hljs-keyword">true</span>);<br>&#125;<br><span class="hljs-comment">// 获取property对应的值   resolveValueIfNecessary方法的代码在下面给出</span><br>Object resolvedValue = valueResolver.resolveValueIfNecessary(pv, originalValue);<br>Object convertedValue = resolvedValue;<br><span class="hljs-keyword">boolean</span> convertible = bw.isWritableProperty(propertyName) &amp;&amp;<br>!PropertyAccessorUtils.isNestedOrIndexedProperty(propertyName);<br><span class="hljs-keyword">if</span> (convertible) &#123;<br>convertedValue = convertForProperty(resolvedValue, propertyName, bw, converter);<br>&#125;<br><span class="hljs-comment">// Possibly store converted value in merged bean definition,</span><br><span class="hljs-comment">// in order to avoid re-conversion for every created bean instance.</span><br><span class="hljs-keyword">if</span> (resolvedValue == originalValue) &#123;<br><span class="hljs-keyword">if</span> (convertible) &#123;<br>pv.setConvertedValue(convertedValue);<br>&#125;<br>deepCopy.add(pv);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (convertible &amp;&amp; originalValue <span class="hljs-keyword">instanceof</span> TypedStringValue &amp;&amp;<br>!((TypedStringValue) originalValue).isDynamic() &amp;&amp;<br>!(convertedValue <span class="hljs-keyword">instanceof</span> Collection || ObjectUtils.isArray(convertedValue))) &#123;<br>pv.setConvertedValue(convertedValue);<br>deepCopy.add(pv);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>resolveNecessary = <span class="hljs-keyword">true</span>;<br>deepCopy.add(<span class="hljs-keyword">new</span> PropertyValue(pv, convertedValue));<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (mpvs != <span class="hljs-keyword">null</span> &amp;&amp; !resolveNecessary) &#123;<br>mpvs.setConverted();<br>&#125;<br><br><span class="hljs-comment">// Set our (possibly massaged) deep copy.</span><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 获取到依赖的对象值后 将依赖值注入</span><br>bw.setPropertyValues(<span class="hljs-keyword">new</span> MutablePropertyValues(deepCopy));<br>&#125;<br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br>mbd.getResourceDescription(), beanName, <span class="hljs-string">&quot;Error setting property values&quot;</span>, ex);<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>####################################################################################################################################################33</li></ul><h4 id="valueResolver-resolveValueIfNecessary-pv-originalValue-对应的方法"><a href="#valueResolver-resolveValueIfNecessary-pv-originalValue-对应的方法" class="headerlink" title="valueResolver.resolveValueIfNecessary(pv, originalValue);对应的方法"></a>valueResolver.resolveValueIfNecessary(pv, originalValue);对应的方法</h4><ul><li>代码位置：org.springframework.beans.factory.support.BeanDefinitionValueResolver<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Nullable</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">resolveValueIfNecessary</span><span class="hljs-params">(Object argName, <span class="hljs-meta">@Nullable</span> Object value)</span> </span>&#123;<br><span class="hljs-comment">// We must check each value to see whether it requires a runtime reference</span><br><span class="hljs-comment">// to another bean to be resolved.</span><br><span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> RuntimeBeanReference) &#123;<br>RuntimeBeanReference ref = (RuntimeBeanReference) value;<br><span class="hljs-comment">// 核心逻辑 解决Bean依赖关系 具体代码在下方贴出</span><br><span class="hljs-keyword">return</span> resolveReference(argName, ref);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> RuntimeBeanNameReference) &#123;<br>String refName = ((RuntimeBeanNameReference) value).getBeanName();<br>refName = String.valueOf(doEvaluate(refName));<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.beanFactory.containsBean(refName)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanDefinitionStoreException(<br><span class="hljs-string">&quot;Invalid bean name &#x27;&quot;</span> + refName + <span class="hljs-string">&quot;&#x27; in bean reference for &quot;</span> + argName);<br>&#125;<br><span class="hljs-keyword">return</span> refName;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> BeanDefinitionHolder) &#123;<br><span class="hljs-comment">// Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases.</span><br>BeanDefinitionHolder bdHolder = (BeanDefinitionHolder) value;<br><span class="hljs-keyword">return</span> resolveInnerBean(argName, bdHolder.getBeanName(), bdHolder.getBeanDefinition());<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> BeanDefinition) &#123;<br><span class="hljs-comment">// Resolve plain BeanDefinition, without contained name: use dummy name.</span><br>BeanDefinition bd = (BeanDefinition) value;<br>String innerBeanName = <span class="hljs-string">&quot;(inner bean)&quot;</span> + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR +<br>ObjectUtils.getIdentityHexString(bd);<br><span class="hljs-keyword">return</span> resolveInnerBean(argName, innerBeanName, bd);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> DependencyDescriptor) &#123;<br>Set&lt;String&gt; autowiredBeanNames = <span class="hljs-keyword">new</span> LinkedHashSet&lt;&gt;(<span class="hljs-number">4</span>);<br>Object result = <span class="hljs-keyword">this</span>.beanFactory.resolveDependency(<br>(DependencyDescriptor) value, <span class="hljs-keyword">this</span>.beanName, autowiredBeanNames, <span class="hljs-keyword">this</span>.typeConverter);<br><span class="hljs-keyword">for</span> (String autowiredBeanName : autowiredBeanNames) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.beanFactory.containsBean(autowiredBeanName)) &#123;<br><span class="hljs-keyword">this</span>.beanFactory.registerDependentBean(autowiredBeanName, <span class="hljs-keyword">this</span>.beanName);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> ManagedArray) &#123;<br><span class="hljs-comment">// May need to resolve contained runtime references.</span><br>ManagedArray array = (ManagedArray) value;<br>Class&lt;?&gt; elementType = array.resolvedElementType;<br><span class="hljs-keyword">if</span> (elementType == <span class="hljs-keyword">null</span>) &#123;<br>String elementTypeName = array.getElementTypeName();<br><span class="hljs-keyword">if</span> (StringUtils.hasText(elementTypeName)) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>elementType = ClassUtils.forName(elementTypeName, <span class="hljs-keyword">this</span>.beanFactory.getBeanClassLoader());<br>array.resolvedElementType = elementType;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-comment">// Improve the message by showing the context.</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br><span class="hljs-keyword">this</span>.beanDefinition.getResourceDescription(), <span class="hljs-keyword">this</span>.beanName,<br><span class="hljs-string">&quot;Error resolving array type for &quot;</span> + argName, ex);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>elementType = Object.class;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> resolveManagedArray(argName, (List&lt;?&gt;) value, elementType);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> ManagedList) &#123;<br><span class="hljs-comment">// May need to resolve contained runtime references.</span><br><span class="hljs-keyword">return</span> resolveManagedList(argName, (List&lt;?&gt;) value);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> ManagedSet) &#123;<br><span class="hljs-comment">// May need to resolve contained runtime references.</span><br><span class="hljs-keyword">return</span> resolveManagedSet(argName, (Set&lt;?&gt;) value);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> ManagedMap) &#123;<br><span class="hljs-comment">// May need to resolve contained runtime references.</span><br><span class="hljs-keyword">return</span> resolveManagedMap(argName, (Map&lt;?, ?&gt;) value);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> ManagedProperties) &#123;<br>Properties original = (Properties) value;<br>Properties copy = <span class="hljs-keyword">new</span> Properties();<br>original.forEach((propKey, propValue) -&gt; &#123;<br><span class="hljs-keyword">if</span> (propKey <span class="hljs-keyword">instanceof</span> TypedStringValue) &#123;<br>propKey = evaluate((TypedStringValue) propKey);<br>&#125;<br><span class="hljs-keyword">if</span> (propValue <span class="hljs-keyword">instanceof</span> TypedStringValue) &#123;<br>propValue = evaluate((TypedStringValue) propValue);<br>&#125;<br><span class="hljs-keyword">if</span> (propKey == <span class="hljs-keyword">null</span> || propValue == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br><span class="hljs-keyword">this</span>.beanDefinition.getResourceDescription(), <span class="hljs-keyword">this</span>.beanName,<br><span class="hljs-string">&quot;Error converting Properties key/value pair for &quot;</span> + argName + <span class="hljs-string">&quot;: resolved to null&quot;</span>);<br>&#125;<br>copy.put(propKey, propValue);<br>&#125;);<br><span class="hljs-keyword">return</span> copy;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> TypedStringValue) &#123;<br><span class="hljs-comment">// Convert value to target type here.</span><br>TypedStringValue typedStringValue = (TypedStringValue) value;<br>Object valueObject = evaluate(typedStringValue);<br><span class="hljs-keyword">try</span> &#123;<br>Class&lt;?&gt; resolvedTargetType = resolveTargetType(typedStringValue);<br><span class="hljs-keyword">if</span> (resolvedTargetType != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.typeConverter.convertIfNecessary(valueObject, resolvedTargetType);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> valueObject;<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br><span class="hljs-comment">// Improve the message by showing the context.</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br><span class="hljs-keyword">this</span>.beanDefinition.getResourceDescription(), <span class="hljs-keyword">this</span>.beanName,<br><span class="hljs-string">&quot;Error converting typed String value for &quot;</span> + argName, ex);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> NullBean) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> evaluate(value);<br>&#125;<br>&#125;<br><br><br><span class="hljs-comment">// 上面resolveValueIfNecessary方法中调用的resolveReference方法</span><br><span class="hljs-comment">// 最后获取到依赖的bean</span><br><span class="hljs-meta">@Nullable</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> Object <span class="hljs-title">resolveReference</span><span class="hljs-params">(Object argName, RuntimeBeanReference ref)</span> </span>&#123;<br><span class="hljs-keyword">try</span> &#123;<br>Object bean;<br>Class&lt;?&gt; beanType = ref.getBeanType();<br><span class="hljs-keyword">if</span> (ref.isToParent()) &#123;<br>BeanFactory parent = <span class="hljs-keyword">this</span>.beanFactory.getParentBeanFactory();<br><span class="hljs-keyword">if</span> (parent == <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br><span class="hljs-keyword">this</span>.beanDefinition.getResourceDescription(), <span class="hljs-keyword">this</span>.beanName,<br><span class="hljs-string">&quot;Cannot resolve reference to bean &quot;</span> + ref +<br><span class="hljs-string">&quot; in parent factory: no parent factory available&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (beanType != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-comment">// 发生递归调用</span><br>bean = parent.getBean(beanType);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 发生递归调用 根据依赖的名称从BeanFactory中递归得到依赖 最后获取到依赖的bean</span><br>bean = parent.getBean(String.valueOf(doEvaluate(ref.getBeanName())));<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>String resolvedName;<br><span class="hljs-keyword">if</span> (beanType != <span class="hljs-keyword">null</span>) &#123;<br>NamedBeanHolder&lt;?&gt; namedBean = <span class="hljs-keyword">this</span>.beanFactory.resolveNamedBean(beanType);<br>bean = namedBean.getBeanInstance();<br>resolvedName = namedBean.getBeanName();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>resolvedName = String.valueOf(doEvaluate(ref.getBeanName()));<br>bean = <span class="hljs-keyword">this</span>.beanFactory.getBean(resolvedName);<br>&#125;<br><span class="hljs-keyword">this</span>.beanFactory.registerDependentBean(resolvedName, <span class="hljs-keyword">this</span>.beanName);<br>&#125;<br><span class="hljs-keyword">if</span> (bean <span class="hljs-keyword">instanceof</span> NullBean) &#123;<br>bean = <span class="hljs-keyword">null</span>;<br>&#125;<br><span class="hljs-keyword">return</span> bean;<br>&#125;<br><span class="hljs-keyword">catch</span> (BeansException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BeanCreationException(<br><span class="hljs-keyword">this</span>.beanDefinition.getResourceDescription(), <span class="hljs-keyword">this</span>.beanName,<br><span class="hljs-string">&quot;Cannot resolve reference to bean &#x27;&quot;</span> + ref.getBeanName() + <span class="hljs-string">&quot;&#x27; while setting &quot;</span> + argName, ex);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractPropertyAccessor的setPropertyValues-PropertyValues-pvs-方法"><a href="#AbstractPropertyAccessor的setPropertyValues-PropertyValues-pvs-方法" class="headerlink" title="AbstractPropertyAccessor的setPropertyValues(PropertyValues pvs)方法"></a>AbstractPropertyAccessor的setPropertyValues(PropertyValues pvs)方法</h4><ul><li>代码位置：org.springframework.beans.AbstractPropertyAccessor</li><li>循环属性列表 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPropertyValues</span><span class="hljs-params">(PropertyValues pvs)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br>setPropertyValues(pvs, <span class="hljs-keyword">false</span>, <span class="hljs-keyword">false</span>);<br>&#125;<br><br><span class="hljs-comment">//  循环属性列表 </span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPropertyValues</span><span class="hljs-params">(PropertyValues pvs, <span class="hljs-keyword">boolean</span> ignoreUnknown, <span class="hljs-keyword">boolean</span> ignoreInvalid)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><br>List&lt;PropertyAccessException&gt; propertyAccessExceptions = <span class="hljs-keyword">null</span>;<br>List&lt;PropertyValue&gt; propertyValues = (pvs <span class="hljs-keyword">instanceof</span> MutablePropertyValues ?<br>((MutablePropertyValues) pvs).getPropertyValueList() : Arrays.asList(pvs.getPropertyValues()));<br>    <span class="hljs-comment">// 循环属性列表 </span><br><span class="hljs-keyword">for</span> (PropertyValue pv : propertyValues) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// This method may throw any BeansException, which won&#x27;t be caught</span><br><span class="hljs-comment">// here, if there is a critical failure such as no matching field.</span><br><span class="hljs-comment">// We can attempt to deal only with less serious exceptions.</span><br><span class="hljs-comment">// 该方法通过AbstractNestablePropertyAccessor的setPropertyValue(PropertyValue pv)方法实现</span><br>setPropertyValue(pv);<br>&#125;<br><span class="hljs-keyword">catch</span> (NotWritablePropertyException ex) &#123;<br><span class="hljs-keyword">if</span> (!ignoreUnknown) &#123;<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><span class="hljs-comment">// Otherwise, just ignore it and continue...</span><br>&#125;<br><span class="hljs-keyword">catch</span> (NullValueInNestedPathException ex) &#123;<br><span class="hljs-keyword">if</span> (!ignoreInvalid) &#123;<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><span class="hljs-comment">// Otherwise, just ignore it and continue...</span><br>&#125;<br><span class="hljs-keyword">catch</span> (PropertyAccessException ex) &#123;<br><span class="hljs-keyword">if</span> (propertyAccessExceptions == <span class="hljs-keyword">null</span>) &#123;<br>propertyAccessExceptions = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>&#125;<br>propertyAccessExceptions.add(ex);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// If we encountered individual exceptions, throw the composite exception.</span><br><span class="hljs-keyword">if</span> (propertyAccessExceptions != <span class="hljs-keyword">null</span>) &#123;<br>PropertyAccessException[] paeArray = propertyAccessExceptions.toArray(<span class="hljs-keyword">new</span> PropertyAccessException[<span class="hljs-number">0</span>]);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> PropertyBatchUpdateException(paeArray);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="AbstractNestablePropertyAccessor的-setPropertyValue-PropertyValue-pv-方法"><a href="#AbstractNestablePropertyAccessor的-setPropertyValue-PropertyValue-pv-方法" class="headerlink" title="AbstractNestablePropertyAccessor的 setPropertyValue(PropertyValue pv)方法"></a>AbstractNestablePropertyAccessor的 setPropertyValue(PropertyValue pv)方法</h4><ul><li>代码位置：org.springframework.beans.AbstractNestablePropertyAccessor<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPropertyValue</span><span class="hljs-params">(PropertyValue pv)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br>PropertyTokenHolder tokens = (PropertyTokenHolder) pv.resolvedTokens;<br><span class="hljs-keyword">if</span> (tokens == <span class="hljs-keyword">null</span>) &#123;<br>String propertyName = pv.getName();<br>AbstractNestablePropertyAccessor nestedPa;<br><span class="hljs-keyword">try</span> &#123;<br>nestedPa = getPropertyAccessorForPropertyPath(propertyName);<br>&#125;<br><span class="hljs-keyword">catch</span> (NotReadablePropertyException ex) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotWritablePropertyException(getRootClass(), <span class="hljs-keyword">this</span>.nestedPath + propertyName,<br><span class="hljs-string">&quot;Nested property in path &#x27;&quot;</span> + propertyName + <span class="hljs-string">&quot;&#x27; does not exist&quot;</span>, ex);<br>&#125;<br>tokens = getPropertyNameTokens(getFinalPath(nestedPa, propertyName));<br><span class="hljs-keyword">if</span> (nestedPa == <span class="hljs-keyword">this</span>) &#123;<br>pv.getOriginalPropertyValue().resolvedTokens = tokens;<br>&#125;<br>nestedPa.setPropertyValue(tokens, pv);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>setPropertyValue(tokens, pv);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>########################################################################################################################################</li><li>上面setPropertyValue(PropertyValue pv)方法的重载方法setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPropertyValue</span><span class="hljs-params">(PropertyTokenHolder tokens, PropertyValue pv)</span> <span class="hljs-keyword">throws</span> BeansException </span>&#123;<br><span class="hljs-keyword">if</span> (tokens.keys != <span class="hljs-keyword">null</span>) &#123;<br>processKeyedProperty(tokens, pv);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>processLocalProperty(tokens, pv);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>processLocalProperty(PropertyTokenHolder tokens, PropertyValue pv)方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">processLocalProperty</span><span class="hljs-params">(PropertyTokenHolder tokens, PropertyValue pv)</span> </span>&#123;<br>PropertyHandler ph = getLocalPropertyHandler(tokens.actualName);<br><span class="hljs-keyword">if</span> (ph == <span class="hljs-keyword">null</span> || !ph.isWritable()) &#123;<br><span class="hljs-keyword">if</span> (pv.isOptional()) &#123;<br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br>logger.debug(<span class="hljs-string">&quot;Ignoring optional value for property &#x27;&quot;</span> + tokens.actualName +<br><span class="hljs-string">&quot;&#x27; - property not found on bean class [&quot;</span> + getRootClass().getName() + <span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">throw</span> createNotWritablePropertyException(tokens.canonicalName);<br>&#125;<br>&#125;<br><br>Object oldValue = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">try</span> &#123;<br>Object originalValue = pv.getValue();<span class="hljs-comment">//</span><br>Object valueToApply = originalValue;<span class="hljs-comment">//</span><br><span class="hljs-keyword">if</span> (!Boolean.FALSE.equals(pv.conversionNecessary)) &#123;<br><span class="hljs-keyword">if</span> (pv.isConverted()) &#123;<br>valueToApply = pv.getConvertedValue();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (isExtractOldValueForEditor() &amp;&amp; ph.isReadable()) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>oldValue = ph.getValue();<br>&#125;<br><span class="hljs-keyword">catch</span> (Exception ex) &#123;<br><span class="hljs-keyword">if</span> (ex <span class="hljs-keyword">instanceof</span> PrivilegedActionException) &#123;<br>ex = ((PrivilegedActionException) ex).getException();<br>&#125;<br><span class="hljs-keyword">if</span> (logger.isDebugEnabled()) &#123;<br>logger.debug(<span class="hljs-string">&quot;Could not read previous value of property &#x27;&quot;</span> +<br><span class="hljs-keyword">this</span>.nestedPath + tokens.canonicalName + <span class="hljs-string">&quot;&#x27;&quot;</span>, ex);<br>&#125;<br>&#125;<br>&#125;<br>valueToApply = convertForProperty(<br>tokens.canonicalName, oldValue, originalValue, ph.toTypeDescriptor());<br>&#125;<br>pv.getOriginalPropertyValue().conversionNecessary = (valueToApply != originalValue);<br>&#125;<br>ph.setValue(valueToApply);<span class="hljs-comment">// 具体代码在下方列出</span><br>&#125;<br><span class="hljs-keyword">catch</span> (TypeMismatchException ex) &#123;<br><span class="hljs-keyword">throw</span> ex;<br>&#125;<br><span class="hljs-keyword">catch</span> (InvocationTargetException ex) &#123;<br>PropertyChangeEvent propertyChangeEvent = <span class="hljs-keyword">new</span> PropertyChangeEvent(<br>getRootInstance(), <span class="hljs-keyword">this</span>.nestedPath + tokens.canonicalName, oldValue, pv.getValue());<br><span class="hljs-keyword">if</span> (ex.getTargetException() <span class="hljs-keyword">instanceof</span> ClassCastException) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> TypeMismatchException(propertyChangeEvent, ph.getPropertyType(), ex.getTargetException());<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>Throwable cause = ex.getTargetException();<br><span class="hljs-keyword">if</span> (cause <span class="hljs-keyword">instanceof</span> UndeclaredThrowableException) &#123;<br><span class="hljs-comment">// May happen e.g. with Groovy-generated methods</span><br>cause = cause.getCause();<br>&#125;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> MethodInvocationException(propertyChangeEvent, cause);<br>&#125;<br>&#125;<br><span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>PropertyChangeEvent pce = <span class="hljs-keyword">new</span> PropertyChangeEvent(<br>getRootInstance(), <span class="hljs-keyword">this</span>.nestedPath + tokens.canonicalName, oldValue, pv.getValue());<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> MethodInvocationException(pce, ex);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id=""><a href="#" class="headerlink" title=""></a></h4><ul><li>上述ph.setValue方法在org.springframework.beans.AbstractNestablePropertyAccessor抽象类中定义</li><li>public abstract void setValue(@Nullable Object value) throws Exception; </li><li>一个具体实现在org.springframework.beans.BeanWrapperImp的内部类BeanPropertyHandler中，完整代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> PropertyDescriptor pd;  <span class="hljs-comment">//BeanPropertyHandler中的字段</span><br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setValue</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-meta">@Nullable</span> Object value)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><span class="hljs-keyword">final</span> Method writeMethod = (<span class="hljs-keyword">this</span>.pd <span class="hljs-keyword">instanceof</span> GenericTypeAwarePropertyDescriptor ?<br>((GenericTypeAwarePropertyDescriptor) <span class="hljs-keyword">this</span>.pd).getWriteMethodForActualAccess() :<br><span class="hljs-keyword">this</span>.pd.getWriteMethod());<span class="hljs-comment">// 找到属性的set方法</span><br><span class="hljs-keyword">if</span> (System.getSecurityManager() != <span class="hljs-keyword">null</span>) &#123;<br>AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; &#123;<br>ReflectionUtils.makeAccessible(writeMethod);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;);<br><span class="hljs-keyword">try</span> &#123;<br>AccessController.doPrivileged((PrivilegedExceptionAction&lt;Object&gt;) () -&gt;<br>writeMethod.invoke(getWrappedInstance(), value), acc);<br><span class="hljs-comment">// 调用Method的invoke方法，完成属性注入</span><br>&#125;<br><span class="hljs-keyword">catch</span> (PrivilegedActionException ex) &#123;<br><span class="hljs-keyword">throw</span> ex.getException();<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>ReflectionUtils.makeAccessible(writeMethod);<br>writeMethod.invoke(getWrappedInstance(), value);<span class="hljs-comment">//调用Method的invoke方法，完成属性注入</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>至此Ioc容器的启动过程基本结束</li></ul><h1 id="15-finishRefresh-方法"><a href="#15-finishRefresh-方法" class="headerlink" title="15. finishRefresh();方法"></a>15. finishRefresh();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的finishRefresh()方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">finishRefresh</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// Clear context-level resource caches (such as ASM metadata from scanning).</span><br>clearResourceCaches();<br><br><span class="hljs-comment">// Initialize lifecycle processor for this context.</span><br>initLifecycleProcessor();<br><br><span class="hljs-comment">// Propagate refresh to lifecycle processor first.</span><br>getLifecycleProcessor().onRefresh();<br><br><span class="hljs-comment">// Publish the final event.</span><br>publishEvent(<span class="hljs-keyword">new</span> ContextRefreshedEvent(<span class="hljs-keyword">this</span>));<br><br><span class="hljs-comment">// Participate in LiveBeansView MBean, if active.</span><br>LiveBeansView.registerApplicationContext(<span class="hljs-keyword">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="16refresh-过程抛出异常时"><a href="#16refresh-过程抛出异常时" class="headerlink" title="16refresh()过程抛出异常时"></a>16refresh()过程抛出异常时</h1><ul><li>之中有两个处理方法destroyBeans()和cancelRefresh(ex)</li></ul><h2 id="16-1-destroyBeans-方法"><a href="#16-1-destroyBeans-方法" class="headerlink" title="16.1 destroyBeans();方法"></a>16.1 destroyBeans();方法</h2><ul><li>org.springframework.context.support.AbstractApplicationContext中的destroyBeans()方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroyBeans</span><span class="hljs-params">()</span> </span>&#123;<br>getBeanFactory().destroySingletons();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="16-2-cancelRefresh-ex-方法"><a href="#16-2-cancelRefresh-ex-方法" class="headerlink" title="16.2 cancelRefresh(ex);方法"></a>16.2 cancelRefresh(ex);方法</h2><ul><li>org.springframework.context.support.AbstractApplicationContext中的cancelRefresh(ex)方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">cancelRefresh</span><span class="hljs-params">(BeansException ex)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.active.set(<span class="hljs-keyword">false</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="16-3抛出异常BeansException"><a href="#16-3抛出异常BeansException" class="headerlink" title="16.3抛出异常BeansException"></a>16.3抛出异常BeansException</h2></li></ul><h1 id="17-resetCommonCaches-方法"><a href="#17-resetCommonCaches-方法" class="headerlink" title="17 resetCommonCaches();方法"></a>17 resetCommonCaches();方法</h1><ul><li>org.springframework.context.support.AbstractApplicationContext中的resetCommonCaches()方法</li><li>try-catch-finally代码块中finally包裹的方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">resetCommonCaches</span><span class="hljs-params">()</span> </span>&#123;<br>ReflectionUtils.clearCache();<br>AnnotationUtils.clearCache();<br>ResolvableType.clearCache();<br>CachedIntrospectionResults.clearClassLoader(getClassLoader());<br>&#125;<br></code></pre></td></tr></table></figure></li><li>执行到此Ioc容器启动完成，可以正式投入使用</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>Ioc的底层原理实现：Spring Ioc启动分为两步：<ul><li>1.创建BeanFactory</li><li>2.实例化Bean</li></ul></li><li>Spring的Bean在内存中的状态就是BeanDefination</li><li>在Bean的创建和依赖注入的过程中，需要根据BeanDefination的信息来递归的完成依赖注入，从代码可以看到，这些递归都是以getBean()为入口的，一个递归是在上下文体系中查找需要的bean和bean的依赖关系；另一个递归是在依赖注入时，通过递归调用容器的getBean方法得到当前依赖的Bean，同时也触发对依赖bean的创建和注入。在对bean的属性进行依赖注入时，解析过程也是一个递归过程，这样根据依赖关系，一层一层的完成Bean的创建和注入，直到当前bean相关的整个依赖链的注入完成。由于整个IoC容器启动过程较为复杂，使用下面的一张图来描述让读者更清楚厘清IoC容器的启动过程。</li></ul><p><img src="/Blog/static/image/20191125/BeanFactoryInitFlowChart.png" alt="Ioc容器启动过程"></p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><ul><li><p>代码位置:org.springframework.context.support.AbstractApplicationContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">postProcessBeanFactory</span><span class="hljs-params">(ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>代码位置:org.springframework.context.support.AbstractApplicationContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><br></code></pre></td></tr></table></figure></li><li><p>代码位置:.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><br></code></pre></td></tr></table></figure></li><li><p>代码位置:.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><br></code></pre></td></tr></table></figure></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Spring源码深度解析（第二版） 郝佳</li><li>Spring5企业级开发实战 周冠亚 黄文毅 <a href="https://github.com/online-demo/spring5projectdemo">配套源码</a></li><li>Gitee同步版本：<a href="https://gitee.com/ACANX/spring5projectdemo">https://gitee.com/ACANX/spring5projectdemo</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> IOC </tag>
            
            <tag> BeanFactory </tag>
            
            <tag> ApplicationContext </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文章样式HTML</title>
      <link href="/Blog/2018/09/22/MyBatis%E4%B8%ADJavaBean%20%E4%B8%8EMySQL%E7%9A%84table%E5%AD%97%E6%AE%B5%E8%87%AA%E5%8A%A8%E6%98%A0%E5%B0%84/"/>
      <url>/Blog/2018/09/22/MyBatis%E4%B8%ADJavaBean%20%E4%B8%8EMySQL%E7%9A%84table%E5%AD%97%E6%AE%B5%E8%87%AA%E5%8A%A8%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="MyBatis自动映射"><a href="#MyBatis自动映射" class="headerlink" title="MyBatis自动映射"></a>MyBatis自动映射</h1><p> 在简单的场景下，MyBatis可以替你自动映射查询结果。 如果遇到复杂的场景，你需要构建一个result map。 但是在这里你将看到，你也可以混合使用这两种策略。<br>我们再深入看看自动映射是怎样工作的。当自动映射查询结果时，MyBatis会获取sql返回的列名并在java类中查找相同名字的属性（忽略大小写）。 这意味着如果Mybatis发现了ID列和id属性，Mybatis会将ID的值赋给id。通常数据库列使用大写单词命名，单词间用下划线分隔；而java属性一般遵循驼峰命名法。 为了在这两种命名方式之间启用自动映射，需要将 mapUnderscoreToCamelCase设置为true。自动映射甚至在特定的result map下也能工作。在这种情况下，对于每一个result map,所有的ResultSet提供的列， 如果没有被手工映射，则将被自动映射。自动映射处理完毕后手工映射才会被处理。 在接下来的例子中， id 和 userName列将被自动映射， hashed_password 列将根据配置映射。</p><h3 id="UserMapper-xml中的配置："><a href="#UserMapper-xml中的配置：" class="headerlink" title="UserMapper.xml中的配置："></a>UserMapper.xml中的配置：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;User&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;hash_password&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;gmt_create&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;TIMESTAMP&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;gmtCreate&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;java.util.Date&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;gmt_modified&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;TIMESTAMP&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;gmtModified&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;java.util.Date&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="mybatis-config-xml中的配置："><a href="#mybatis-config-xml中的配置：" class="headerlink" title="mybatis-config.xml中的配置："></a>mybatis-config.xml中的配置：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>     <br> <span class="hljs-tag">&lt;<span class="hljs-name">settings</span>&gt;</span>       <br>  <span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h2 id="英语听力考试试音时间"><a href="#英语听力考试试音时间" class="headerlink" title="英语听力考试试音时间"></a>英语听力考试试音时间</h2><p>小车正穿行在洛基山脉蜿蜒曲折的盘山公路上，克里朵托夫里维静静地看着窗外，发现车子每当行驶到无路的关头，</p><p>路边都会出现一块交通指示牌：“前方转弯”或写着“注意急转弯”。而转过每一道弯道之后前方照例又是一片柳暗花明、豁然开朗。</p><p>山路弯弯、峰回路转，“前方转弯”几个大字一次次冲击着他的眼球，也渐渐敲醒了他的心扉。</p><p>原来不是路已到了尽头，而是该转弯了……路在脚下，更在心中，心随路转，心路常宽。</p><p>学会转弯也是人生的智慧，因为挫折往往是转折，危机同时是转机。</p><h3 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h3><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h1 id="Markdown中实现首行缩进的两种方法"><a href="#Markdown中实现首行缩进的两种方法" class="headerlink" title="Markdown中实现首行缩进的两种方法"></a>Markdown中实现首行缩进的两种方法</h1><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>半方大的空白&ensp;或&#8194;</p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>全方大的空白&emsp;或&#8195;</p><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h3><p>不断行的空白格&nbsp;或&#160;</p><hr><p>&emsp;&emsp;量子霸权的实现，将是量子计算发展的一座重要里程碑，代表「量子计算的超强计算能力」自 37 年前提出以来首次从理论走进实验，标志一个新的计算能力飞跃时代的开始。近年来，随着「实现量子霸权」的日益临近，「称霸标准」成为量子计算领域最重要的科学问题之一。</p><p>我国科学家最早开启了「称霸标准」问题的研究。最近，《国家科学评论》（National Science Review）以「A Benchmark Test of Boson Sampling on Tianhe-2 Supercomputer」为题正式发表了国防科技大学吴俊杰团队与上海交通大学金贤敏教授的合作研究成果，报道了玻色采样案例的「称霸标准」。</p>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> JavaBean </tag>
            
            <tag> MySQL </tag>
            
            <tag> 自动映射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文章样式HTML</title>
      <link href="/Blog/2018/09/16/%E6%96%87%E7%AB%A0%E6%A0%B7%E5%BC%8FHTML/"/>
      <url>/Blog/2018/09/16/%E6%96%87%E7%AB%A0%E6%A0%B7%E5%BC%8FHTML/</url>
      
        <content type="html"><![CDATA[<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><p>小车正穿行在洛基山脉蜿蜒曲折的盘山公路上，克里朵托夫里维静静地看着窗外，发现车子每当行驶到无路的关头，路边都会出现一块交通指示牌：“前方转弯”或写着“注意急转弯”。而转过每一道弯道之后前方照例又是一片柳暗花明、豁然开朗。山路弯弯、峰回路转，“前方转弯”几个大字一次次冲击着他的眼球，也渐渐敲醒了他的心扉。原来不是路已到了尽头，而是该转弯了……路在脚下，更在心中，心随路转，心路常宽。学会转弯也是人生的智慧，因为挫折往往是转折，危机同时是转机。</p><h3 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h3><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><hr><!DOCTYPE html><html lang="zh-cn"><head><!-- Global site tag (gtag.js) - Google Analytics --><script async src="https://www.googletagmanager.com/gtag/js?id=UA-878633-1"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-878633-1');</script><meta charset="gbk" /><meta name="robots" content="all" /><meta name="author" content="w3school.com.cn" /><link rel="stylesheet" type="text/css" href="/c5_20171220.css" /><link rel=icon type="image/png" sizes="16x16" href="/ui2017/logo-16.png"><link rel=icon type="image/png" sizes="32x32" href="/ui2017/logo-32.png"><link rel=icon type="image/png" sizes="48x48" href="/ui2017/logo-48.png"><link rel=icon type="image/png" sizes="96x96" href="/ui2017/logo-96.png"><link rel="apple-touch-icon-precomposed" sizes="96x96" href="/ui2017/logo-96.png"><link rel="apple-touch-icon-precomposed" sizes="144x144" href="/ui2017/logo-144.png"><title>HTML 测验</title></head><body class="html"><div id="wrapper"><div id="header"><a href="/index.html" title="w3school 在线教程" style="float:left;">w3school 在线教程</a><div id="ad_head"><script type="text/javascript"><!--google_ad_client = "pub-3381531532877742";/* 728x90, 创建于 08-12-1 */google_ad_slot = "7423315034";google_ad_width = 728;google_ad_height = 90;//--></script><script type="text/javascript"src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script></div></div><div id="navfirst"><ul id="menu"><li id="h"><a href="/h.asp" title="HTML 系列教程">HTML 系列教程</a></li><li id="b"><a href="/b.asp" title="浏览器脚本教程">浏览器脚本</a></li><li id="s"><a href="/s.asp" title="服务器脚本教程">服务器脚本</a></li><li id="d"><a href="/d.asp" title="ASP.NET 教程">ASP.NET 教程</a></li><li id="x"><a href="/x.asp" title="XML 系列教程">XML 系列教程</a></li><li id="ws"><a href="/ws.asp" title="Web Services 系列教程">Web Services 系列教程</a></li><li id="w"><a href="/w.asp" title="建站手册">建站手册</a></li></ul></div><div id="navsecond"><div id="course"><h2>HTML 基础教程</h2><ul><li><a href="/html/index.asp" title="HTML 教程">HTML 教程</a></li><li><a href="/html/html_jianjie.asp" title="HTML 简介">HTML 简介</a></li><li><a href="/html/html_editors.asp" title="HTML 编辑器">HTML 编辑器</a></li><li><a href="/html/html_basic.asp" title="HTML 基础 - 四个实例">HTML 基础</a></li><li><a href="/html/html_elements.asp" title="HTML 元素">HTML 元素</a></li><li><a href="/html/html_attributes.asp" title="HTML 属性">HTML 属性</a></li><li><a href="/html/html_headings.asp" title="HTML 标题">HTML 标题</a></li><li><a href="/html/html_paragraphs.asp" title="HTML 段落">HTML 段落</a></li><li><a href="/html/html_styles.asp" title="HTML 样式 - CSS">HTML 样式</a></li><li><a href="/html/html_formatting.asp" title="HTML 文本格式化">HTML 格式化</a></li></ul><h2>HTML XHTML</h2><ul><li><a href="/html/html_xhtml.asp" title="XHTML 简介">XHTML 简介</a></li><li><a href="/html/html_xhtml_elements.asp" title="XHTML - 元素">XHTML 元素</a></li><li><a href="/html/html_xhtml_attributes.asp" title="XHTML - 属性">XHTML 属性</a></li></ul><ul><li><a href="/html/html5_canvas.asp" title="HTML5 Canvas">HTML5 画布</a></li><li><a href="/html/html5_svg.asp" title="HTML5 内联 SVG">HTML5 SVG</a></li><li><a href="/html/html5_canvas_vs_svg.asp" title="HTML5 Canvas vs. SVG">HTML5 画布 vs SVG</a></li></ul><h2>HTML 媒体</h2><ul><li><a href="/html/html_media.asp" title="HTML 多媒体">HTML 媒体</a></li><li><a href="/html/html_object.asp" title="HTML Object 元素">HTML 对象</a></li><li><a href="/html/html_audio.asp" title="HTML 音频">HTML 音频</a></li><li><a href="/html/html_video.asp" title="HTML 视频">HTML 视频</a></li></ul><h2>HTML API</h2><ul><li><a href="/html/html5_geolocation.asp" title="HTML5 地理定位">HTML5 地理定位</a></li><li><a href="/html/html5_draganddrop.asp" title="HTML5 拖放">HTML5 拖放</a></li><li><a href="/html/html5_webstorage.asp" title="HTML5 Web 存储">HTML5 Web 存储</a></li><li><a href="/html/html5_app_cache.asp" title="HTML 5 应用程序缓存">HTML5 应用缓存</a></li><li><a href="/html/html5_webworkers.asp" title="HTML5 Web Workers">HTML5 Web Workers</a></li><li><a href="/html/html5_serversentevents.asp" title="HTML5 服务器发送事件">HTML5 SSE</a></li></ul><h2>实例/测验/总结</h2><ul><li><a href="/example/html_examples.asp" title="HTML 实例">HTML 实例</a></li><li class="currentLink"><a href="/html/html_quiz.asp" title="HTML 测验">HTML 测验</a></li><li><a href="/html/html_summary.asp" title="HTML 总结">HTML 总结</a></li></ul><h2>HTML 参考手册</h2><ul><li><a href="/tags/index.asp" title="HTML 4.01 / XHTML 1.0 参考手册">HTML 标签列表</a></li><li><a href="/tags/html_ref_standardattributes.asp" title="HTML 标准属性">HTML 属性</a></li><li><a href="/tags/html_ref_eventattributes.asp" title="HTML 事件属性">HTML 事件</a></li><li><a href="/tags/html_ref_dtd.asp" title="HTML 元素与合法的 Doctype">HTML 合法 DTD</a></li><li><a href="/tags/html_ref_colornames.asp" title="HTML 颜色名">HTML 颜色名</a></li><li><a href="/tags/html_ref_charactersets.asp" title="HTML 字符集">HTML 字符集</a></li><li><a href="/tags/html_ref_ascii.asp" title="HTML ASCII 参考手册">HTML ASCII</a></li><li><a href="/tags/html_ref_entities.html" title="HTML ISO-8859-1 参考手册">HTML ISO-8859-1</a></li><li><a href="/tags/html_ref_symbols.html" title="HTML 4.01 符号实体">HTML 符号</a></li><li><a href="/tags/html_ref_urlencode.html" title="HTML URL 编码">HTML URL 编码</a></li><li><a href="/tags/html_ref_language_codes.asp" title="HTML 语言代码参考手册">HTML 语言代码</a></li><li><a href="/tags/html_ref_httpmessages.asp" title="HTML 状态消息">HTML 消息</a></li></ul><h2>HTML5</h2><ul><li><a href="/html/index.asp" title="HTML5 教程">HTML5 教程</a></li><li><a href="/tags/index.asp" title="HTML5 参考手册">HTML5 参考手册</a></li></ul></div><div id="selected"><h2>建站手册</h2><ul><li><a href="/site/index.asp" title="网站构建">网站构建</a></li><li><a href="/w3c/index.asp" title="万维网联盟 (W3C)">万维网联盟 (W3C)</a></li><li><a href="/browsers/index.asp" title="浏览器信息">浏览器信息</a></li><li><a href="/quality/index.asp" title="网站品质">网站品质</a></li><li><a href="/semweb/index.asp" title="语义网">语义网</a></li><li><a href="/careers/index.asp" title="职业规划">职业规划</a></li><li><a href="/hosting/index.asp" title="网站主机">网站主机</a></li></ul><h2><a href="/about/index.asp" title="关于 W3School" id="link_about">关于 W3School</a></h2><h2><a href="/about/about_helping.asp" title="帮助 W3School" id="link_help">帮助 W3School</a></h2></div></div><div id="maincontent"><div id="intro"><p><strong>您可以通过 W3SCHOOL 的测验程序来测试您的 HTML 技能。</strong></p></div><div><h2>关于本测验</h2><p>本测验包含 20 道题，每道题的最长答题时间是 20 分钟（这是由于每个 session 的默认有效时间是20钟）。</p><p>本测验是非官方的测试，它仅仅提供了一个了解您对 HTML 的掌握程度的工具。</p></div><div><h2>测验会被记分</h2><p>每道题的分值是 1 分。在您完成全部的 20 道题之后，系统会为您的测验打分，并提供您做错的题目的正确答案。其中，绿色为正确答案，而红色为错误答案。</p><p><a href="/quiz/quiz.asp?quiz=html">现在就开始测验</a>！祝您好运。</p></div><div id="bpn"><ul class="prenext"><li class="pre"><a href="/example/html_examples.asp" title="HTML 实例">HTML 实例</a></li><li class="next"><a href="/html/html_summary.asp" title="HTML 总结">HTML 总结</a></li></ul></div><div style="background-color:#fcfdf8; padding:0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- W3School 正文底部广告位 --><ins class="adsbygoogle"     style="display:inline-block;width:800px;height:250px"     data-ad-client="ca-pub-3381531532877742"     data-ad-slot="9384069314"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div><!-- maincontent end --><div id="sidebar"><div id="tools"><h5 id="tools_reference"><a href="/tags/index.asp">HTML 参考手册</a></h5><h5 id="tools_example"><a href="/example/html_examples.asp">HTML 实例</a></h5><h5 id="tools_quiz"><a href="/html/html_quiz.asp">HTML 测验</a></h5></div></div><!-- wrapper end --></body></html><hr><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p><h3 id="打飞机HTML-CSS-JS"><a href="#打飞机HTML-CSS-JS" class="headerlink" title="打飞机HTML+CSS+JS"></a>打飞机HTML+CSS+JS</h3><hr><script id="jquery_172" type="text/javascript" class="library" src="/js/sandbox/jquery/jquery-1.7.2.min.js"></script><style>        body{ margin:0; padding:0; background:#000; font-family:microsoft yahei;  }    #box { width: 300px; height:500px; margin:10px auto; overflow:hidden; position:relative; border:15px solid #f0f0f0; }    #box .title{ width:300px; height:40px; line-height:40px; position:absolute; left:0; top:80px; z-index:1; color:#fff; text-align:center; font-size:24px; }    #box .difficulty{ width:300px; position:absolute; top:180px; z-index:1; font-family:microsoft yahei;}    #box .difficulty a{ width:180px; height:30px; line-height:30px; text-align:center; display:block; margin:20px auto 0 auto; background:#f0f0f0; color:#333; text-decoration:none;}    #box .difficulty a:hover{ background:#900; color:#fff;}    #box .bg img{ display:block;}    #box .warcraft{ width:60px; height:36px; position:absolute; left:120px;  top:500px; background:url('http://sandbox.runjs.cn/uploads/rs/130/es3n7cq9/warcraft.png') center no-repeat; z-index:3;}    #box .bullet{ width:6px; height:22px; background:url('http://sandbox.runjs.cn/uploads/rs/130/es3n7cq9/bullet.png'); position:absolute; z-index:2}    #box .enemy{ width:23px; height:30px; background:url('http://sandbox.runjs.cn/uploads/rs/130/es3n7cq9/enemy.png'); position:absolute; z-index:3}    #box .score { width:220px; height:30px; line-height:30px; position:absolute; color:#fff; font-weight:bold; padding-left:5px; font-size:16px; z-index:5;}    #box .tips{ width:240px; height: 200px; line-height:40px; padding:10px; position:absolute; left:20px; top:130px;  background:#f0f0f0;}    #box .tips .type{ width:160px; padding: 2px 15px; height:30px; line-height:30px; text-align:center; color:red; font-weight:bold;}    #box .tips p{ width:160px; height:40px; font-size:32px; line-height:40px; text-align:center; cursor:pointer;  background:#333; color:#fff; margin:20px auto 0 auto;}    #box .tips .nn,#box .tips .tt{ padding:2px 10px; font-weight:bold;  color:blue;}    #box .tips .tt{ display:block; text-align:center; font-size:24px;}</style><div id="box"></div><script>$(function () {    game.startScreen.draw();})var game = {        stage : $("#box"),        modetxt : "",        timer : {        bg : null,        bullet : null,        enemy : null    },    mode : [        [7,2500,500,1000,4000,200],        [5,2000,300,3000,6000,300],        [3,1500,50,4000,8000,400]    ], //参数配置    num : {        count : 0,        warcraftX : 0,        warcraftY : 0,        score : 0    },    stitle : function ( score ) {        switch ( game.modetxt ) {            case '纯屌丝模式' :                 if( score == 0 ) {                    return '屌丝中的屌丝';                }                else if( score <= 20000 ) {                    return '入门级屌丝'                }                else if( score <= 100000 && score > 20000 ) {                    return '资深屌丝'                }                else if( score <= 500000 && score > 100000 ) {                    return '知名屌丝'                }                else {                    return '全国十佳屌丝';                }            case '高富帅模式' :                 if( score == 0 ) {                    return '药不能停';                }                else if( score <= 20000 ) {                    return '人艰不拆'                }                else if( score <= 100000 && score > 20000 ) {                    return '夜用型高富帅'                }                else if( score <= 500000 && score > 100000 ) {                    return '日夜两用'                }                else {                    return '打飞机战将';                }            case '李少侠模式' :                 if( score == 0 ) {                    return '坑爹坑娘';                }                else if( score <= 20000 ) {                    return '我很无辜'                }                else if( score <= 100000 && score > 20000 ) {                    return '小伙伴惊呆了'                }                else if( score <= 500000 && score > 100000 ) {                    return '我是受害者'                }                else {                    return '嫖客';                }        }    },    startScreen : {        draw : function () {            var title = $("<div>");                title.addClass("title");                title.html("打飞机 1.0 Javascript版");                game.stage.append(title);                        var difficulty = $("<div>");                difficulty.addClass("difficulty");                difficulty.html("<a href='javascript:void(0)'>纯屌丝模式</a><a href='javascript:void(0)'>高富帅模式</a><a href='javascript:void(0)'>李少侠模式</a>");                game.stage.append(difficulty);            game.stage.find($(".difficulty")).delegate("a","click", function ( e ) {                game.stage.start = true ;                game.startScreen.remove();                $(document).mousemove( function ( e ) {                    if( game.num.count % 2 == 0 && game.stage.start)                    {                        var e = e || event;                        var x = e.clientX - game.stage.offset().left - 10;                        var y = e.clientY - game.stage.offset().top - 10;                        game.core.warcraft([x,y]);                    }                    game.num.count++;                })                var set = game.mode[$(this).index()];                game.modetxt = $(this).html();                game.core.draw(set[0]);                game.timer.bullet = setInterval ( function () {                    game.core.bullet(set[1],[game.num.warcraftX,game.num.warcraftY]);                },set[2]);                game.timer.enemy =setInterval ( function () {                    game.core.enemy({                        speed : game.randomNum(set[3],set[4]),                        left : game.randomNum(0,277),                        top : -game.randomNum(30,80)                    });                },set[5])                        });        }, //绘制开始界面        remove : function () {            var removeDiv = game.stage.children($("div"));            removeDiv.stop().animate({opacity:0},100);            setTimeout( function () {                removeDiv.remove();            },300)        }    }, //开始场景    core : {        draw : function ( speed ) {            var warcraft = $("<div>");                warcraft.addClass("warcraft");            game.stage.append(warcraft);            var score = $("<div>");                score.addClass("score");                score.html("0");            game.stage.append(score);        }, //绘制游戏场景        warcraft : function ( pos ) {             var warcraft = game.stage.find($(".warcraft")),                left =  pos[0] -warcraft.width()/2 - 3,                top =  pos[1] - warcraft.height()/2 - 6;                        if( left <= -warcraft.width()/2 ) {                left = -warcraft.width()/2;            }            else if( left >= game.stage.width() - warcraft.width()/2) {                left = game.stage.width() - warcraft.width()/2;            }            if( top <= 0) {                top = 0;            }            else if ( top >= game.stage.height() - warcraft.height()) {                top = game.stage.height() - warcraft.height();            }            warcraft.css({left:left,top:top});            game.num.warcraftX = left + warcraft.width()/2;            game.num.warcraftY = top + warcraft.height()/2;        }, //战斗机位置        bullet : function ( speed ,pos ) {            var bullet = $("<div>");                bullet.addClass("bullet");            game.stage.append(bullet);            bullet.css({                    left : pos[0] - bullet.width()/2,                    top : pos[1] - bullet.height()/2                });            bullet.stop().animate({top:-bullet.height()},speed,function () { bullet.remove();})        }, //子弹开始发射        enemy : function ( argument ) {            var speed = argument.speed;            var left = argument.left;            var top = argument.top;            var oEnemy  = $("<div>");                oEnemy.addClass("enemy");                oEnemy.css({                    left : left,                    top : top                });            oEnemy.appendTo(game.stage);            oEnemy.stop().animate( { top:530 }, speed , function () { oEnemy.remove(); clearInterval(oEnemy.timer)});            oEnemy.timer = setInterval ( function () {                var x = parseInt(oEnemy.css("left")) + 12,                    y = parseInt(oEnemy.css("top")) + 15,                    l = $(".bullet").length;                for( var i = 0 ; i< l; i++ )                {                    var bx = Math.abs( x - parseInt($(".bullet").eq(i).css("left"))),                        by = Math.abs( y - parseInt($(".bullet").eq(i).css("top")));                    if( bx <= 14 &&  by <= 20 )                    {                        oEnemy.css("background","url('http://sandbox.runjs.cn/uploads/rs/130/es3n7cq9/boom.png')");                        $(".bullet").eq(i).remove();                        clearInterval(oEnemy.timer);                        game.num.score++;                        game.stage.find($(".score")).html(game.num.score*1000);                        setTimeout( function () { oEnemy.remove(); },300)                    }                }                var bx2 = Math.abs( x - parseInt($(".warcraft").css("left")) - 30),                    by2 = Math.abs( y - parseInt($(".warcraft").css("top")) - 18);                if( bx2 <= 40 &&  by2 <= 33 )                {                    var tips = $("<div>");                        tips.addClass("tips");                        tips.html("您在<span class='type'>" + game.modetxt.substring(0,3) + "杯</span>全国花式打飞机大赛上，以<span class='nn'>"+$(".score").html() + "</span>分荣获称谓<span class='tt'>"+game.stitle($(".score").html())+"</span><p>再打一次</p>");                        game.stage.delegate(".tips p",'click',function(){                            game.num.score = 0;                            game.startScreen.remove();                            game.startScreen.draw();                        })                    oEnemy.remove();                    $(".score").css("display","none");                    $(".warcraft").css("background","url('http://sandbox.runjs.cn/uploads/rs/130/es3n7cq9/boom2.png')");                    clearInterval(oEnemy.timer);                    setTimeout( function () { $(".warcraft").remove(); },300)                    clearInterval(game.timer.bullet);                    clearInterval(game.timer.enemy);                    clearInterval(game.timer.bg);                    setTimeout( function () {                        game.stage.append(tips);                    },3000)                                    }            },50)        } //敌机    }, //核心代码    randomNum : function (a,b){        var value = Math.abs(a-b) , num ;        num = parseInt(Math.random()*(value)) + Math.min(a,b);        return num;    } //产生指定区域整形随机数。};    </script><hr>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章 </tag>
            
            <tag> 样式 </tag>
            
            <tag> Markdown </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文档渲染出的代码样式</title>
      <link href="/Blog/2018/09/06/MD%E4%BB%A3%E7%A0%81%E6%A0%B7%E5%BC%8F/"/>
      <url>/Blog/2018/09/06/MD%E4%BB%A3%E7%A0%81%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h1><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.acanx.thread;<br><br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> java.util.concurrent.ExecutionException;<br><span class="hljs-keyword">import</span> java.util.concurrent.FutureTask;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by ACANX on 2018/9/3.</span><br><span class="hljs-comment"> * MultiThread :</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * 1.继承Thread类，重写该类的run()方法。</span><br><span class="hljs-comment"> * 2.实现Runnable接口，并重写该接口的run()方法，该run()方法同样是线程执行体，</span><br><span class="hljs-comment"> * 创建Runnable实现类的实例，并以此实例作为Thread类的target来创建Thread对象，</span><br><span class="hljs-comment"> * 该Thread对象才是真正的线程对象。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MultiThread</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Logger logger = LoggerFactory.getLogger(MultiThread.class);<br><br>    <span class="hljs-keyword">private</span> WhutStudent whutStudent;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        Thread.currentThread().setName(<span class="hljs-string">&quot;Main Thread:&quot;</span>);<br>        String str = <span class="hljs-string">&quot; 1234566&quot;</span>;<br>        logger.debug(<span class="hljs-string">&quot;-------程序启动------------------------&quot;</span>);<br><br>        <span class="hljs-comment">//在类中的写法  继承Thread类</span><br>        Thread threadByThreadInMain = <span class="hljs-keyword">new</span> Thread() &#123;<br>            <span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                Thread.currentThread().setName(<span class="hljs-string">&quot;threadByThreadInMain &quot;</span>);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">100</span>; j++) &#123;<br>                    logger.debug(Thread.currentThread().getName() + <span class="hljs-string">&quot; &quot;</span> + j );<br>                    <span class="hljs-keyword">try</span> &#123;<br>                        Thread.sleep(<span class="hljs-number">100</span>);<br>                    &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>                        e.printStackTrace();<br>                    &#125;<br>                    WhutStudent w=WhutStudent.getInstance();<br>                    logger.debug(w.getStudentId()+<span class="hljs-string">&quot; &quot;</span>+Thread.currentThread().getName());<br>                    w.setStudentId(<span class="hljs-string">&quot;StudentID:threadByThreadInMain&quot;</span>+j);<br><br>                &#125;<br>            &#125;<br>        &#125;;<br><br>        <span class="hljs-comment">//在类中的写法 实现Runnable接口</span><br>        Thread threadByRunnableInMain = <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> Runnable() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                Thread.currentThread().setName(<span class="hljs-string">&quot;threadByRunnableInMain &quot;</span>);<br>                logger.debug(<span class="hljs-string">&quot;new Thread 2&quot;</span>);<span class="hljs-comment">//输出:new Thread 2</span><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">100</span>; j++) &#123;<br>                    logger.debug(Thread.currentThread().getName() + <span class="hljs-string">&quot; &quot;</span> + j + <span class="hljs-string">&quot;   &quot;</span> );<br>                    <span class="hljs-keyword">try</span> &#123;<br>                        Thread.sleep(<span class="hljs-number">100</span>);<br>                    &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>                        e.printStackTrace();<br>                    &#125;<br>                    WhutStudent w=WhutStudent.getInstance();<br>                    logger.debug(w.getStudentId()+<span class="hljs-string">&quot; &quot;</span>+Thread.currentThread().getName());<br>                    w.setStudentId(<span class="hljs-string">&quot;StudentID:threadByRunnableInMain&quot;</span>+j);<br><br>                &#125;<br>            &#125;<br>        &#125;);<br><br>        MyThread myThread = <span class="hljs-keyword">new</span> MyThread();<br>        myThread.start();<br><br>        MyRunnable myRunnable = <span class="hljs-keyword">new</span> MyRunnable();<br>        Thread myRunnableThread=<span class="hljs-keyword">new</span> Thread(myRunnable);<br>        myRunnableThread.start();<br><br>        threadByThreadInMain.start();<br><br><br>        threadByRunnableInMain.start();<br><br><br><br>        <span class="hljs-comment">//执行Callable 方式，需要FutureTask 实现实现，用于接收运算结果</span><br>        FutureTask&lt;Integer&gt; futureTask = <span class="hljs-keyword">new</span> FutureTask&lt;Integer&gt;(<span class="hljs-keyword">new</span> MyCallable());<br>        <span class="hljs-keyword">new</span> Thread(futureTask).start();<br>        <span class="hljs-comment">//接收线程运算后的结果</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            Integer sum = futureTask.get();<br>            logger.debug(<span class="hljs-string">&quot;sum=&quot;</span>+sum);<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (ExecutionException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br><br><br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> urllib2<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">StringListSave</span>(<span class="hljs-params">save_path, filename, slist</span>):</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(save_path):<br>        os.makedirs(save_path)<br>    path = save_path+<span class="hljs-string">&quot;/&quot;</span>+filename+<span class="hljs-string">&quot;.txt&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path, <span class="hljs-string">&quot;w+&quot;</span>) <span class="hljs-keyword">as</span> fp:<br>        <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> slist:<br>            fp.write(<span class="hljs-string">&quot;%s\t\t%s\n&quot;</span> % (s[<span class="hljs-number">0</span>].encode(<span class="hljs-string">&quot;utf8&quot;</span>), s[<span class="hljs-number">1</span>].encode(<span class="hljs-string">&quot;utf8&quot;</span>)))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Page_Info</span>(<span class="hljs-params">myPage</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;Regex&#x27;&#x27;&#x27;</span><br>    mypage_Info = re.findall(<span class="hljs-string">r&#x27;&lt;div class=&quot;titleBar&quot; id=&quot;.*?&quot;&gt;&lt;h2&gt;(.*?)&lt;/h2&gt;&lt;div class=&quot;more&quot;&gt;&lt;a href=&quot;(.*?)&quot;&gt;.*?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>, myPage, re.S)<br>    <span class="hljs-keyword">return</span> mypage_Info<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">New_Page_Info</span>(<span class="hljs-params">new_page</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;Regex(slowly) or Xpath(fast)&#x27;&#x27;&#x27;</span><br>    <span class="hljs-comment"># new_page_Info = re.findall(r&#x27;&lt;td class=&quot;.*?&quot;&gt;.*?&lt;a href=&quot;(.*?)\.html&quot;.*?&gt;(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;, new_page, re.S)</span><br>    <span class="hljs-comment"># # new_page_Info = re.findall(r&#x27;&lt;td class=&quot;.*?&quot;&gt;.*?&lt;a href=&quot;(.*?)&quot;&gt;(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;, new_page, re.S) # bugs</span><br>    <span class="hljs-comment"># results = []</span><br>    <span class="hljs-comment"># for url, item in new_page_Info:</span><br>    <span class="hljs-comment">#     results.append((item, url+&quot;.html&quot;))</span><br>    <span class="hljs-comment"># return results</span><br>    dom = etree.HTML(new_page)<br>    new_items = dom.xpath(<span class="hljs-string">&#x27;//tr/td/a/text()&#x27;</span>)<br>    new_urls = dom.xpath(<span class="hljs-string">&#x27;//tr/td/a/@href&#x27;</span>)<br>    <span class="hljs-keyword">assert</span>(<span class="hljs-built_in">len</span>(new_items) == <span class="hljs-built_in">len</span>(new_urls))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">zip</span>(new_items, new_urls)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Spider</span>(<span class="hljs-params">url</span>):</span><br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;downloading &quot;</span>, url<br>    myPage = requests.get(url).content.decode(<span class="hljs-string">&quot;gbk&quot;</span>)<br>    <span class="hljs-comment"># myPage = urllib2.urlopen(url).read().decode(&quot;gbk&quot;)</span><br>    myPageResults = Page_Info(myPage)<br>    save_path = <span class="hljs-string">u&quot;网易新闻抓取&quot;</span><br>    filename = <span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;_&quot;</span>+<span class="hljs-string">u&quot;新闻排行榜&quot;</span><br>    StringListSave(save_path, filename, myPageResults)<br>    i += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> item, url <span class="hljs-keyword">in</span> myPageResults:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;downloading &quot;</span>, url<br>        new_page = requests.get(url).content.decode(<span class="hljs-string">&quot;gbk&quot;</span>)<br>        <span class="hljs-comment"># new_page = urllib2.urlopen(url).read().decode(&quot;gbk&quot;)</span><br>        newPageResults = New_Page_Info(new_page)<br>        filename = <span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;_&quot;</span>+item<br>        StringListSave(save_path, filename, newPageResults)<br>        i += <span class="hljs-number">1</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;start&quot;</span><br>    start_url = <span class="hljs-string">&quot;http://news.163.com/rank/&quot;</span><br>    Spider(start_url)<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;end&quot;</span><br><br></code></pre></td></tr></table></figure><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">PhpOffice</span>\<span class="hljs-title">PhpSpreadsheet</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">PhpOffice</span>\<span class="hljs-title">PhpSpreadsheet</span>\<span class="hljs-title">Shared</span>\<span class="hljs-title">File</span>;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Factory to create readers and writers easily.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * It is not required to use this class, but it should make it easier to read and write files.</span><br><span class="hljs-comment"> * Especially for reading files with an unknown format.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IOFactory</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$readers</span> = [<br>        <span class="hljs-string">&#x27;Xlsx&#x27;</span> =&gt; Reader\Xlsx::class,<br>        <span class="hljs-string">&#x27;Xls&#x27;</span> =&gt; Reader\Xls::class,<br>        <span class="hljs-string">&#x27;Xml&#x27;</span> =&gt; Reader\Xml::class,<br>        <span class="hljs-string">&#x27;Ods&#x27;</span> =&gt; Reader\Ods::class,<br>        <span class="hljs-string">&#x27;Slk&#x27;</span> =&gt; Reader\Slk::class,<br>        <span class="hljs-string">&#x27;Gnumeric&#x27;</span> =&gt; Reader\Gnumeric::class,<br>        <span class="hljs-string">&#x27;Html&#x27;</span> =&gt; Reader\Html::class,<br>        <span class="hljs-string">&#x27;Csv&#x27;</span> =&gt; Reader\Csv::class,<br>    ];<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$writers</span> = [<br>        <span class="hljs-string">&#x27;Xls&#x27;</span> =&gt; Writer\Xls::class,<br>        <span class="hljs-string">&#x27;Xlsx&#x27;</span> =&gt; Writer\Xlsx::class,<br>        <span class="hljs-string">&#x27;Ods&#x27;</span> =&gt; Writer\Ods::class,<br>        <span class="hljs-string">&#x27;Csv&#x27;</span> =&gt; Writer\Csv::class,<br>        <span class="hljs-string">&#x27;Html&#x27;</span> =&gt; Writer\Html::class,<br>        <span class="hljs-string">&#x27;Tcpdf&#x27;</span> =&gt; Writer\Pdf\Tcpdf::class,<br>        <span class="hljs-string">&#x27;Dompdf&#x27;</span> =&gt; Writer\Pdf\Dompdf::class,<br>        <span class="hljs-string">&#x27;Mpdf&#x27;</span> =&gt; Writer\Pdf\Mpdf::class,<br>    ];<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Create Writer\IWriter.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> Spreadsheet $spreadsheet</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $writerType Example: Xlsx</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Writer\Exception</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> Writer\IWriter</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createWriter</span>(<span class="hljs-params">Spreadsheet <span class="hljs-variable">$spreadsheet</span>, <span class="hljs-variable">$writerType</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-built_in">self</span>::<span class="hljs-variable">$writers</span>[<span class="hljs-variable">$writerType</span>])) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Writer\<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;No writer found for type <span class="hljs-subst">$writerType</span>&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">// Instantiate writer</span><br>        <span class="hljs-variable">$className</span> = <span class="hljs-built_in">self</span>::<span class="hljs-variable">$writers</span>[<span class="hljs-variable">$writerType</span>];<br>        <span class="hljs-variable">$writer</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$className</span>(<span class="hljs-variable">$spreadsheet</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$writer</span>;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Create Reader\IReader.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $readerType Example: Xlsx</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Reader\Exception</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> Reader\IReader</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createReader</span>(<span class="hljs-params"><span class="hljs-variable">$readerType</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-built_in">self</span>::<span class="hljs-variable">$readers</span>[<span class="hljs-variable">$readerType</span>])) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Reader\<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;No reader found for type <span class="hljs-subst">$readerType</span>&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">// Instantiate reader</span><br>        <span class="hljs-variable">$className</span> = <span class="hljs-built_in">self</span>::<span class="hljs-variable">$readers</span>[<span class="hljs-variable">$readerType</span>];<br>        <span class="hljs-variable">$reader</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$className</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$reader</span>;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Loads Spreadsheet from file using automatic Reader\IReader resolution.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $pFilename The name of the spreadsheet file</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Reader\Exception</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> Spreadsheet</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">load</span>(<span class="hljs-params"><span class="hljs-variable">$pFilename</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$reader</span> = <span class="hljs-built_in">self</span>::createReaderForFile(<span class="hljs-variable">$pFilename</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$reader</span>-&gt;load(<span class="hljs-variable">$pFilename</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Identify file type using automatic Reader\IReader resolution.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $pFilename The name of the spreadsheet file to identify</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Reader\Exception</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> string</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">identify</span>(<span class="hljs-params"><span class="hljs-variable">$pFilename</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$reader</span> = <span class="hljs-built_in">self</span>::createReaderForFile(<span class="hljs-variable">$pFilename</span>);<br>        <span class="hljs-variable">$className</span> = get_class(<span class="hljs-variable">$reader</span>);<br>        <span class="hljs-variable">$classType</span> = explode(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-variable">$className</span>);<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$reader</span>);<br>        <span class="hljs-keyword">return</span> array_pop(<span class="hljs-variable">$classType</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Create Reader\IReader for file using automatic Reader\IReader resolution.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $filename The name of the spreadsheet file</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Reader\Exception</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> Reader\IReader</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createReaderForFile</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        File::assertFile(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-comment">// First, lucky guess by inspecting file extension</span><br>        <span class="hljs-variable">$guessedReader</span> = <span class="hljs-built_in">self</span>::getReaderTypeFromExtension(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$guessedReader</span> !== <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-variable">$reader</span> = <span class="hljs-built_in">self</span>::createReader(<span class="hljs-variable">$guessedReader</span>);<br>            <span class="hljs-comment">// Let&#x27;s see if we are lucky</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$reader</span>) &amp;&amp; <span class="hljs-variable">$reader</span>-&gt;canRead(<span class="hljs-variable">$filename</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable">$reader</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// If we reach here then &quot;lucky guess&quot; didn&#x27;t give any result</span><br>        <span class="hljs-comment">// Try walking through all the options in self::$autoResolveClasses</span><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">self</span>::<span class="hljs-variable">$readers</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$type</span> =&gt; <span class="hljs-variable">$class</span>) &#123;<br>            <span class="hljs-comment">//    Ignore our original guess, we know that won&#x27;t work</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$type</span> !== <span class="hljs-variable">$guessedReader</span>) &#123;<br>                <span class="hljs-variable">$reader</span> = <span class="hljs-built_in">self</span>::createReader(<span class="hljs-variable">$type</span>);<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable">$reader</span>-&gt;canRead(<span class="hljs-variable">$filename</span>)) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable">$reader</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Reader\<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;Unable to identify a reader for this file&#x27;</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Guess a reader type from the file extension, if any.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $filename</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> null|string</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getReaderTypeFromExtension</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$pathinfo</span> = pathinfo(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$pathinfo</span>[<span class="hljs-string">&#x27;extension&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">switch</span> (strtolower(<span class="hljs-variable">$pathinfo</span>[<span class="hljs-string">&#x27;extension&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xlsx&#x27;</span>: <span class="hljs-comment">// Excel (OfficeOpenXML) Spreadsheet</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xlsm&#x27;</span>: <span class="hljs-comment">// Excel (OfficeOpenXML) Macro Spreadsheet (macros will be discarded)</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xltx&#x27;</span>: <span class="hljs-comment">// Excel (OfficeOpenXML) Template</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xltm&#x27;</span>: <span class="hljs-comment">// Excel (OfficeOpenXML) Macro Template (macros will be discarded)</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Xlsx&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xls&#x27;</span>: <span class="hljs-comment">// Excel (BIFF) Spreadsheet</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xlt&#x27;</span>: <span class="hljs-comment">// Excel (BIFF) Template</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Xls&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ods&#x27;</span>: <span class="hljs-comment">// Open/Libre Offic Calc</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ots&#x27;</span>: <span class="hljs-comment">// Open/Libre Offic Calc Template</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Ods&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;slk&#x27;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Slk&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xml&#x27;</span>: <span class="hljs-comment">// Excel 2003 SpreadSheetML</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Xml&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;gnumeric&#x27;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Gnumeric&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;htm&#x27;</span>:<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;html&#x27;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Html&#x27;</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;csv&#x27;</span>:<br>                <span class="hljs-comment">// Do nothing</span><br>                <span class="hljs-comment">// We must not try to use CSV reader since it loads</span><br>                <span class="hljs-comment">// all files including Excel files etc.</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Register a writer with its type and class name.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $writerType</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $writerClass</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">registerWriter</span>(<span class="hljs-params"><span class="hljs-variable">$writerType</span>, <span class="hljs-variable">$writerClass</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!is_a(<span class="hljs-variable">$writerClass</span>, Writer\IWriter::class, <span class="hljs-literal">true</span>)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Writer\<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;Registered writers must implement &#x27;</span> . Writer\IWriter::class);<br>        &#125;<br>        <span class="hljs-built_in">self</span>::<span class="hljs-variable">$writers</span>[<span class="hljs-variable">$writerType</span>] = <span class="hljs-variable">$writerClass</span>;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Register a reader with its type and class name.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $readerType</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $readerClass</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">registerReader</span>(<span class="hljs-params"><span class="hljs-variable">$readerType</span>, <span class="hljs-variable">$readerClass</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!is_a(<span class="hljs-variable">$readerClass</span>, Reader\IReader::class, <span class="hljs-literal">true</span>)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Reader\<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;Registered readers must implement &#x27;</span> . Reader\IReader::class);<br>        &#125;<br>        <span class="hljs-built_in">self</span>::<span class="hljs-variable">$readers</span>[<span class="hljs-variable">$readerType</span>] = <span class="hljs-variable">$readerClass</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> list<br><br><span class="hljs-comment">// Element is an element of a linked list.</span><br><span class="hljs-keyword">type</span> Element <span class="hljs-keyword">struct</span> &#123;<br><span class="hljs-comment">// Next and previous pointers in the doubly-linked list of elements.</span><br><span class="hljs-comment">// To simplify the implementation, internally a list l is implemented</span><br><span class="hljs-comment">// as a ring, such that &amp;l.root is both the next element of the last</span><br><span class="hljs-comment">// list element (l.Back()) and the previous element of the first list</span><br><span class="hljs-comment">// element (l.Front()).</span><br>next, prev *Element<br><br><span class="hljs-comment">// The list to which this element belongs.</span><br>list *List<br><br><span class="hljs-comment">// The value stored with this element.</span><br>Value <span class="hljs-keyword">interface</span>&#123;&#125;<br>&#125;<br><br><span class="hljs-comment">// Next returns the next list element or nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(e *Element)</span> <span class="hljs-title">Next</span><span class="hljs-params">()</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> p := e.next; e.list != <span class="hljs-literal">nil</span> &amp;&amp; p != &amp;e.list.root &#123;<br><span class="hljs-keyword">return</span> p<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-comment">// Prev returns the previous list element or nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(e *Element)</span> <span class="hljs-title">Prev</span><span class="hljs-params">()</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> p := e.prev; e.list != <span class="hljs-literal">nil</span> &amp;&amp; p != &amp;e.list.root &#123;<br><span class="hljs-keyword">return</span> p<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-comment">// List represents a doubly linked list.</span><br><span class="hljs-comment">// The zero value for List is an empty list ready to use.</span><br><span class="hljs-keyword">type</span> List <span class="hljs-keyword">struct</span> &#123;<br>root Element <span class="hljs-comment">// sentinel list element, only &amp;root, root.prev, and root.next are used</span><br><span class="hljs-built_in">len</span>  <span class="hljs-keyword">int</span>     <span class="hljs-comment">// current list length excluding (this) sentinel element</span><br>&#125;<br><br><span class="hljs-comment">// Init initializes or clears list l.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">Init</span><span class="hljs-params">()</span> *<span class="hljs-title">List</span></span> &#123;<br>l.root.next = &amp;l.root<br>l.root.prev = &amp;l.root<br>l.<span class="hljs-built_in">len</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">return</span> l<br>&#125;<br><br><span class="hljs-comment">// New returns an initialized list.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">New</span><span class="hljs-params">()</span> *<span class="hljs-title">List</span></span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">new</span>(List).Init() &#125;<br><br><span class="hljs-comment">// Len returns the number of elements of list l.</span><br><span class="hljs-comment">// The complexity is O(1).</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">Len</span><span class="hljs-params">()</span> <span class="hljs-title">int</span></span> &#123; <span class="hljs-keyword">return</span> l.<span class="hljs-built_in">len</span> &#125;<br><br><span class="hljs-comment">// Front returns the first element of list l or nil if the list is empty.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">Front</span><span class="hljs-params">()</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> l.<span class="hljs-built_in">len</span> == <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-keyword">return</span> l.root.next<br>&#125;<br><br><span class="hljs-comment">// Back returns the last element of list l or nil if the list is empty.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">Back</span><span class="hljs-params">()</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> l.<span class="hljs-built_in">len</span> == <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-keyword">return</span> l.root.prev<br>&#125;<br><br><span class="hljs-comment">// lazyInit lazily initializes a zero List value.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">lazyInit</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">if</span> l.root.next == <span class="hljs-literal">nil</span> &#123;<br>l.Init()<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// insert inserts e after at, increments l.len, and returns e.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">insert</span><span class="hljs-params">(e, at *Element)</span> *<span class="hljs-title">Element</span></span> &#123;<br>n := at.next<br>at.next = e<br>e.prev = at<br>e.next = n<br>n.prev = e<br>e.list = l<br>l.<span class="hljs-built_in">len</span>++<br><span class="hljs-keyword">return</span> e<br>&#125;<br><br><span class="hljs-comment">// insertValue is a convenience wrapper for insert(&amp;Element&#123;Value: v&#125;, at).</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">insertValue</span><span class="hljs-params">(v <span class="hljs-keyword">interface</span>&#123;&#125;, at *Element)</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">return</span> l.insert(&amp;Element&#123;Value: v&#125;, at)<br>&#125;<br><br><span class="hljs-comment">// remove removes e from its list, decrements l.len, and returns e.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">remove</span><span class="hljs-params">(e *Element)</span> *<span class="hljs-title">Element</span></span> &#123;<br>e.prev.next = e.next<br>e.next.prev = e.prev<br>e.next = <span class="hljs-literal">nil</span> <span class="hljs-comment">// avoid memory leaks</span><br>e.prev = <span class="hljs-literal">nil</span> <span class="hljs-comment">// avoid memory leaks</span><br>e.list = <span class="hljs-literal">nil</span><br>l.<span class="hljs-built_in">len</span>--<br><span class="hljs-keyword">return</span> e<br>&#125;<br><br><span class="hljs-comment">// Remove removes e from l if e is an element of list l.</span><br><span class="hljs-comment">// It returns the element value e.Value.</span><br><span class="hljs-comment">// The element must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">Remove</span><span class="hljs-params">(e *Element)</span> <span class="hljs-title">interface</span></span>&#123;&#125; &#123;<br><span class="hljs-keyword">if</span> e.list == l &#123;<br><span class="hljs-comment">// if e.list == l, l must have been initialized when e was inserted</span><br><span class="hljs-comment">// in l or l == nil (e is a zero Element) and l.remove will crash</span><br>l.remove(e)<br>&#125;<br><span class="hljs-keyword">return</span> e.Value<br>&#125;<br><br><span class="hljs-comment">// PushFront inserts a new element e with value v at the front of list l and returns e.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">PushFront</span><span class="hljs-params">(v <span class="hljs-keyword">interface</span>&#123;&#125;)</span> *<span class="hljs-title">Element</span></span> &#123;<br>l.lazyInit()<br><span class="hljs-keyword">return</span> l.insertValue(v, &amp;l.root)<br>&#125;<br><br><span class="hljs-comment">// PushBack inserts a new element e with value v at the back of list l and returns e.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">PushBack</span><span class="hljs-params">(v <span class="hljs-keyword">interface</span>&#123;&#125;)</span> *<span class="hljs-title">Element</span></span> &#123;<br>l.lazyInit()<br><span class="hljs-keyword">return</span> l.insertValue(v, l.root.prev)<br>&#125;<br><br><span class="hljs-comment">// InsertBefore inserts a new element e with value v immediately before mark and returns e.</span><br><span class="hljs-comment">// If mark is not an element of l, the list is not modified.</span><br><span class="hljs-comment">// The mark must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">InsertBefore</span><span class="hljs-params">(v <span class="hljs-keyword">interface</span>&#123;&#125;, mark *Element)</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> mark.list != l &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-comment">// see comment in List.Remove about initialization of l</span><br><span class="hljs-keyword">return</span> l.insertValue(v, mark.prev)<br>&#125;<br><br><span class="hljs-comment">// InsertAfter inserts a new element e with value v immediately after mark and returns e.</span><br><span class="hljs-comment">// If mark is not an element of l, the list is not modified.</span><br><span class="hljs-comment">// The mark must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">InsertAfter</span><span class="hljs-params">(v <span class="hljs-keyword">interface</span>&#123;&#125;, mark *Element)</span> *<span class="hljs-title">Element</span></span> &#123;<br><span class="hljs-keyword">if</span> mark.list != l &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-comment">// see comment in List.Remove about initialization of l</span><br><span class="hljs-keyword">return</span> l.insertValue(v, mark)<br>&#125;<br><br><span class="hljs-comment">// MoveToFront moves element e to the front of list l.</span><br><span class="hljs-comment">// If e is not an element of l, the list is not modified.</span><br><span class="hljs-comment">// The element must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">MoveToFront</span><span class="hljs-params">(e *Element)</span></span> &#123;<br><span class="hljs-keyword">if</span> e.list != l || l.root.next == e &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-comment">// see comment in List.Remove about initialization of l</span><br>l.insert(l.remove(e), &amp;l.root)<br>&#125;<br><br><span class="hljs-comment">// MoveToBack moves element e to the back of list l.</span><br><span class="hljs-comment">// If e is not an element of l, the list is not modified.</span><br><span class="hljs-comment">// The element must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">MoveToBack</span><span class="hljs-params">(e *Element)</span></span> &#123;<br><span class="hljs-keyword">if</span> e.list != l || l.root.prev == e &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-comment">// see comment in List.Remove about initialization of l</span><br>l.insert(l.remove(e), l.root.prev)<br>&#125;<br><br><span class="hljs-comment">// MoveBefore moves element e to its new position before mark.</span><br><span class="hljs-comment">// If e or mark is not an element of l, or e == mark, the list is not modified.</span><br><span class="hljs-comment">// The element and mark must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">MoveBefore</span><span class="hljs-params">(e, mark *Element)</span></span> &#123;<br><span class="hljs-keyword">if</span> e.list != l || e == mark || mark.list != l &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br>l.insert(l.remove(e), mark.prev)<br>&#125;<br><br><span class="hljs-comment">// MoveAfter moves element e to its new position after mark.</span><br><span class="hljs-comment">// If e or mark is not an element of l, or e == mark, the list is not modified.</span><br><span class="hljs-comment">// The element and mark must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">MoveAfter</span><span class="hljs-params">(e, mark *Element)</span></span> &#123;<br><span class="hljs-keyword">if</span> e.list != l || e == mark || mark.list != l &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br>l.insert(l.remove(e), mark)<br>&#125;<br><br><span class="hljs-comment">// PushBackList inserts a copy of an other list at the back of list l.</span><br><span class="hljs-comment">// The lists l and other may be the same. They must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">PushBackList</span><span class="hljs-params">(other *List)</span></span> &#123;<br>l.lazyInit()<br><span class="hljs-keyword">for</span> i, e := other.Len(), other.Front(); i &gt; <span class="hljs-number">0</span>; i, e = i<span class="hljs-number">-1</span>, e.Next() &#123;<br>l.insertValue(e.Value, l.root.prev)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// PushFrontList inserts a copy of an other list at the front of list l.</span><br><span class="hljs-comment">// The lists l and other may be the same. They must not be nil.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(l *List)</span> <span class="hljs-title">PushFrontList</span><span class="hljs-params">(other *List)</span></span> &#123;<br>l.lazyInit()<br><span class="hljs-keyword">for</span> i, e := other.Len(), other.Back(); i &gt; <span class="hljs-number">0</span>; i, e = i<span class="hljs-number">-1</span>, e.Prev() &#123;<br>l.insertValue(e.Value, &amp;l.root)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;grpc/support/time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;grpcpp/support/config.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;grpcpp/support/time.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::chrono::duration_cast;<br><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::chrono::high_resolution_clock;<br><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::chrono::nanoseconds;<br><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::chrono::seconds;<br><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::chrono::system_clock;<br><br><span class="hljs-keyword">namespace</span> grpc &#123;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Timepoint2Timespec</span><span class="hljs-params">(<span class="hljs-keyword">const</span> system_clock::time_point&amp; from,</span></span><br><span class="hljs-function"><span class="hljs-params">                        gpr_timespec* to)</span> </span>&#123;<br>  system_clock::duration deadline = from.time_since_epoch();<br>  seconds secs = duration_cast&lt;seconds&gt;(deadline);<br>  <span class="hljs-keyword">if</span> (from == system_clock::time_point::max() ||<br>      secs.count() &gt;= gpr_inf_future(GPR_CLOCK_REALTIME).tv_sec ||<br>      secs.count() &lt; <span class="hljs-number">0</span>) &#123;<br>    *to = gpr_inf_future(GPR_CLOCK_REALTIME);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  nanoseconds nsecs = duration_cast&lt;nanoseconds&gt;(deadline - secs);<br>  to-&gt;tv_sec = <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">int64_t</span>&gt;(secs.count());<br>  to-&gt;tv_nsec = <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">int32_t</span>&gt;(nsecs.count());<br>  to-&gt;clock_type = GPR_CLOCK_REALTIME;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">TimepointHR2Timespec</span><span class="hljs-params">(<span class="hljs-keyword">const</span> high_resolution_clock::time_point&amp; from,</span></span><br><span class="hljs-function"><span class="hljs-params">                          gpr_timespec* to)</span> </span>&#123;<br>  high_resolution_clock::duration deadline = from.time_since_epoch();<br>  seconds secs = duration_cast&lt;seconds&gt;(deadline);<br>  <span class="hljs-keyword">if</span> (from == high_resolution_clock::time_point::max() ||<br>      secs.count() &gt;= gpr_inf_future(GPR_CLOCK_REALTIME).tv_sec ||<br>      secs.count() &lt; <span class="hljs-number">0</span>) &#123;<br>    *to = gpr_inf_future(GPR_CLOCK_REALTIME);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  nanoseconds nsecs = duration_cast&lt;nanoseconds&gt;(deadline - secs);<br>  to-&gt;tv_sec = <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">int64_t</span>&gt;(secs.count());<br>  to-&gt;tv_nsec = <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">int32_t</span>&gt;(nsecs.count());<br>  to-&gt;clock_type = GPR_CLOCK_REALTIME;<br>&#125;<br><br><span class="hljs-function">system_clock::time_point <span class="hljs-title">Timespec2Timepoint</span><span class="hljs-params">(gpr_timespec t)</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> (gpr_time_cmp(t, gpr_inf_future(t.clock_type)) == <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span> system_clock::time_point::max();<br>  &#125;<br>  t = gpr_convert_clock_type(t, GPR_CLOCK_REALTIME);<br>  system_clock::time_point tp;<br>  tp += duration_cast&lt;system_clock::time_point::duration&gt;(seconds(t.tv_sec));<br>  tp +=<br>      duration_cast&lt;system_clock::time_point::duration&gt;(nanoseconds(t.tv_nsec));<br>  <span class="hljs-keyword">return</span> tp;<br>&#125;<br><br>&#125;  <span class="hljs-comment">// namespace grpc</span><br></code></pre></td></tr></table></figure><h1 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">shellSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[], <span class="hljs-keyword">int</span> value)</span></span>&#123;<br>  <span class="hljs-keyword">int</span> i = value;<br>  <span class="hljs-keyword">int</span> j, k, tmp;<br>  <span class="hljs-keyword">for</span> (i = value / <span class="hljs-number">2</span>; i &gt; <span class="hljs-number">0</span>; i = i / <span class="hljs-number">2</span>)&#123;<br>    <span class="hljs-keyword">for</span> (j = i; j &lt; value; j++)&#123;<br>      <span class="hljs-keyword">for</span>(k = j - i; k &gt;= <span class="hljs-number">0</span>; k = k - i)&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">array</span>[k+i] &gt;= <span class="hljs-built_in">array</span>[k])&#123;<br>          <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>          tmp = <span class="hljs-built_in">array</span>[k];<br>          <span class="hljs-built_in">array</span>[k] = <span class="hljs-built_in">array</span>[k+i];<br>          <span class="hljs-built_in">array</span>[k+i] = tmp;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">20</span>];<br>    <span class="hljs-keyword">int</span> range = <span class="hljs-number">500</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; i++)&#123;<br>     <span class="hljs-built_in">array</span>[i] = rand() % range + <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> size = <span class="hljs-keyword">sizeof</span> <span class="hljs-built_in">array</span> / <span class="hljs-keyword">sizeof</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>];<br><br><br><br>    <span class="hljs-keyword">clock_t</span> start = clock();<br>    shellSort(<span class="hljs-built_in">array</span>,size);<br>    <span class="hljs-keyword">clock_t</span> end = clock();<br>    <span class="hljs-keyword">double</span> time_spent = (<span class="hljs-keyword">double</span>)(end - start) / CLOCKS_PER_SEC;<br><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Data Sorted\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, <span class="hljs-string">&quot;Shell Sort Big O Notation:\n--&gt; Best Case: O(n log(n))\n--&gt; Average Case: depends on gap sequence\n--&gt; Worst Case: O(n)\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Time spent sorting: %f\n&quot;</span>, time_spent);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="C-C"><a href="#C-C" class="headerlink" title="C#    #  C#"></a>C#    #  C#</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> <span class="hljs-meta-keyword">warning</span> disable 1591, 0612, 3021</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">region</span> Designer generated code</span><br><br>using pb = global::Google.Protobuf;<br>using pbc = global::Google.Protobuf.Collections;<br>using pbr = global::Google.Protobuf.Reflection;<br>using scg = global::System.Collections.Generic;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Math</span> &#123;<br><br>  <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Holder for reflection information generated from math/math.proto<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MathReflection</span> &#123;<br><br>    <span class="hljs-meta">#<span class="hljs-meta-keyword">region</span> Descriptor</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>File descriptor for math/math.proto<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    public static pbr::FileDescriptor Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> descriptor; &#125;<br>    &#125;<br>    private static pbr::FileDescriptor descriptor;<br><br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">MathReflection</span>(<span class="hljs-params"></span>)</span> &#123;<br>      byte[] descriptorData = global::System.Convert.FromBase64String(<br>          <span class="hljs-built_in">string</span>.Concat(<br>            <span class="hljs-string">&quot;Cg9tYXRoL21hdGgucHJvdG8SBG1hdGgiLAoHRGl2QXJncxIQCghkaXZpZGVu&quot;</span>,<br>            <span class="hljs-string">&quot;ZBgBIAEoAxIPCgdkaXZpc29yGAIgASgDIi8KCERpdlJlcGx5EhAKCHF1b3Rp&quot;</span>,<br>            <span class="hljs-string">&quot;ZW50GAEgASgDEhEKCXJlbWFpbmRlchgCIAEoAyIYCgdGaWJBcmdzEg0KBWxp&quot;</span>,<br>            <span class="hljs-string">&quot;bWl0GAEgASgDIhIKA051bRILCgNudW0YASABKAMiGQoIRmliUmVwbHkSDQoF&quot;</span>,<br>            <span class="hljs-string">&quot;Y291bnQYASABKAMypAEKBE1hdGgSJgoDRGl2Eg0ubWF0aC5EaXZBcmdzGg4u&quot;</span>,<br>            <span class="hljs-string">&quot;bWF0aC5EaXZSZXBseSIAEi4KB0Rpdk1hbnkSDS5tYXRoLkRpdkFyZ3MaDi5t&quot;</span>,<br>            <span class="hljs-string">&quot;YXRoLkRpdlJlcGx5IgAoATABEiMKA0ZpYhINLm1hdGguRmliQXJncxoJLm1h&quot;</span>,<br>            <span class="hljs-string">&quot;dGguTnVtIgAwARIfCgNTdW0SCS5tYXRoLk51bRoJLm1hdGguTnVtIgAoAWIG&quot;</span>,<br>            <span class="hljs-string">&quot;cHJvdG8z&quot;</span>));<br>      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,<br>          new pbr::FileDescriptor[] &#123; &#125;,<br>          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] &#123;<br>            new pbr::GeneratedClrTypeInfo(typeof(global::Math.DivArgs), global::Math.DivArgs.Parser, new[]&#123; &quot;Dividend&quot;, &quot;Divisor&quot; &#125;, null, null, null),<br>            new pbr::GeneratedClrTypeInfo(typeof(global::Math.DivReply), global::Math.DivReply.Parser, new[]&#123; &quot;Quotient&quot;, &quot;Remainder&quot; &#125;, null, null, null),<br>            new pbr::GeneratedClrTypeInfo(typeof(global::Math.FibArgs), global::Math.FibArgs.Parser, new[]&#123; &quot;Limit&quot; &#125;, null, null, null),<br>            new pbr::GeneratedClrTypeInfo(typeof(global::Math.Num), global::Math.Num.Parser, new[]&#123; &quot;Num_&quot; &#125;, null, null, null),<br>            new pbr::GeneratedClrTypeInfo(typeof(global::Math.FibReply), global::Math.FibReply.Parser, new[]&#123; &quot;Count&quot; &#125;, null, null, null)<br>          &#125;));<br>    &#125;<br>    <span class="hljs-meta">#<span class="hljs-meta-keyword">endregion</span></span><br><br>  &#125;<br>  <span class="hljs-meta">#<span class="hljs-meta-keyword">region</span> Messages</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DivArgs</span> : <span class="hljs-title">pb</span>::<span class="hljs-title">IMessage</span>&lt;<span class="hljs-title">DivArgs</span>&gt; &#123;<br>    private static readonly pb::MessageParser&lt;DivArgs&gt; _parser = new pb::MessageParser&lt;DivArgs&gt;(() =&gt; new DivArgs());<br>    private pb::UnknownFieldSet _unknownFields;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pb::MessageParser&lt;DivArgs&gt; Parser &#123; get &#123; return _parser; &#125; &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pbr::MessageDescriptor Descriptor &#123;<br>      get &#123; return global::Math.MathReflection.Descriptor.MessageTypes[0]; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    pbr::MessageDescriptor pb::IMessage.Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> Descriptor; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DivArgs</span>(<span class="hljs-params"></span>)</span> &#123;<br>      OnConstruction();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConstruction</span>(<span class="hljs-params"></span>)</span>;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DivArgs</span>(<span class="hljs-params">DivArgs other</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"></span>)</span> &#123;<br>      dividend_ = other.dividend_;<br>      divisor_ = other.divisor_;<br>      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> DivArgs <span class="hljs-title">Clone</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> DivArgs(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;dividend&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> DividendFieldNumber = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> dividend_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Dividend &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> dividend_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        dividend_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;divisor&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> DivisorFieldNumber = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> divisor_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Divisor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> divisor_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        divisor_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> other</span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> Equals(other <span class="hljs-keyword">as</span> DivArgs);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">DivArgs other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-literal">null</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-keyword">this</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Dividend != other.Dividend) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">if</span> (Divisor != other.Divisor) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">return</span> Equals(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> hash = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> (Dividend != <span class="hljs-number">0L</span>) hash ^= Dividend.GetHashCode();<br>      <span class="hljs-keyword">if</span> (Divisor != <span class="hljs-number">0L</span>) hash ^= Divisor.GetHashCode();<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        hash ^= _unknownFields.GetHashCode();<br>      &#125;<br>      <span class="hljs-keyword">return</span> hash;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span> &#123;<br>      return pb::JsonFormatter.ToDiagnosticString(this);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteTo</span>(<span class="hljs-params">pb::CodedOutputStream output</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (Dividend != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">8</span>);<br>        output.WriteInt64(Dividend);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Divisor != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">16</span>);<br>        output.WriteInt64(Divisor);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        _unknownFields.WriteTo(output);<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalculateSize</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> size = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (Dividend != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Dividend);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Divisor != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Divisor);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        size += _unknownFields.CalculateSize();<br>      &#125;<br>      <span class="hljs-keyword">return</span> size;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">DivArgs other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (other == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Dividend != <span class="hljs-number">0L</span>) &#123;<br>        Dividend = other.Dividend;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Divisor != <span class="hljs-number">0L</span>) &#123;<br>        Divisor = other.Divisor;<br>      &#125;<br>      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">pb::CodedInputStream input</span>)</span> &#123;<br>      uint tag;<br>      <span class="hljs-keyword">while</span> ((tag = input.ReadTag()) != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">switch</span>(tag) &#123;<br>          <span class="hljs-literal">default</span>:<br>            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>: &#123;<br>            Dividend = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">16</span>: &#123;<br>            Divisor = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DivReply</span> : <span class="hljs-title">pb</span>::<span class="hljs-title">IMessage</span>&lt;<span class="hljs-title">DivReply</span>&gt; &#123;<br>    private static readonly pb::MessageParser&lt;DivReply&gt; _parser = new pb::MessageParser&lt;DivReply&gt;(() =&gt; new DivReply());<br>    private pb::UnknownFieldSet _unknownFields;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pb::MessageParser&lt;DivReply&gt; Parser &#123; get &#123; return _parser; &#125; &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pbr::MessageDescriptor Descriptor &#123;<br>      get &#123; return global::Math.MathReflection.Descriptor.MessageTypes[1]; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    pbr::MessageDescriptor pb::IMessage.Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> Descriptor; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DivReply</span>(<span class="hljs-params"></span>)</span> &#123;<br>      OnConstruction();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConstruction</span>(<span class="hljs-params"></span>)</span>;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DivReply</span>(<span class="hljs-params">DivReply other</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"></span>)</span> &#123;<br>      quotient_ = other.quotient_;<br>      remainder_ = other.remainder_;<br>      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> DivReply <span class="hljs-title">Clone</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> DivReply(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;quotient&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> QuotientFieldNumber = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> quotient_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Quotient &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> quotient_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        quotient_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;remainder&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> RemainderFieldNumber = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> remainder_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Remainder &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> remainder_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        remainder_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> other</span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> Equals(other <span class="hljs-keyword">as</span> DivReply);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">DivReply other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-literal">null</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-keyword">this</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Quotient != other.Quotient) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">if</span> (Remainder != other.Remainder) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">return</span> Equals(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> hash = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> (Quotient != <span class="hljs-number">0L</span>) hash ^= Quotient.GetHashCode();<br>      <span class="hljs-keyword">if</span> (Remainder != <span class="hljs-number">0L</span>) hash ^= Remainder.GetHashCode();<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        hash ^= _unknownFields.GetHashCode();<br>      &#125;<br>      <span class="hljs-keyword">return</span> hash;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span> &#123;<br>      return pb::JsonFormatter.ToDiagnosticString(this);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteTo</span>(<span class="hljs-params">pb::CodedOutputStream output</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (Quotient != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">8</span>);<br>        output.WriteInt64(Quotient);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Remainder != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">16</span>);<br>        output.WriteInt64(Remainder);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        _unknownFields.WriteTo(output);<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalculateSize</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> size = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (Quotient != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quotient);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Remainder != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Remainder);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        size += _unknownFields.CalculateSize();<br>      &#125;<br>      <span class="hljs-keyword">return</span> size;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">DivReply other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (other == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Quotient != <span class="hljs-number">0L</span>) &#123;<br>        Quotient = other.Quotient;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Remainder != <span class="hljs-number">0L</span>) &#123;<br>        Remainder = other.Remainder;<br>      &#125;<br>      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">pb::CodedInputStream input</span>)</span> &#123;<br>      uint tag;<br>      <span class="hljs-keyword">while</span> ((tag = input.ReadTag()) != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">switch</span>(tag) &#123;<br>          <span class="hljs-literal">default</span>:<br>            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>: &#123;<br>            Quotient = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">16</span>: &#123;<br>            Remainder = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FibArgs</span> : <span class="hljs-title">pb</span>::<span class="hljs-title">IMessage</span>&lt;<span class="hljs-title">FibArgs</span>&gt; &#123;<br>    private static readonly pb::MessageParser&lt;FibArgs&gt; _parser = new pb::MessageParser&lt;FibArgs&gt;(() =&gt; new FibArgs());<br>    private pb::UnknownFieldSet _unknownFields;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pb::MessageParser&lt;FibArgs&gt; Parser &#123; get &#123; return _parser; &#125; &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pbr::MessageDescriptor Descriptor &#123;<br>      get &#123; return global::Math.MathReflection.Descriptor.MessageTypes[2]; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    pbr::MessageDescriptor pb::IMessage.Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> Descriptor; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FibArgs</span>(<span class="hljs-params"></span>)</span> &#123;<br>      OnConstruction();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConstruction</span>(<span class="hljs-params"></span>)</span>;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FibArgs</span>(<span class="hljs-params">FibArgs other</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"></span>)</span> &#123;<br>      limit_ = other.limit_;<br>      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> FibArgs <span class="hljs-title">Clone</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> FibArgs(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;limit&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> LimitFieldNumber = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> limit_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Limit &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> limit_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        limit_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> other</span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> Equals(other <span class="hljs-keyword">as</span> FibArgs);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">FibArgs other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-literal">null</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-keyword">this</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Limit != other.Limit) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">return</span> Equals(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> hash = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> (Limit != <span class="hljs-number">0L</span>) hash ^= Limit.GetHashCode();<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        hash ^= _unknownFields.GetHashCode();<br>      &#125;<br>      <span class="hljs-keyword">return</span> hash;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span> &#123;<br>      return pb::JsonFormatter.ToDiagnosticString(this);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteTo</span>(<span class="hljs-params">pb::CodedOutputStream output</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (Limit != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">8</span>);<br>        output.WriteInt64(Limit);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        _unknownFields.WriteTo(output);<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalculateSize</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> size = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (Limit != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        size += _unknownFields.CalculateSize();<br>      &#125;<br>      <span class="hljs-keyword">return</span> size;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">FibArgs other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (other == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Limit != <span class="hljs-number">0L</span>) &#123;<br>        Limit = other.Limit;<br>      &#125;<br>      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">pb::CodedInputStream input</span>)</span> &#123;<br>      uint tag;<br>      <span class="hljs-keyword">while</span> ((tag = input.ReadTag()) != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">switch</span>(tag) &#123;<br>          <span class="hljs-literal">default</span>:<br>            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>: &#123;<br>            Limit = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Num</span> : <span class="hljs-title">pb</span>::<span class="hljs-title">IMessage</span>&lt;<span class="hljs-title">Num</span>&gt; &#123;<br>    private static readonly pb::MessageParser&lt;Num&gt; _parser = new pb::MessageParser&lt;Num&gt;(() =&gt; new Num());<br>    private pb::UnknownFieldSet _unknownFields;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pb::MessageParser&lt;Num&gt; Parser &#123; get &#123; return _parser; &#125; &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pbr::MessageDescriptor Descriptor &#123;<br>      get &#123; return global::Math.MathReflection.Descriptor.MessageTypes[3]; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    pbr::MessageDescriptor pb::IMessage.Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> Descriptor; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Num</span>(<span class="hljs-params"></span>)</span> &#123;<br>      OnConstruction();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConstruction</span>(<span class="hljs-params"></span>)</span>;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Num</span>(<span class="hljs-params">Num other</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"></span>)</span> &#123;<br>      num_ = other.num_;<br>      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Num <span class="hljs-title">Clone</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Num(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;num&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> Num_FieldNumber = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> num_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Num_ &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> num_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        num_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> other</span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> Equals(other <span class="hljs-keyword">as</span> Num);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">Num other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-literal">null</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-keyword">this</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Num_ != other.Num_) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">return</span> Equals(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> hash = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> (Num_ != <span class="hljs-number">0L</span>) hash ^= Num_.GetHashCode();<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        hash ^= _unknownFields.GetHashCode();<br>      &#125;<br>      <span class="hljs-keyword">return</span> hash;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span> &#123;<br>      return pb::JsonFormatter.ToDiagnosticString(this);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteTo</span>(<span class="hljs-params">pb::CodedOutputStream output</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (Num_ != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">8</span>);<br>        output.WriteInt64(Num_);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        _unknownFields.WriteTo(output);<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalculateSize</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> size = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (Num_ != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num_);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        size += _unknownFields.CalculateSize();<br>      &#125;<br>      <span class="hljs-keyword">return</span> size;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">Num other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (other == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Num_ != <span class="hljs-number">0L</span>) &#123;<br>        Num_ = other.Num_;<br>      &#125;<br>      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">pb::CodedInputStream input</span>)</span> &#123;<br>      uint tag;<br>      <span class="hljs-keyword">while</span> ((tag = input.ReadTag()) != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">switch</span>(tag) &#123;<br>          <span class="hljs-literal">default</span>:<br>            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>: &#123;<br>            Num_ = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FibReply</span> : <span class="hljs-title">pb</span>::<span class="hljs-title">IMessage</span>&lt;<span class="hljs-title">FibReply</span>&gt; &#123;<br>    private static readonly pb::MessageParser&lt;FibReply&gt; _parser = new pb::MessageParser&lt;FibReply&gt;(() =&gt; new FibReply());<br>    private pb::UnknownFieldSet _unknownFields;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pb::MessageParser&lt;FibReply&gt; Parser &#123; get &#123; return _parser; &#125; &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    public static pbr::MessageDescriptor Descriptor &#123;<br>      get &#123; return global::Math.MathReflection.Descriptor.MessageTypes[4]; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    pbr::MessageDescriptor pb::IMessage.Descriptor &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> Descriptor; &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FibReply</span>(<span class="hljs-params"></span>)</span> &#123;<br>      OnConstruction();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConstruction</span>(<span class="hljs-params"></span>)</span>;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FibReply</span>(<span class="hljs-params">FibReply other</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"></span>)</span> &#123;<br>      count_ = other.count_;<br>      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> FibReply <span class="hljs-title">Clone</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> FibReply(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span>Field number for the &quot;count&quot; field.<span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> CountFieldNumber = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">long</span> count_;<br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Count &#123;<br>      <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> count_; &#125;<br>      <span class="hljs-keyword">set</span> &#123;<br>        count_ = <span class="hljs-keyword">value</span>;<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> other</span>)</span> &#123;<br>      <span class="hljs-keyword">return</span> Equals(other <span class="hljs-keyword">as</span> FibReply);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">FibReply other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-literal">null</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (ReferenceEquals(other, <span class="hljs-keyword">this</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (Count != other.Count) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">return</span> Equals(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> hash = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> (Count != <span class="hljs-number">0L</span>) hash ^= Count.GetHashCode();<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        hash ^= _unknownFields.GetHashCode();<br>      &#125;<br>      <span class="hljs-keyword">return</span> hash;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span> &#123;<br>      return pb::JsonFormatter.ToDiagnosticString(this);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteTo</span>(<span class="hljs-params">pb::CodedOutputStream output</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (Count != <span class="hljs-number">0L</span>) &#123;<br>        output.WriteRawTag(<span class="hljs-number">8</span>);<br>        output.WriteInt64(Count);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        _unknownFields.WriteTo(output);<br>      &#125;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalculateSize</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">int</span> size = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (Count != <span class="hljs-number">0L</span>) &#123;<br>        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (_unknownFields != <span class="hljs-literal">null</span>) &#123;<br>        size += _unknownFields.CalculateSize();<br>      &#125;<br>      <span class="hljs-keyword">return</span> size;<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">FibReply other</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (other == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (other.Count != <span class="hljs-number">0L</span>) &#123;<br>        Count = other.Count;<br>      &#125;<br>      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);<br>    &#125;<br><br>    [<span class="hljs-meta">global::System.Diagnostics.DebuggerNonUserCodeAttribute</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MergeFrom</span>(<span class="hljs-params">pb::CodedInputStream input</span>)</span> &#123;<br>      uint tag;<br>      <span class="hljs-keyword">while</span> ((tag = input.ReadTag()) != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">switch</span>(tag) &#123;<br>          <span class="hljs-literal">default</span>:<br>            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>: &#123;<br>            Count = input.ReadInt64();<br>            <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-meta">#<span class="hljs-meta-keyword">endregion</span></span><br>&#125;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endregion</span> Designer generated code</span><br></code></pre></td></tr></table></figure><h1 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">package</span> liang.cxx.rommel.evaluationbar<br><br><span class="hljs-keyword">import</span> android.content.Context<br><span class="hljs-keyword">import</span> android.graphics.*<br><span class="hljs-keyword">import</span> android.util.AttributeSet<br><span class="hljs-keyword">import</span> android.view.MotionEvent<br><span class="hljs-keyword">import</span> android.view.View<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by Rommel on 2017/12/1.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EvaluationProgressBar</span> : <span class="hljs-type">View &#123;</span></span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_density: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><span class="hljs-comment">//dp</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> img_height: <span class="hljs-built_in">Int</span> = <span class="hljs-number">30</span><span class="hljs-comment">//滑块和进度条高度(默认三十)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_content: Context? = <span class="hljs-literal">null</span><br>    <span class="hljs-comment">//滑块样式</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> slider: Bitmap? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_laughing: Bitmap? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_satisfactiong: Bitmap? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_sad: Bitmap? = <span class="hljs-literal">null</span><br>    <span class="hljs-comment">//滑块位置</span><br>    <span class="hljs-keyword">var</span> image_postion: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-comment">//滑块宽度</span><br>    <span class="hljs-keyword">var</span> image_weight: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-comment">//控件的宽和高</span><br>    <span class="hljs-keyword">var</span> m_weight: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_height: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-comment">//每段的长度</span><br>    <span class="hljs-keyword">var</span> m_cell: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0.0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-comment">//是否为第一次加载</span><br>    <span class="hljs-keyword">var</span> is_first = <span class="hljs-literal">true</span><br>    <span class="hljs-comment">//画笔</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_color_back: Paint? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_color_back_line: Paint? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_color_back_diver_one: Paint? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_color_back_diver_two: Paint? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> m_color_back_wall: Paint? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_line = <span class="hljs-string">&quot;#C7C7C7&quot;</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_sad = <span class="hljs-string">&quot;#CECECE&quot;</span><span class="hljs-comment">//差评背景</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_satisfactiong = <span class="hljs-string">&quot;#FFEAB0&quot;</span><span class="hljs-comment">//中评背景</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_satisfactiong_line = <span class="hljs-string">&quot;#FFD68C&quot;</span><span class="hljs-comment">//中评线框</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_laughing = <span class="hljs-string">&quot;#FFBBBB&quot;</span><span class="hljs-comment">//好评背景</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_laughing_line = <span class="hljs-string">&quot;#FF9F9F&quot;</span><span class="hljs-comment">//好评背景</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_baseground = <span class="hljs-string">&quot;#F8F8F8&quot;</span><span class="hljs-comment">//好评背景</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_satisfactiong_diver = <span class="hljs-string">&quot;#FFD68C&quot;</span><span class="hljs-comment">//中评分割线</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> back_laughing_diver = <span class="hljs-string">&quot;#FF9F9F&quot;</span><span class="hljs-comment">//好评分割线</span><br>    <span class="hljs-comment">//触摸和滑动是否在滑块上</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> is_touch_scope = <span class="hljs-literal">false</span><br><br>    <span class="hljs-comment">//滑动监听事件</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> volChangeListener: VolChangeListener? = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> vol = <span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">constructor</span>(context: Context) : <span class="hljs-keyword">super</span>(context) &#123;<br>        <span class="hljs-keyword">init</span>(context)<br>    &#125;<br><br>    <span class="hljs-keyword">constructor</span>(context: Context, attrs: AttributeSet?) : <span class="hljs-keyword">super</span>(context, attrs) &#123;<br>        <span class="hljs-keyword">init</span>(context)<br>    &#125;<br><br>    <span class="hljs-keyword">constructor</span>(context: Context, attrs: AttributeSet?, defStyleAttr: <span class="hljs-built_in">Int</span>) : <span class="hljs-keyword">super</span>(context, attrs, defStyleAttr) &#123;<br>        <span class="hljs-keyword">init</span>(context)<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">init</span><span class="hljs-params">(context: <span class="hljs-type">Context</span>)</span></span> &#123;<br>        m_density = context.resources.displayMetrics.density<br>        m_laughing = zoomImg(BitmapFactory.decodeResource(resources, R.mipmap.icon_laughing))<br>        m_satisfactiong = zoomImg(BitmapFactory.decodeResource(resources, R.mipmap.icon_satisfaction))<br>        m_sad = zoomImg(BitmapFactory.decodeResource(resources, R.mipmap.icon_sad))<br>        image_weight = m_laughing!!.width.toFloat()<br>        m_content = context<br>        m_height = (m_laughing!!.height + <span class="hljs-number">1</span>).toFloat()<br>        <span class="hljs-comment">//画笔初始化</span><br>        m_color_back = Paint()<br>        m_color_back_line = Paint()<br>        m_color_back_line!!.style = Paint.Style.STROKE<br>        m_color_back_line!!.isAntiAlias = <span class="hljs-literal">true</span><br>        m_color_back_line!!.strokeMiter = <span class="hljs-number">1.0f</span><br>        m_color_back_diver_one = Paint()<br>        m_color_back_diver_two = Paint()<br>        m_color_back_diver_one!!.strokeMiter = <span class="hljs-number">1.0F</span><br>        m_color_back_diver_two!!.strokeMiter = <span class="hljs-number">1.0F</span><br>        m_color_back_wall = Paint()<br>        m_color_back_wall!!.color = Color.parseColor(back_line)<br>        m_color_back_wall!!.style = Paint.Style.STROKE<br>        m_color_back_wall!!.isAntiAlias = <span class="hljs-literal">true</span><br>        m_color_back_wall!!.strokeWidth = <span class="hljs-number">1.0f</span><br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onDraw</span><span class="hljs-params">(canvas: <span class="hljs-type">Canvas</span>)</span></span> &#123;<br>        <span class="hljs-keyword">super</span>.onDraw(canvas)<br>        canvas.drawFilter = PaintFlagsDrawFilter(<span class="hljs-number">0</span>, Paint.ANTI_ALIAS_FLAG or Paint.FILTER_BITMAP_FLAG)<br>        image_postion = <span class="hljs-keyword">if</span> (image_postion &lt; image_weight / <span class="hljs-number">2</span>) image_weight / <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> image_postion<br>        image_postion = <span class="hljs-keyword">if</span> (image_postion &gt; m_weight - image_weight / <span class="hljs-number">2</span>) m_weight - image_weight / <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> image_postion<br>        <span class="hljs-keyword">if</span> (image_postion &lt;= m_cell) &#123;<br>            <span class="hljs-comment">//差评</span><br>            slider = m_sad<br>            m_color_back!!.color = Color.parseColor(back_sad)<br>            m_color_back_line!!.color = Color.parseColor(back_line)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell &amp;&amp; image_postion &lt;= m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//中评</span><br>            slider = m_satisfactiong<br>            m_color_back!!.color = Color.parseColor(back_satisfactiong)<br>            m_color_back_line!!.color = Color.parseColor(back_satisfactiong_line)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//好评</span><br>            slider = m_laughing<br>            m_color_back!!.color = Color.parseColor(back_laughing)<br>            m_color_back_line!!.color = Color.parseColor(back_laughing_line)<br>        &#125;<br>        drawWall(canvas)<br>        drawBckground(canvas)<br>        drawDiverLine(canvas)<br>        drawImage(canvas)<br>    &#125;<br><br>    <span class="hljs-comment">//绘制最外层线和整体背景</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">drawWall</span><span class="hljs-params">(canvas: <span class="hljs-type">Canvas</span>)</span></span> &#123;<br>        <span class="hljs-comment">//外边框</span><br>        <span class="hljs-keyword">var</span> rectf = RectF(<span class="hljs-number">2f</span>, <span class="hljs-number">0f</span>, m_weight, m_height)<br>        canvas.drawRoundRect(rectf, m_height / <span class="hljs-number">2</span>, m_height / <span class="hljs-number">2</span>, m_color_back_wall)<br>        <span class="hljs-comment">//基础背景</span><br>        <span class="hljs-keyword">var</span> back_base = RectF(<span class="hljs-number">3f</span>, <span class="hljs-number">1f</span>, m_weight - <span class="hljs-number">1</span>, m_height - <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">var</span> back_base_color = Paint()<br>        back_base_color.color = Color.parseColor(back_baseground)<br>        canvas.drawRoundRect(back_base, m_height / <span class="hljs-number">2</span>, m_height / <span class="hljs-number">2</span>, back_base_color)<br>    &#125;<br><br>    <span class="hljs-comment">//绘制进度颜色</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">drawBckground</span><span class="hljs-params">(canvas: <span class="hljs-type">Canvas</span>)</span></span> &#123;<br>        <span class="hljs-keyword">var</span> rectf = RectF(<span class="hljs-number">2f</span>, <span class="hljs-number">1f</span>, image_postion + image_weight / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, m_height - <span class="hljs-number">1</span>)<br>        canvas.drawRoundRect(rectf, m_height / <span class="hljs-number">2</span>, m_height / <span class="hljs-number">2</span>, m_color_back)<br>    &#125;<br><br>    <span class="hljs-comment">//根据滑块位置改变边框和分割线颜色</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">drawDiverLine</span><span class="hljs-params">(canvas: <span class="hljs-type">Canvas</span>)</span></span> &#123;<br>        <span class="hljs-comment">//根据滑块位置改变外层边框颜色</span><br>        <span class="hljs-keyword">var</span> rectF = RectF(<span class="hljs-number">2f</span>, <span class="hljs-number">0f</span>, image_postion + image_weight / <span class="hljs-number">2</span>, m_height)<br>        canvas.drawRoundRect(rectF, m_height / <span class="hljs-number">2</span>, m_height / <span class="hljs-number">2</span>, m_color_back_line)<br>        <span class="hljs-keyword">if</span> (image_postion &lt;= m_cell) &#123;<br>            <span class="hljs-comment">//差评</span><br>            m_color_back_diver_one!!.color = Color.parseColor(back_line)<br>            canvas.drawLine(m_weight / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight / <span class="hljs-number">3</span>, m_height, m_color_back_diver_one)<br>            m_color_back_diver_two!!.color = Color.parseColor(back_line)<br>            canvas.drawLine(m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, m_height, m_color_back_diver_two)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell &amp;&amp; image_postion &lt;= m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//中评</span><br>            m_color_back_diver_one!!.color = Color.parseColor(back_satisfactiong_diver)<br>            canvas.drawLine(m_weight / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight / <span class="hljs-number">3</span>, m_height, m_color_back_diver_one)<br>            m_color_back_diver_two!!.color = Color.parseColor(back_line)<br>            canvas.drawLine(m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, m_height, m_color_back_diver_two)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//好评</span><br>            m_color_back_diver_one!!.color = Color.parseColor(back_laughing_diver)<br>            canvas.drawLine(m_weight / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight / <span class="hljs-number">3</span>, m_height, m_color_back_diver_one)<br>            m_color_back_diver_two!!.color = Color.parseColor(back_laughing_diver)<br>            canvas.drawLine(m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, <span class="hljs-number">0f</span>, m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span>, m_height, m_color_back_diver_two)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//绘制滑块</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">drawImage</span><span class="hljs-params">(canvas: <span class="hljs-type">Canvas</span>)</span></span> &#123;<br>        canvas.drawBitmap(slider, image_postion - image_weight / <span class="hljs-number">2</span> - <span class="hljs-number">2</span>, <span class="hljs-number">1f</span>, Paint())<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onLayout</span><span class="hljs-params">(changed: <span class="hljs-type">Boolean</span>, left: <span class="hljs-type">Int</span>, top: <span class="hljs-type">Int</span>, right: <span class="hljs-type">Int</span>, bottom: <span class="hljs-type">Int</span>)</span></span> &#123;<br>        <span class="hljs-keyword">super</span>.onLayout(changed, left, top, right, bottom)<br>        m_weight = (width - <span class="hljs-number">2</span>).toFloat()<br>        m_cell = m_weight / <span class="hljs-number">3</span><br>        <span class="hljs-keyword">if</span> (is_first) &#123;<br>            <span class="hljs-comment">//首次加载默认值</span><br>            image_postion = m_weight * <span class="hljs-number">2</span> / <span class="hljs-number">3</span><br>            is_first = <span class="hljs-literal">false</span><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onMeasure</span><span class="hljs-params">(widthMeasureSpec: <span class="hljs-type">Int</span>, heightMeasureSpec: <span class="hljs-type">Int</span>)</span></span> &#123;<br>        <span class="hljs-keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec)<br>        <span class="hljs-keyword">var</span> width = getSize((<span class="hljs-number">200</span> * m_density).toInt(), widthMeasureSpec)<br>        <span class="hljs-keyword">var</span> height = getSize(m_laughing!!.width + <span class="hljs-number">1</span>, heightMeasureSpec)<br>        setMeasuredDimension(width, height)<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">getSize</span><span class="hljs-params">(defaultSize: <span class="hljs-type">Int</span>, measureSpec: <span class="hljs-type">Int</span>)</span></span>: <span class="hljs-built_in">Int</span> &#123;<br>        <span class="hljs-keyword">var</span> m_size = defaultSize<br>        <span class="hljs-keyword">var</span> mode = View.MeasureSpec.getMode(measureSpec)<br>        <span class="hljs-keyword">var</span> size = MeasureSpec.getSize(measureSpec)<br>        <span class="hljs-keyword">when</span> (mode) &#123;<br>            MeasureSpec.AT_MOST -&gt; &#123;<br>                <span class="hljs-comment">//当前尺寸是当前View能取的最大尺寸-wrap_content</span><br>                m_size = defaultSize<br>            &#125;<br>            MeasureSpec.EXACTLY -&gt; &#123;<br>                <span class="hljs-comment">//当前的尺寸就是当前View应该取的尺寸-match_parent</span><br>                m_size = size<br>            &#125;<br>            MeasureSpec.UNSPECIFIED -&gt; &#123;<br>                <span class="hljs-comment">//父容器没有对当前View有任何限制，当前View可以任意取尺寸-固定尺寸（如100dp</span><br>                m_size = size<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> m_size<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onTouchEvent</span><span class="hljs-params">(event: <span class="hljs-type">MotionEvent</span>)</span></span>: <span class="hljs-built_in">Boolean</span> &#123;<br>        <span class="hljs-keyword">var</span> x_postion = event.x<br>        <span class="hljs-keyword">when</span> (event.action) &#123;<br>            MotionEvent.ACTION_DOWN -&gt; &#123;<br>                <span class="hljs-keyword">if</span> (x_postion &gt; image_postion - image_weight / <span class="hljs-number">2</span><br>                        &amp;&amp; x &lt; image_postion + image_weight / <span class="hljs-number">2</span>) &#123;<br>                    <span class="hljs-comment">//触摸事件在滑块上</span><br>                    image_postion = x_postion<br>                    is_touch_scope = <span class="hljs-literal">true</span><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//触摸事件不在滑块上</span><br>                    image_postion = x_postion<br>                    setImgPostion()<br>                    invalidate()<br>                    onChange()<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>                &#125;<br>            &#125;<br>            MotionEvent.ACTION_MOVE -&gt; &#123;<br>                <span class="hljs-keyword">if</span> (is_touch_scope) &#123;<br>                    image_postion = x_postion<br>                    invalidate()<br>                    onChange()<br>                &#125;<br>            &#125;<br>            MotionEvent.ACTION_UP -&gt; &#123;<br>                <span class="hljs-keyword">if</span> (is_touch_scope) &#123;<br>                    is_touch_scope = <span class="hljs-literal">false</span><br>                    setImgPostion()<br>                &#125;<br>            &#125;<br>            MotionEvent.ACTION_CANCEL -&gt; &#123;<br>                <span class="hljs-keyword">if</span> (is_touch_scope) &#123;<br>                    is_touch_scope = <span class="hljs-literal">false</span><br>                    setImgPostion()<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">setImgPostion</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-comment">//松手后滑块走到指定的位置</span><br>        <span class="hljs-keyword">if</span> (image_postion &lt;= m_cell) &#123;<br>            <span class="hljs-comment">//差评</span><br>            image_postion = m_cell<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell &amp;&amp; image_postion &lt;= m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//中评</span><br>            image_postion = m_cell * <span class="hljs-number">2</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell * <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//好评</span><br>            image_postion = m_cell * <span class="hljs-number">3</span><br>        &#125;<br>        invalidate()<br>        onChange()<br>    &#125;<br><br>    <span class="hljs-comment">//滑块位置变化监听</span><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onChange</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-keyword">if</span> (volChangeListener != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (image_postion &lt;= m_cell) &#123;<br>                vol = <span class="hljs-number">1</span><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; m_cell &amp;&amp; image_postion &lt;= <span class="hljs-number">2</span> * m_cell) &#123;<br>                vol = <span class="hljs-number">2</span><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (image_postion &gt; <span class="hljs-number">2</span> * m_cell) &#123;<br>                vol = <span class="hljs-number">3</span><br>            &#125;<br>            volChangeListener!!.onVolChange(vol)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">zoomImg</span><span class="hljs-params">(btm: <span class="hljs-type">Bitmap</span>)</span></span>: Bitmap &#123;<br>        <span class="hljs-comment">//获取图片宽高</span><br>        <span class="hljs-keyword">var</span> width = btm.width<br>        <span class="hljs-keyword">var</span> height = btm.height<br>        <span class="hljs-comment">//计算缩放比例</span><br>        <span class="hljs-keyword">var</span> scaleWidth = (img_height * m_density) / width<br>        <span class="hljs-keyword">var</span> scaleHeight = (img_height * m_density) / height<br>        <span class="hljs-comment">//获取Matrix参数</span><br>        <span class="hljs-keyword">var</span> matrix = Matrix()<br>        matrix.postScale(scaleWidth, scaleHeight)<br>        <span class="hljs-comment">//返回新的图片</span><br>        <span class="hljs-keyword">return</span> Bitmap.createBitmap(btm, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height, matrix, <span class="hljs-literal">true</span>)<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">VolChangeListener</span> </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onVolChange</span><span class="hljs-params">(vol: <span class="hljs-type">Int</span>)</span></span><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">volVhangeListener</span><span class="hljs-params">(volChangeListener :<span class="hljs-type">VolChangeListener</span>)</span></span> &#123;<br>        <span class="hljs-keyword">this</span>.volChangeListener = volChangeListener<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">xmp</span>&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, </span></span><br><span class="hljs-tag"><span class="hljs-string">                                 initial-scale=1.0, </span></span><br><span class="hljs-tag"><span class="hljs-string">                                 maximum-scale=1.0, </span></span><br><span class="hljs-tag"><span class="hljs-string">                                 user-scalable=no&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://cdn.staticfile.org/twitter-bootstrap/3.3.6/css/bootstrap.min.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://cdn.staticfile.org/twitter-bootstrap/3.3.6/css/bootstrap-theme.min.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://cdn.staticfile.org/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://cdn.staticfile.org/twitter-bootstrap/3.3.6/js/bootstrap.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>测试一下bootstrap<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;breadcrumb&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>新闻资讯<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>新闻正文<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是新闻的标题<br>  <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sstarter-template&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lead&quot;</span>&gt;</span>Use this dow project.<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span> All yoy barebones HTML document.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Google（中文名：谷歌），是一家美国的跨国科技企业，致力于互联网搜索、云计算、广告技术等领域，开发并提供大量基于互联网的产品与服务，其主要利润来自于AdWords等广告服务。Google由当时在斯坦福大学攻读理工博士的拉里·佩奇和谢尔盖·布卢姆共同创建，因此两人也被称为“Google Guys”。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lead&quot;</span>&gt;</span>这一段的内容<span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>突出<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>显示看看效果<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">address</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Twitter, Inc.<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  795 Folsom Ave, Suite 600<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  San Francisco, CA 94107<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">abbr</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Phone&quot;</span>&gt;</span>P:<span class="hljs-tag">&lt;/<span class="hljs-name">abbr</span>&gt;</span> (123) 456-7890<br><span class="hljs-tag">&lt;/<span class="hljs-name">address</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-striped&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>#<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>First Name<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Last Name<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Username<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Mark<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Otto<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@mdo<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Jacob<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Thornton<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@fat<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Larry<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>the Bird<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@twitter<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress-bar progress-bar-danger progress-bar-striped active&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;progressbar&quot;</span> <span class="hljs-attr">aria-valuenow</span>=<span class="hljs-string">&quot;45&quot;</span> <span class="hljs-attr">aria-valuemin</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">aria-valuemax</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 80%&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>45% Complete<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pager&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>前一篇新闻<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>后一篇新闻<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger btn-block btn-lg btn-primary&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>&gt;</span>退出登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xmp</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.top</span>&#123;<span class="hljs-attribute">background-color</span>: gray;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>; <br>      <br>&#125;<br><span class="hljs-selector-class">.top</span> <span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">display</span>: inline-block;<br> <span class="hljs-attribute">line-height</span>: <span class="hljs-number">20px</span>;<br> <span class="hljs-attribute">color</span>:white;<br> <span class="hljs-attribute">margin</span>: auto;<br> <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><span class="hljs-selector-class">.top</span> <span class="hljs-selector-tag">P</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">10%</span>;<br>&#125;<br><span class="hljs-selector-class">.top</span> <span class="hljs-selector-tag">P</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>)&#123;<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><span class="hljs-selector-class">.top</span> <span class="hljs-selector-tag">P</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>)&#123;<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">5%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.header</span> <span class="hljs-selector-tag">img</span>&#123;<br>  <span class="hljs-attribute">float</span>: left;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">8%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.nav-tabs</span> &#123;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0px</span> solid <span class="hljs-number">#ddd</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">82px</span>;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;<br>  <br> <br>&#125;<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">float</span>: left;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20px</span>;<br>  <br>  <br>  <br>&#125;<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">30px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.42857143</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0px</span> solid transparent;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#eee</span> <span class="hljs-number">#eee</span> <span class="hljs-number">#ddd</span>;<br>&#125;<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.active</span> &gt; <span class="hljs-selector-tag">a</span>,<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.active</span> &gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-class">.nav-tabs</span> &gt; <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.active</span> &gt; <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;<br>  <span class="hljs-attribute">cursor</span>: default;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;<br>  <span class="hljs-attribute">border-bottom-color</span>: transparent;<br>&#125;<br><br><br><span class="hljs-selector-class">.banner</span> <span class="hljs-selector-tag">img</span>&#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.xiaotu</span>&#123;<span class="hljs-attribute">text-align</span>: center;<br>        <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">50px</span>; <br>        <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.survey</span>&#123;<span class="hljs-attribute">background-color</span>: gray;<br>       <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>       <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br>       <span class="hljs-attribute">position</span>: relative;<br>      <br>      <br>&#125;<br><span class="hljs-selector-class">.survey</span> <span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">display</span>:inline-block;<br> <span class="hljs-attribute">color</span>: white;<br> <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto;<br> <span class="hljs-attribute">overflow</span>: hidden;<br><br>&#125;<br><span class="hljs-selector-class">.survey</span> <span class="hljs-selector-tag">P</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">10%</span>;<br>&#125;<br><span class="hljs-selector-class">.survey</span> <span class="hljs-selector-tag">P</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>)&#123;<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">1%</span>;<br>&#125;<br><br><br><span class="hljs-selector-id">#nav</span>&#123;<span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">40%</span>;<br>    <span class="hljs-attribute">position</span>:absolute;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>&#125;<br><span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">ul</span>&#123;<span class="hljs-attribute">list-style-type</span>: none; &#125;<br><span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;<span class="hljs-attribute">float</span>: left;&#125;<br><span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span>&#123;<span class="hljs-attribute">text-align</span>: center; <br><span class="hljs-attribute">padding</span>:<span class="hljs-number">20px</span>; <br><span class="hljs-attribute">display</span>:block; <br><span class="hljs-attribute">text-decoration</span>:none; <br><span class="hljs-attribute">color</span>:white;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">20px</span>; <br>&#125;<br><span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br><span class="hljs-attribute">background-color</span>:white;<br>    <span class="hljs-attribute">color</span>:<span class="hljs-number">#31B0D5</span>;<br>&#125;<br><span class="hljs-selector-class">.Introduced</span>&#123;<span class="hljs-attribute">text-align</span>: center;<br>           <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">50px</span>;&#125;<br><br><span class="hljs-selector-class">.Introduced</span> <span class="hljs-selector-tag">p</span>&#123;<br>   <span class="hljs-attribute">max-width</span>: <span class="hljs-number">900px</span>;<br>   <span class="hljs-attribute">margin</span>: <span class="hljs-number">30px</span> auto;<br>   <span class="hljs-attribute">text-align</span>: left;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h1 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><br><span class="hljs-keyword">var</span> defaults = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../core/core.defaults&#x27;</span>);<br><span class="hljs-keyword">var</span> Element = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../core/core.element&#x27;</span>);<br><span class="hljs-keyword">var</span> helpers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../helpers/index&#x27;</span>);<br><span class="hljs-keyword">var</span> layouts = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../core/core.layouts&#x27;</span>);<br><br><span class="hljs-keyword">var</span> noop = helpers.noop;<br><br>defaults._set(<span class="hljs-string">&#x27;global&#x27;</span>, &#123;<br>title: &#123;<br>display: <span class="hljs-literal">false</span>,<br>fontStyle: <span class="hljs-string">&#x27;bold&#x27;</span>,<br>fullWidth: <span class="hljs-literal">true</span>,<br>lineHeight: <span class="hljs-number">1.2</span>,<br>padding: <span class="hljs-number">10</span>,<br>position: <span class="hljs-string">&#x27;top&#x27;</span>,<br>text: <span class="hljs-string">&#x27;&#x27;</span>,<br>weight: <span class="hljs-number">2000</span>         <span class="hljs-comment">// by default greater than legend (1000) to be above</span><br>&#125;<br>&#125;);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> Title = Element.extend(&#123;<br>initialize: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">config</span>) </span>&#123;<br><span class="hljs-keyword">var</span> me = <span class="hljs-built_in">this</span>;<br>helpers.extend(me, config);<br><br><span class="hljs-comment">// Contains hit boxes for each dataset (in dataset order)</span><br>me.legendHitBoxes = [];<br>&#125;,<br><br><span class="hljs-comment">// These methods are ordered by lifecycle. Utilities then follow.</span><br><br>beforeUpdate: noop,<br>update: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">maxWidth, maxHeight, margins</span>) </span>&#123;<br><span class="hljs-keyword">var</span> me = <span class="hljs-built_in">this</span>;<br><br><span class="hljs-comment">// Update Lifecycle - Probably don&#x27;t want to ever extend or overwrite this function ;)</span><br>me.beforeUpdate();<br><br><span class="hljs-comment">// Absorb the master measurements</span><br>me.maxWidth = maxWidth;<br>me.maxHeight = maxHeight;<br>me.margins = margins;<br><br><span class="hljs-comment">// Dimensions</span><br>me.beforeSetDimensions();<br>me.setDimensions();<br>me.afterSetDimensions();<br><span class="hljs-comment">// Labels</span><br>me.beforeBuildLabels();<br>me.buildLabels();<br>me.afterBuildLabels();<br><br><span class="hljs-comment">// Fit</span><br>me.beforeFit();<br>me.fit();<br>me.afterFit();<br><span class="hljs-comment">//</span><br>me.afterUpdate();<br><span class="hljs-keyword">return</span> me.minSize;<br><br>&#125;,<br>afterUpdate: noop,<br><br><span class="hljs-comment">//</span><br><br>beforeSetDimensions: noop,<br>setDimensions: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> me = <span class="hljs-built_in">this</span>;<br><span class="hljs-comment">// Set the unconstrained dimension before label rotation</span><br><span class="hljs-keyword">if</span> (me.isHorizontal()) &#123;<br><span class="hljs-comment">// Reset position before calculating rotation</span><br>me.width = me.maxWidth;<br>me.left = <span class="hljs-number">0</span>;<br>me.right = me.width;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>me.height = me.maxHeight;<br><br><span class="hljs-comment">// Reset position before calculating rotation</span><br>me.top = <span class="hljs-number">0</span>;<br>me.bottom = me.height;<br>&#125;<br><br><span class="hljs-comment">// Reset padding</span><br>me.paddingLeft = <span class="hljs-number">0</span>;<br>me.paddingTop = <span class="hljs-number">0</span>;<br>me.paddingRight = <span class="hljs-number">0</span>;<br>me.paddingBottom = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">// Reset minSize</span><br>me.minSize = &#123;<br>width: <span class="hljs-number">0</span>,<br>height: <span class="hljs-number">0</span><br>&#125;;<br>&#125;,<br>afterSetDimensions: noop,<br><br><span class="hljs-comment">//</span><br><br>beforeBuildLabels: noop,<br>buildLabels: noop,<br>afterBuildLabels: noop,<br><br><span class="hljs-comment">//</span><br><br>beforeFit: noop,<br>fit: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> me = <span class="hljs-built_in">this</span>;<br><span class="hljs-keyword">var</span> valueOrDefault = helpers.valueOrDefault;<br><span class="hljs-keyword">var</span> opts = me.options;<br><span class="hljs-keyword">var</span> display = opts.display;<br><span class="hljs-keyword">var</span> fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);<br><span class="hljs-keyword">var</span> minSize = me.minSize;<br><span class="hljs-keyword">var</span> lineCount = helpers.isArray(opts.text) ? opts.text.length : <span class="hljs-number">1</span>;<br><span class="hljs-keyword">var</span> lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);<br><span class="hljs-keyword">var</span> textSize = display ? (lineCount * lineHeight) + (opts.padding * <span class="hljs-number">2</span>) : <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">if</span> (me.isHorizontal()) &#123;<br>minSize.width = me.maxWidth; <span class="hljs-comment">// fill all the width</span><br>minSize.height = textSize;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>minSize.width = textSize;<br>minSize.height = me.maxHeight; <span class="hljs-comment">// fill all the height</span><br>&#125;<br><br>me.width = minSize.width;<br>me.height = minSize.height;<br><br>&#125;,<br>afterFit: noop,<br><br><span class="hljs-comment">// Shared Methods</span><br>isHorizontal: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> pos = <span class="hljs-built_in">this</span>.options.position;<br><span class="hljs-keyword">return</span> pos === <span class="hljs-string">&#x27;top&#x27;</span> || pos === <span class="hljs-string">&#x27;bottom&#x27;</span>;<br>&#125;,<br><br><span class="hljs-comment">// Actually draw the title block on the canvas</span><br>draw: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> me = <span class="hljs-built_in">this</span>;<br><span class="hljs-keyword">var</span> ctx = me.ctx;<br><span class="hljs-keyword">var</span> valueOrDefault = helpers.valueOrDefault;<br><span class="hljs-keyword">var</span> opts = me.options;<br><span class="hljs-keyword">var</span> globalDefaults = defaults.global;<br><br><span class="hljs-keyword">if</span> (opts.display) &#123;<br><span class="hljs-keyword">var</span> fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);<br><span class="hljs-keyword">var</span> fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);<br><span class="hljs-keyword">var</span> fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);<br><span class="hljs-keyword">var</span> titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);<br><span class="hljs-keyword">var</span> lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);<br><span class="hljs-keyword">var</span> offset = lineHeight / <span class="hljs-number">2</span> + opts.padding;<br><span class="hljs-keyword">var</span> rotation = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">var</span> top = me.top;<br><span class="hljs-keyword">var</span> left = me.left;<br><span class="hljs-keyword">var</span> bottom = me.bottom;<br><span class="hljs-keyword">var</span> right = me.right;<br><span class="hljs-keyword">var</span> maxWidth, titleX, titleY;<br><br>ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); <span class="hljs-comment">// render in correct colour</span><br>ctx.font = titleFont;<br><br><span class="hljs-comment">// Horizontal</span><br><span class="hljs-keyword">if</span> (me.isHorizontal()) &#123;<br>titleX = left + ((right - left) / <span class="hljs-number">2</span>); <span class="hljs-comment">// midpoint of the width</span><br>titleY = top + offset;<br>maxWidth = right - left;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>titleX = opts.position === <span class="hljs-string">&#x27;left&#x27;</span> ? left + offset : right - offset;<br>titleY = top + ((bottom - top) / <span class="hljs-number">2</span>);<br>maxWidth = bottom - top;<br>rotation = <span class="hljs-built_in">Math</span>.PI * (opts.position === <span class="hljs-string">&#x27;left&#x27;</span> ? -<span class="hljs-number">0.5</span> : <span class="hljs-number">0.5</span>);<br>&#125;<br><br>ctx.save();<br>ctx.translate(titleX, titleY);<br>ctx.rotate(rotation);<br>ctx.textAlign = <span class="hljs-string">&#x27;center&#x27;</span>;<br>ctx.textBaseline = <span class="hljs-string">&#x27;middle&#x27;</span>;<br><br><span class="hljs-keyword">var</span> text = opts.text;<br><span class="hljs-keyword">if</span> (helpers.isArray(text)) &#123;<br><span class="hljs-keyword">var</span> y = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; text.length; ++i) &#123;<br>ctx.fillText(text[i], <span class="hljs-number">0</span>, y, maxWidth);<br>y += lineHeight;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>ctx.fillText(text, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, maxWidth);<br>&#125;<br><br>ctx.restore();<br>&#125;<br>&#125;<br>&#125;);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createNewTitleBlockAndAttach</span>(<span class="hljs-params">chart, titleOpts</span>) </span>&#123;<br><span class="hljs-keyword">var</span> title = <span class="hljs-keyword">new</span> Title(&#123;<br>ctx: chart.ctx,<br>options: titleOpts,<br>chart: chart<br>&#125;);<br><br>layouts.configure(chart, title, titleOpts);<br>layouts.addBox(chart, title);<br>chart.titleBlock = title;<br>&#125;<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>id: <span class="hljs-string">&#x27;title&#x27;</span>,<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Backward compatibility: since 2.1.5, the title is registered as a plugin, making</span><br><span class="hljs-comment"> * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of</span><br><span class="hljs-comment"> * the plugin, which one will be re-exposed in the chart.js file.</span><br><span class="hljs-comment"> * https://github.com/chartjs/Chart.js/pull/2640</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment"> */</span><br>_element: Title,<br><br>beforeInit: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">chart</span>) </span>&#123;<br><span class="hljs-keyword">var</span> titleOpts = chart.options.title;<br><br><span class="hljs-keyword">if</span> (titleOpts) &#123;<br>createNewTitleBlockAndAttach(chart, titleOpts);<br>&#125;<br>&#125;,<br><br>beforeUpdate: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">chart</span>) </span>&#123;<br><span class="hljs-keyword">var</span> titleOpts = chart.options.title;<br><span class="hljs-keyword">var</span> titleBlock = chart.titleBlock;<br><br><span class="hljs-keyword">if</span> (titleOpts) &#123;<br>helpers.mergeIf(titleOpts, defaults.global.title);<br><br><span class="hljs-keyword">if</span> (titleBlock) &#123;<br>layouts.configure(chart, titleBlock, titleOpts);<br>titleBlock.options = titleOpts;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>createNewTitleBlockAndAttach(chart, titleOpts);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (titleBlock) &#123;<br>layouts.removeBox(chart, titleBlock);<br><span class="hljs-keyword">delete</span> chart.titleBlock;<br>&#125;<br>&#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.2.0&quot;</span>,<br>    <span class="hljs-attr">&quot;configurations&quot;</span>: [<br>        &#123;<br>            <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;(gdb) Launch&quot;</span>, <br>            <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;cppdbg&quot;</span>,<br>            <span class="hljs-attr">&quot;request&quot;</span>: <span class="hljs-string">&quot;launch&quot;</span>, <br>            <span class="hljs-attr">&quot;program&quot;</span>: <span class="hljs-string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>, <br>            <span class="hljs-attr">&quot;stopAtEntry&quot;</span>: <span class="hljs-literal">false</span>, <br>            <span class="hljs-attr">&quot;cwd&quot;</span>: <span class="hljs-string">&quot;$&#123;workspaceRoot&#125;&quot;</span>,<br>            <span class="hljs-attr">&quot;externalConsole&quot;</span>: <span class="hljs-literal">true</span>, <br>            <span class="hljs-attr">&quot;linux&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;MIMode&quot;</span>: <span class="hljs-string">&quot;gdb&quot;</span><br>            &#125;,<br>            <span class="hljs-attr">&quot;osx&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;MIMode&quot;</span>: <span class="hljs-string">&quot;lldb&quot;</span><br>            &#125;,<br>            <span class="hljs-attr">&quot;windows&quot;</span>: &#123; <br>                <span class="hljs-attr">&quot;MIMode&quot;</span>: <span class="hljs-string">&quot;gdb&quot;</span>,<br>                <span class="hljs-attr">&quot;miDebuggerPath&quot;</span>: <span class="hljs-string">&quot;gdb.exe&quot;</span><br>            &#125;<br>        &#125;<br>    ]<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Company, OrderNumber <span class="hljs-keyword">FROM</span> Orders <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> Company <span class="hljs-keyword">DESC</span>, OrderNumber <span class="hljs-keyword">ASC</span><br>update whut_student <span class="hljs-keyword">SET</span> grade<span class="hljs-operator">=</span><span class="hljs-number">2017</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">&gt;</span><span class="hljs-number">1003740</span><br>update whut_student <span class="hljs-keyword">SET</span> id<span class="hljs-operator">=</span>id<span class="hljs-operator">+</span><span class="hljs-number">1</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">COUNT</span>(student_id) <span class="hljs-keyword">from</span> whut_student<br><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> whut_student<br><span class="hljs-keyword">where</span> student_id <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span>  student_id  <span class="hljs-keyword">from</span>  whut_student  <span class="hljs-keyword">group</span>  <span class="hljs-keyword">by</span>  student_id  <span class="hljs-keyword">having</span>  <span class="hljs-built_in">count</span>(student_id) <span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> whut_student <span class="hljs-keyword">where</span> id<span class="hljs-operator">&lt;=</span><span class="hljs-number">137</span><br>UPDATE whut_student <span class="hljs-keyword">SET</span> DEGREE<span class="hljs-operator">=</span>&quot;硕士&quot; <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> whut_student <span class="hljs-keyword">where</span> student_id<span class="hljs-operator">=</span><span class="hljs-number">1049731702891</span>;<br><br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> whut_student <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1008281</span><br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)  num,student_id <span class="hljs-keyword">FROM</span> whut_student <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> student_id <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> num <span class="hljs-keyword">DESC</span> ;<br></code></pre></td></tr></table></figure><h1 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h1><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">## 开发/测试/生产环境分别对应dev/test/prod</span><br><br><span class="hljs-attr">server.port</span>=<span class="hljs-number">1000</span><br><span class="hljs-attr">debug</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">trace</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">spring.application.name</span>=blog-web-server<br><span class="hljs-attr">spring.profiles.active</span>=dev<br><br><span class="hljs-attr">spring.datasource.name</span>=datasource<br><span class="hljs-attr">spring.datasource.type</span>=com.alibaba.druid.pool.DruidDataSource<br><span class="hljs-attr">spring.datasource.druid.filters</span>=stat<br><span class="hljs-attr">spring.datasource.druid.driver-class-name</span>=com.mysql.jdbc.Driver<br><span class="hljs-attr">spring.datasource.druid.url</span>=jdbc:mysql://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">3306</span>/acanx?useUnicode=<span class="hljs-literal">true</span>&amp;characterEncoding=UTF-<span class="hljs-number">8</span>&amp;allowMultiQueries=<span class="hljs-literal">true</span><br><span class="hljs-attr">spring.datasource.druid.username</span>=root<br><span class="hljs-attr">spring.datasource.druid.password</span>=root<br><span class="hljs-attr">spring.datasource.druid.initial-size</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">spring.datasource.druid.min-idle</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">spring.datasource.druid.max-active</span>=<span class="hljs-number">20</span><br><span class="hljs-attr">spring.datasource.druid.max-wait</span>=<span class="hljs-number">60000</span><br><span class="hljs-attr">spring.datasource.druid.time-between-eviction-runs-millis</span>=<span class="hljs-number">60000</span><br><span class="hljs-attr">spring.datasource.druid.min-evictable-idle-time-millis</span>=<span class="hljs-number">300000</span><br><span class="hljs-attr">spring.datasource.druid.validation-query</span>=SELECT <span class="hljs-string">&#x27;x&#x27;</span><br><span class="hljs-attr">spring.datasource.druid.test-while-idle</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">spring.datasource.druid.test-on-borrow</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">spring.datasource.druid.test-on-return</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">spring.datasource.druid.pool-prepared-statements</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">spring.datasource.druid.max-pool-prepared-statement-per-connection-size</span>=<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><h1 id="yml"><a href="#yml" class="headerlink" title="yml"></a>yml</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 设置集群的名字，对应为http://127.0.0.1:9200/中的&quot;cluster_name&quot; : &quot;acanx-es-demo&quot;,</span><br><span class="hljs-attr">cluster.name:</span> <span class="hljs-string">acanx-es-demo</span><br><span class="hljs-comment"># 节点名字，对应为http://127.0.0.1:9200/中的&quot;name&quot; : &quot;node-1001&quot;,</span><br><span class="hljs-attr">node.name:</span> <span class="hljs-string">node-1001</span><br><span class="hljs-attr">node.master:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">node.data:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 修改ES的监听地址，以便其他机器也可以访问</span><br><span class="hljs-attr">network.host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br><span class="hljs-comment"># 默认端口</span><br><span class="hljs-attr">http.port:</span> <span class="hljs-number">9200</span><br><span class="hljs-comment"># 增加新的CORS参数，这样head插件可以访问ES</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br></code></pre></td></tr></table></figure><h1 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># - main program</span><br><span class="hljs-built_in">set</span> -o errexit -o <span class="hljs-built_in">noglob</span> -o pipefail<br><br><span class="hljs-comment"># Configuration constants:</span><br><span class="hljs-comment"># - Use upper case, underscore-separated names</span><br><span class="hljs-comment"># - Use `readonly` keyword to highlight it is a constant</span><br><span class="hljs-built_in">readonly</span> GREETING_FORMAT=<span class="hljs-string">&quot;Hello %s!\n&quot;</span><br><br><span class="hljs-comment"># Global variables:</span><br><br><span class="hljs-keyword">function</span> sayHello &#123;<br>    <span class="hljs-comment"># Variable declarations:</span><br>    <span class="hljs-comment"># - Always declared using `local` keyword</span><br>    <span class="hljs-comment"># - Function parameters declared at the beginning of function</span><br>    <span class="hljs-comment"># - Use meaningful names</span><br>    <span class="hljs-comment"># - Use all lower case, underscrore-separated names</span><br>    <span class="hljs-built_in">local</span> greeted_name=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br><br>    <span class="hljs-comment"># Variable references:</span><br>    <span class="hljs-comment"># - Are always wrapped in $&#123; &#125;</span><br>    <span class="hljs-comment"># - Are properly quoted to avoid issues with embedded whitespace</span><br>    <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;greeted_name&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-comment"># Return status:</span><br>        <span class="hljs-comment"># - Use a non-zero value if something went wrong</span><br>        <span class="hljs-comment"># - If none is specified - zero (success) is used by default</span><br>        <span class="hljs-built_in">return</span> 1<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;greeted_name&#125;</span>&quot;</span> == <span class="hljs-string">&#x27;-&#x27;</span> ]; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">read</span> greeted_name<br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GREETING_FORMAT&#125;</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;greeted_name&#125;</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">function</span> toUpperCase &#123;<br>    tr <span class="hljs-string">&quot;[a-z]&quot;</span> <span class="hljs-string">&quot;[A-Z]&quot;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> printError &#123;<br>    <span class="hljs-built_in">local</span> message=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>    <span class="hljs-built_in">local</span> red_color=<span class="hljs-string">&#x27;\e[31;1m&#x27;</span><br>    <span class="hljs-built_in">local</span> no_color=<span class="hljs-string">&#x27;\e[m&#x27;</span><br><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-variable">$&#123;red_color&#125;</span><span class="hljs-string">&#x27;ERROR:&#x27;</span><span class="hljs-variable">$&#123;no_color&#125;</span><span class="hljs-string">&#x27; %s\n&#x27;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;message&#125;</span>&quot;</span> 1&gt;&amp;2<br>&#125;<br><br><span class="hljs-comment"># Main program</span><br><br>sayHello <span class="hljs-string">&quot;Luke Skywalker&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Han Solo&quot;</span> | sayHello -<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Master Yoda&quot;</span> | sayHello - | toUpperCase<br><br><span class="hljs-keyword">if</span> ! sayHello; <span class="hljs-keyword">then</span><br>    printError <span class="hljs-string">&quot;You gave no name!&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br></code></pre></td></tr></table></figure><h1 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript">#!/bin/sh<br>echo <span class="hljs-string">&#x27;============卡密管理===============&#x27;</span><br>echo <span class="hljs-string">&#x27;创建卡密类型如下:&#x27;</span><br>arr=<span class="hljs-string">`redis-cli -h 172.17.95.112 keys hardware:bus:*`</span><br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $&#123;arr[@]&#125;;<br>        <span class="hljs-keyword">do</span><br>        bus=<span class="hljs-string">`echo $i | awk -F &#x27;:&#x27; &#x27;&#123;print $3&#125;&#x27;`</span><br>        value=<span class="hljs-string">`redis-cli --raw -h 172.17.95.112 get $i | grep -Po &#x27;&quot;name&quot;:&quot;.*?&quot;&#x27; | awk -F &#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;`</span><br>         echo $bus、$value ;<br> done<br><br>read -p <span class="hljs-string">&#x27;请输入操作:&#x27;</span> typevalue<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$typevalue&quot;</span> == <span class="hljs-string">&quot;exit&quot;</span> ];then<br>        exit<br>fi<br><br>isexist=<span class="hljs-string">`redis-cli --raw -h 172.17.95.112 get &quot;hardware:bus:$typevalue:&quot;`</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$isexist&quot;</span> == <span class="hljs-string">&quot;&quot;</span> ];then<br>        echo <span class="hljs-string">&#x27;输入类型不存在&#x27;</span><br>        sh $<span class="hljs-number">0</span><br>fi<br><br><br>read -p <span class="hljs-string">&#x27;生成数量:&#x27;</span> createNum<br><br>echo $createNum<br><br>echo <span class="hljs-string">&quot;====================卡密=========================编号:$typevalue&quot;</span><br>outFile=<span class="hljs-string">&quot;$typevalue-$RANDOM.log&quot;</span><br><span class="hljs-keyword">for</span>((i=<span class="hljs-number">0</span>;i&lt;$createNum;i++));<br><span class="hljs-keyword">do</span><br>        card=<span class="hljs-string">`date +%s%N | md5sum | head -c 8`</span><br>        redis-cli -h <span class="hljs-number">172.17</span><span class="hljs-number">.95</span><span class="hljs-number">.112</span> set <span class="hljs-string">&quot;hardware:card:$card:&quot;</span> <span class="hljs-string">&quot;$typevalue&quot;</span> &gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span><br>        echo <span class="hljs-string">&quot;$card&quot;</span>&gt;&gt;$outFile<br>        echo <span class="hljs-string">&quot;$card&quot;</span><br>done<br>echo <span class="hljs-string">&quot;输出文件路径为`pwd`/$outFile&quot;</span><br>echo <span class="hljs-string">&#x27;====================卡密=========================&#x27;</span><br>exit<br></code></pre></td></tr></table></figure><h1 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs powershell">title 修改shift+右击在此处打开PowerShell<br>mode con cols=<span class="hljs-number">73</span> lines=<span class="hljs-number">20</span><br>rem 验证是否是以管理员身份运行<br><span class="hljs-built_in">set</span> TempFile_Name=%SystemRoot%\System32\BatTestUACin_SysRt%Random%.batemp<br>( <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;BAT Test UAC in Temp&quot;</span> &gt;%TempFile_Name% ) <span class="hljs-number">1</span>&gt;nul <span class="hljs-number">2</span>&gt;nul<br><span class="hljs-keyword">if</span> not exist %TempFile_Name% (<br>color <span class="hljs-number">0</span>c<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 错误：没有以管理员身份运行该工具。<br><span class="hljs-built_in">echo</span> 该工具将无法使用！<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 方法：<br><span class="hljs-built_in">echo</span> 找到该工具，右击<span class="hljs-string">&quot;以管理员身份运行&quot;</span>。<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 按任意键退出该工具..... &amp; pause &gt;nul<br><span class="hljs-keyword">exit</span><br>)<br><span class="hljs-built_in">echo</span> 初始化中，请稍后.....<br>rem 设置<span class="hljs-string">&quot;HKCR\Directory\Background\shell&quot;</span>的所有者为:Everyone<br>&gt;&gt;fcc_owner.inf <span class="hljs-built_in">echo</span>.[<span class="hljs-type">Version</span>]<br>&gt;&gt;fcc_owner.inf echo.Signature = <span class="hljs-string">&quot;<span class="hljs-variable">$Chicago</span><span class="hljs-variable">$</span>&quot;</span><br>&gt;&gt;fcc_owner.inf <span class="hljs-built_in">echo</span>.<br>&gt;&gt;fcc_owner.inf <span class="hljs-built_in">echo</span>.[<span class="hljs-type">Registry</span> <span class="hljs-type">Keys</span>]<br>&gt;&gt;fcc_owner.inf <span class="hljs-built_in">echo</span>.<span class="hljs-string">&quot;CLASSES_ROOT\Directory\Background\shell&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;O:WD&quot;</span><br>secedit /configure /db fcc_owner.sdb /cfg fcc_owner.inf /log fcc_owner.log<br><span class="hljs-built_in">del</span> fcc_owner.*<br>:main<br><span class="hljs-built_in">cls</span><br>color <span class="hljs-number">0</span>a<br><span class="hljs-built_in">echo</span> *************************************************************************<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 该工具用于更改新版windows10系统shift+右键以何种方式打开命令窗口。<br><span class="hljs-built_in">echo</span> 系统默认“在此处打开PowerShell”，<br><span class="hljs-built_in">echo</span> 此工具可以在“PowerShell”和“CMD”之间切换。<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> ★注意！请使用管理员权限运行改工具！<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 请选择操作：<br><span class="hljs-built_in">echo</span> <span class="hljs-number">1</span>、修改为“在此处打开CMD窗口”<br><span class="hljs-built_in">echo</span> <span class="hljs-number">2</span>、修改为“在此处打开PowerShell窗口”<br><span class="hljs-built_in">echo</span> <span class="hljs-number">3</span>、同时显示<span class="hljs-number">1</span>和<span class="hljs-number">2</span><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> by:frogchou<br><span class="hljs-built_in">echo</span> website:frogchou.com<br><span class="hljs-built_in">echo</span> *************************************************************************<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">set</span> /p var=请输入序号并回车开始修改：<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%var%&quot;</span>==<span class="hljs-string">&quot;1&quot;</span> goto changeCMD<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%var%&quot;</span>==<span class="hljs-string">&quot;2&quot;</span> goto changePowerShell<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%var%&quot;</span>==<span class="hljs-string">&quot;3&quot;</span> (goto changeShowAll) <span class="hljs-keyword">else</span> (goto error)<br>:changeCMD<br>reg delete HKCR\Directory\Background\shell\cmd /v HideBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\cmd /v ShowBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>reg delete HKCR\Directory\Background\shell\Powershell /v ShowBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\Powershell /v HideBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>goto <span class="hljs-keyword">end</span><br>:changePowerShell<br>reg delete HKCR\Directory\Background\shell\cmd /v ShowBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\cmd /v HideBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>reg delete HKCR\Directory\Background\shell\Powershell /v HideBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\Powershell /v ShowBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>goto <span class="hljs-keyword">end</span><br>:changeShowAll<br>reg delete HKCR\Directory\Background\shell\cmd /v HideBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\cmd /v ShowBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>reg delete HKCR\Directory\Background\shell\Powershell /v HideBasedOnVelocityId /f<br>reg add HKCR\Directory\Background\shell\Powershell /v ShowBasedOnVelocityId /t REG_DWORD /d <span class="hljs-number">6527944</span> /f<br>goto <span class="hljs-keyword">end</span><br>:<span class="hljs-keyword">end</span><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 修改完成！按任意键退出.<br>pause &gt;nul<br><span class="hljs-keyword">exit</span><br>:error<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 选择错误！按任意键返回主菜单.<br>pause &gt;nul<br>goto main<br></code></pre></td></tr></table></figure><h1 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cmd">@<span class="hljs-built_in">echo</span> off <br><span class="hljs-built_in">echo</span> 定时关机DOS命令，使用方式: &quot;sdat <span class="hljs-number">23</span>:<span class="hljs-number">12</span>:<span class="hljs-number">12</span>&quot;; <br><span class="hljs-built_in">echo</span> sdat 为命令名称，<span class="hljs-number">23</span>:<span class="hljs-number">12</span>:<span class="hljs-number">12</span>为当天的时间参数<br>::<span class="hljs-built_in">set</span> yy=<span class="hljs-variable">%date:~0,4%</span><br>::<span class="hljs-built_in">set</span> mm=<span class="hljs-variable">%date:~5,2%</span><br>::<span class="hljs-built_in">set</span> dd=<span class="hljs-variable">%date:~8,2%</span><br><span class="hljs-built_in">set</span> h=<span class="hljs-variable">%time:~0,2%</span><br><span class="hljs-built_in">set</span> m=<span class="hljs-variable">%time:~3,2%</span><br><span class="hljs-built_in">set</span> s=<span class="hljs-variable">%time:~6,2%</span><br>::<span class="hljs-built_in">echo</span> <span class="hljs-variable">%yy%</span> <span class="hljs-variable">%mm%</span> <span class="hljs-variable">%dd%</span> <span class="hljs-variable">%h%</span> <span class="hljs-variable">%m%</span> <span class="hljs-variable">%s%</span><br>::<span class="hljs-built_in">echo</span> %<span class="hljs-number">1</span> %<span class="hljs-number">2</span> %<span class="hljs-number">3</span><br><span class="hljs-built_in">set</span> /a ts=(%<span class="hljs-number">1</span> - <span class="hljs-variable">%h%</span>)*<span class="hljs-number">3600</span> + (%<span class="hljs-number">2</span> - <span class="hljs-variable">%m%</span>)*<span class="hljs-number">60</span> + (%<span class="hljs-number">3</span> - <span class="hljs-variable">%s%</span>)<br><span class="hljs-keyword">IF</span> /i <span class="hljs-variable">%ts%</span> <span class="hljs-keyword">LSS</span> <span class="hljs-number">1</span> (<br><span class="hljs-built_in">echo</span> ERROR:Shutdown <span class="hljs-built_in">time</span> must be <span class="hljs-built_in">time</span> <span class="hljs-keyword">in</span> future;<br>) <span class="hljs-keyword">ELSE</span> (<br><span class="hljs-built_in">echo</span> INFO:System will shutdown after <span class="hljs-variable">%ts%</span> seconds <span class="hljs-built_in">at</span> %<span class="hljs-number">1</span> : %<span class="hljs-number">2</span> ：%<span class="hljs-number">3</span>; <br>shutdown /s /t <span class="hljs-variable">%ts%</span><br>)<br>::<span class="hljs-built_in">pause</span> <br></code></pre></td></tr></table></figure><h1 id="Bat"><a href="#Bat" class="headerlink" title="Bat"></a>Bat</h1><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> MySQL数据库备份<br><span class="hljs-built_in">set</span> del_date_back=<span class="hljs-number">15</span><br><span class="hljs-built_in">set</span> all_data_back_value=<span class="hljs-number">1</span><br><span class="hljs-built_in">set</span> haoya_bin_path=&quot;C:\Program Files\HaoZip\&quot;<br><span class="hljs-built_in">set</span> mysql_bin_path=&quot;C:\wamp\bin\mysql\mysql5.<span class="hljs-number">5</span>.<span class="hljs-number">24</span>\bin\&quot;<br><span class="hljs-built_in">set</span> mysql_data_path=&quot;C:\wamp\bin\mysql\mysql5.<span class="hljs-number">5</span>.<span class="hljs-number">24</span>\data\&quot;<br>::<span class="hljs-built_in">set</span> apache_bin_path=&quot;C:\wamp\bin\apache\apache2.<span class="hljs-number">2</span>.<span class="hljs-number">22</span>\bin\&quot;<br><span class="hljs-built_in">set</span> apache_data_path=&quot;C:\wamp\&quot;<br><span class="hljs-built_in">set</span> data_back_path=&quot;C:\dtsbc_data_back\&quot;<br><span class="hljs-built_in">set</span> del_file_path=&quot;C:\wamp\www\dtsbc\Admin\Runtime\&quot;<br><span class="hljs-built_in">set</span> Ymd=&quot;<span class="hljs-variable">%date:~,4%</span><span class="hljs-variable">%date:~5,2%</span><span class="hljs-variable">%date:~8,2%</span>&quot;<br><span class="hljs-built_in">set</span> /a t=<span class="hljs-number">100</span>+<span class="hljs-variable">%time:~,2%</span><br><span class="hljs-built_in">set</span> bakFileNameTail=_BAK_<span class="hljs-variable">%date:~,4%</span><span class="hljs-variable">%date:~5,2%</span><span class="hljs-variable">%date:~8,2%</span>_<span class="hljs-variable">%t:~1%</span><span class="hljs-variable">%time:~3,2%</span><span class="hljs-variable">%time:~6,2%</span><br><span class="hljs-built_in">echo</span> *****************************<br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> 今天是： <span class="hljs-variable">%date%</span>_<span class="hljs-variable">%time%</span><br><span class="hljs-built_in">echo</span> 好压执行路径为： <span class="hljs-variable">%haoya_bin_path%</span><br><span class="hljs-built_in">echo</span> mysql执行路径为： <span class="hljs-variable">%mysql_bin_path%</span><br><span class="hljs-built_in">echo</span> mysql数据路径为： <span class="hljs-variable">%mysql_data_path%</span><br>::<span class="hljs-built_in">echo</span> apache执行路径为： <span class="hljs-variable">%apache_bin_path%</span><br><span class="hljs-built_in">echo</span> apache数据路径为： <span class="hljs-variable">%apache_data_path%</span><br><span class="hljs-built_in">echo</span>.<br><span class="hljs-built_in">echo</span> *****************************<br>:: HaoZipC a -tzip <span class="hljs-number">20161221</span>.zip config\*<br>::<span class="hljs-built_in">set</span> mysql_bin_path = &quot;C:\wamp\bin\mysql\mysql5.<span class="hljs-number">5</span>.<span class="hljs-number">24</span>\bin&quot;<br>::<span class="hljs-built_in">set</span> apache_bin_path = &quot;C:\wamp\bin\apache\apache2.<span class="hljs-number">2</span>.<span class="hljs-number">22</span>\bin&quot;<br>::<span class="hljs-built_in">set</span> haoya_bin_path = &quot;C:\Program Files\HaoZip&quot;<br>::创建备份的数据的目录<br><br><span class="hljs-built_in">md</span> <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span><br><span class="hljs-variable">%mysql_bin_path%</span>\mysqldump -u root --default-character-<span class="hljs-built_in">set</span>=utf8 --databases dtsbc &gt; <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\dtsbc_<span class="hljs-variable">%bakFileNameTail%</span>.sql<br><span class="hljs-variable">%mysql_bin_path%</span>\mysqldump -u root --default-character-<span class="hljs-built_in">set</span>=utf8 --databases mysql &gt; <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\mysql_<span class="hljs-variable">%bakFileNameTail%</span>.sql<br><span class="hljs-variable">%mysql_bin_path%</span>\mysqldump -u root --default-character-<span class="hljs-built_in">set</span>=utf8 --databases bbsdata &gt; <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\bbsdata_<span class="hljs-variable">%bakFileNameTail%</span>.sql<br><span class="hljs-built_in">net</span> stop wampapache<br><span class="hljs-built_in">net</span> stop wampmysqld<br><span class="hljs-built_in">rd</span>/s/q <span class="hljs-variable">%del_file_path%</span><br><br><span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\dtsbc_mysql_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%mysql_data_path%</span>dtsbc\*<br><span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\bbs_mysql_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%mysql_data_path%</span>bbs\*<br><span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\mysql_mysql_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%mysql_data_path%</span>mysql\*<br><span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\dtsbc_php_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%apache_data_path%</span>dtsbc\*<br><span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\bbs_php_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%apache_data_path%</span>bbs\*<br><br><span class="hljs-keyword">if</span>  <span class="hljs-variable">%date:~9,1%</span> <span class="hljs-keyword">equ</span> <span class="hljs-variable">%all_data_back_value%</span> ( <span class="hljs-variable">%haoya_bin_path%</span>HaoZipC a -tzip <span class="hljs-variable">%data_back_path%</span><span class="hljs-variable">%Ymd%</span>\wamp_<span class="hljs-variable">%Ymd%</span>.zip <span class="hljs-variable">%apache_data_path%</span>*)<br>::<span class="hljs-built_in">cmd</span><br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> wampapache<br><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> wampmysqld<br>::<span class="hljs-built_in">set</span>/a n=<span class="hljs-number">5</span><br><span class="hljs-built_in">set</span>/a y=<span class="hljs-variable">%date:~,4%</span>,m=<span class="hljs-number">1</span><span class="hljs-variable">%date:~5,2%</span>-<span class="hljs-number">100</span>,d=<span class="hljs-number">1</span><span class="hljs-variable">%date:~8,2%</span>-<span class="hljs-number">100</span><br><span class="hljs-built_in">set</span>/a d-=<span class="hljs-variable">%del_date_back%</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%d%</span> <span class="hljs-keyword">gtr</span> <span class="hljs-number">0</span> <span class="hljs-keyword">goto</span> :ok<br>:ov<br><span class="hljs-built_in">set</span>/a &quot;<span class="hljs-built_in">md</span>=<span class="hljs-number">31</span>-<span class="hljs-variable">!(m-5)-!</span>(m-<span class="hljs-number">7</span>)-<span class="hljs-variable">!(m-10)-!</span>(m-<span class="hljs-number">12</span>)-<span class="hljs-variable">!(m-3)*(3-!</span>(y&amp;<span class="hljs-number">3</span>))&quot;<br><span class="hljs-built_in">set</span>/a d+=<span class="hljs-built_in">md</span>,m-=<span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%m%</span> <span class="hljs-keyword">equ</span> <span class="hljs-number">0</span> <span class="hljs-built_in">set</span>/a m=<span class="hljs-number">12</span>,y-=<span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%d%</span> <span class="hljs-keyword">leq</span> <span class="hljs-number">0</span> <span class="hljs-keyword">goto</span> :ov<br>:ok<br><span class="hljs-built_in">set</span>/a <span class="hljs-built_in">md</span>=m*<span class="hljs-number">100</span>+d+<span class="hljs-number">10000</span><br><span class="hljs-built_in">set</span> back_data_value=&quot;<span class="hljs-variable">%y%</span><span class="hljs-variable">%md:~1%</span>&quot;<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">%del_date_back%</span>天前的日期为：<span class="hljs-variable">%back_data_value%</span><br><span class="hljs-built_in">cd</span> <span class="hljs-variable">%data_back_path%</span><br><br><span class="hljs-built_in">set</span> /a data_back_value_int=<span class="hljs-variable">%back_data_value%</span>+<span class="hljs-number">0</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">%data_back_value_int%</span><br>::单条语句执行的时候需要的是一个% 在批处理中的话，需要两个%%<br><span class="hljs-keyword">for</span> /F <span class="hljs-variable">%%i</span> <span class="hljs-keyword">in</span> (&#x27;<span class="hljs-built_in">dir</span>  <span class="hljs-variable">%data_back_path%</span> /a:d /b&#x27;) <span class="hljs-keyword">do</span> (<span class="hljs-keyword">if</span> <span class="hljs-variable">%%i</span> <span class="hljs-keyword">lss</span> <span class="hljs-variable">%data_back_value_int%</span> ( <span class="hljs-built_in">rd</span>/s/q <span class="hljs-variable">%%i</span> ))<br>::<span class="hljs-keyword">for</span> /F <span class="hljs-variable">%%i</span> <span class="hljs-keyword">in</span> (&#x27;<span class="hljs-built_in">dir</span>  <span class="hljs-variable">%data_back_path%</span> /a:d /b&#x27;) <span class="hljs-keyword">do</span> (  <span class="hljs-keyword">if</span> <span class="hljs-variable">%%i</span> <span class="hljs-keyword">lss</span> <span class="hljs-variable">%data_back_value_int%</span> ( <span class="hljs-built_in">echo</span> <span class="hljs-variable">%%i</span> ) <span class="hljs-keyword">else</span> ( <span class="hljs-built_in">echo</span> &quot;google&quot; )  )<br><span class="hljs-function">echo.:<span class="hljs-title">P</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">echo</span> <span class="hljs-title">MySQL</span>数据库备份完成，请进行检查。。。</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">echo</span>.:<span class="hljs-title">P</span></span><br><span class="hljs-function"><span class="hljs-title">echo</span>.</span><br><span class="hljs-function">//<span class="hljs-title">pause</span></span><br><span class="hljs-function">::<span class="hljs-title">pause</span></span><br></code></pre></td></tr></table></figure><h1 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs groovy">errpattern = <span class="hljs-regexp">~/Failures: [1-9]+/</span><br>errpatternSum = <span class="hljs-regexp">~/passed:\d+,.*failed:\d+,/</span><br><span class="hljs-keyword">def</span> ratio<br>manager.build.logFile.eachLine&#123; line -&gt;<br>    errmatcher=errpattern.matcher(line)<br>    errmatcherSum=errpatternSum.matcher(line)<br>    <span class="hljs-keyword">if</span> (errmatcher.find()) &#123;<br>        manager.build.<span class="hljs-meta">@result</span> = hudson.model.Result.UNSTABLE<br>    &#125;<br>    <span class="hljs-keyword">if</span>(errmatcherSum.find())&#123;<br>        numArray = line.findAll(<span class="hljs-regexp">/\d+/</span>)*.toInteger()<br>        manager.listener.logger.println(<span class="hljs-string">&quot;&gt;&gt;&gt; number =  &quot;</span> + numArray)<br>        ratio = (numArray[<span class="hljs-number">1</span>] / numArray[<span class="hljs-number">3</span>]) * <span class="hljs-number">100</span><br>        manager.listener.logger.println(<span class="hljs-string">&quot;&gt;&gt;&gt; ratio =  &quot;</span> + ratio + <span class="hljs-string">&quot;%&quot;</span>)<br>    &#125;<br>&#125;<br><br>ratio = Math.round(ratio)<br><span class="hljs-comment">//add text next to the job build history</span><br>manager.addShortText(<span class="hljs-string">&quot;failure rate -&gt; &quot;</span> + ratio + <span class="hljs-string">&quot;%&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs gradle">apply plugin: <span class="hljs-string">&#x27;com.android.application&#x27;</span><br><br>android &#123;<br>    compileSdkVersion <span class="hljs-number">25</span><br>    buildToolsVersion <span class="hljs-string">&quot;25.0.1&quot;</span><br>    defaultConfig &#123;<br>        applicationId <span class="hljs-string">&quot;com.grgbanking.school&quot;</span><br>        minSdkVersion <span class="hljs-number">15</span><br>        targetSdkVersion <span class="hljs-number">25</span><br>        versionCode <span class="hljs-number">1</span><br>        versionName <span class="hljs-string">&quot;1.0&quot;</span><br>        testInstrumentationRunner <span class="hljs-string">&quot;android.support.test.runner.AndroidJUnitRunner&quot;</span><br>    &#125;<br>    buildTypes &#123;<br>        release &#123;<br>            minifyEnabled <span class="hljs-keyword">false</span><br>            proguardFiles getDefaultProguardFile(<span class="hljs-string">&#x27;proguard-android.txt&#x27;</span>), <span class="hljs-string">&#x27;proguard-rules.pro&#x27;</span><br>        &#125;<br>    &#125;<br>    dataBinding &#123;<br>        enabled = <span class="hljs-keyword">true</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">dependencies</span> &#123;<br>    <span class="hljs-keyword">compile</span> <span class="hljs-keyword">fileTree</span>(dir: <span class="hljs-string">&#x27;libs&#x27;</span>, <span class="hljs-keyword">include</span>: [<span class="hljs-string">&#x27;*.jar&#x27;</span>])<br>    androidTestCompile(<span class="hljs-string">&#x27;com.android.support.test.espresso:espresso-core:2.2.2&#x27;</span>, &#123;<br>        <span class="hljs-keyword">exclude</span> <span class="hljs-keyword">group</span>: <span class="hljs-string">&#x27;com.android.support&#x27;</span>, module: <span class="hljs-string">&#x27;support-annotations&#x27;</span><br>    &#125;)<br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.android.support:appcompat-v7:25.0.1&#x27;</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.jakewharton.rxbinding:rxbinding:0.4.0&#x27;</span><br><br>    <span class="hljs-comment">/*compile &#x27;com.squareup.retrofit2:retrofit:2.1.0&#x27;</span><br><span class="hljs-comment">    compile &#x27;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&#x27;*/</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.squareup.retrofit2:retrofit:2.0.0-beta4&#x27;</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.squareup.retrofit2:converter-gson:2.0.0-beta4&#x27;</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&#x27;</span><br><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.squareup.okhttp:okhttp:2.7.5&#x27;</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;com.alibaba:fastjson:1.2.20&#x27;</span><br>    <span class="hljs-keyword">compile</span> <span class="hljs-string">&#x27;org.apache.commons:commons-lang3:3.5&#x27;</span><br><br>    testCompile <span class="hljs-string">&#x27;junit:junit:4.12&#x27;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs git"># 1.初始化git<br>git init <br><br># 2.查看git修改状态：<br>git status<br><br># 3.将项目保存到仓库<br>先 git add .<br>再 git commit -m &quot;备注&quot;<br><br># 4. 查看最新三个仓库中的项目<br>git log<br><br># 5. 查看所有仓库中的项目<br>git reflog<br><br># 6.恢复成某个项目<br>git reset --hard 这里写id<br><br># 7.将github中的项目拷贝下来<br>git clone 地址<br><br># 8.将本地项目传到github <br>git push origin master<br><br><br># 9.更新本地项目，与gitbub一致<br>git pull<br><br># 10.将本地项目和新建的远程仓库关联起来，必须是未初始化仓库<br>git remote add origin git@github.com:michaelliao&#x2F;learngit.git<br><br># 11.把本地库的内容推送到远程，用git push命令<br>git push -u origin master    # （由于远程库是空的，我们第一次推送master分支时，加上了-u参数，<br>Git不但会把本地的master分支内容推送的远程新的master分支，<br>还会把本地的master分支和远程的master分支关联起来，<br>在以后的推送或者拉取时就可以简化命令。）<br><br></code></pre></td></tr></table></figure><p>···<br>···<br>···</p><h1 id="待添加"><a href="#待添加" class="headerlink" title="待添加"></a>待添加</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">connect: &#123;<br>    server: &#123;<br>        options: &#123;<br>            port: <span class="hljs-number">9100</span>,<br>            hostname: <span class="hljs-string">&#x27;*&#x27;</span>,<br>            base: <span class="hljs-string">&#x27;.&#x27;</span>,<br>            keepalive: <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="待添加-1"><a href="#待添加-1" class="headerlink" title="待添加"></a>待添加</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.base_uri = <span class="hljs-built_in">this</span>.config.base_uri || <span class="hljs-built_in">this</span>.prefs.get(<span class="hljs-string">&quot;app-base_uri&quot;</span>) || <span class="hljs-string">&quot;http://localhost:9200&quot;</span>;<br></code></pre></td></tr></table></figure><h1 id="待添加-2"><a href="#待添加-2" class="headerlink" title="待添加"></a>待添加</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.base_uri = <span class="hljs-built_in">this</span>.config.base_uri || <span class="hljs-built_in">this</span>.prefs.get(<span class="hljs-string">&quot;app-base_uri&quot;</span>) || <span class="hljs-string">&quot;http://127.0.0.1:9200&quot;</span>;<br></code></pre></td></tr></table></figure><h1 id="待添加-3"><a href="#待添加-3" class="headerlink" title="待添加"></a>待添加</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><h1 id="待添加-4"><a href="#待添加-4" class="headerlink" title="待添加"></a>待添加</h1><h1 id="待添加-5"><a href="#待添加-5" class="headerlink" title="待添加"></a>待添加</h1>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 前端 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch6.x及Elasticsearch-Head插件的安装</title>
      <link href="/Blog/2018/09/05/ElasticSearch6.x%E5%AE%89%E8%A3%85/"/>
      <url>/Blog/2018/09/05/ElasticSearch6.x%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="ElasticSearch6-x及elasticsearch-head插件的安装"><a href="#ElasticSearch6-x及elasticsearch-head插件的安装" class="headerlink" title="ElasticSearch6.x及elasticsearch-head插件的安装"></a>ElasticSearch6.x及elasticsearch-head插件的安装</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li>Windows10企业版/专业版 X64</li><li>JDK10.0.1</li><li>ElasticSearch-5.0.0</li><li>Node-v8.11.3-x64.msi</li><li>Git客户端</li><li>Powershell</li></ul><h2 id="1-下载相关必备软件："><a href="#1-下载相关必备软件：" class="headerlink" title="1.下载相关必备软件："></a>1.下载相关必备软件：</h2><ul><li><p>Windows系统，不多废话。</p></li><li><p>ES官网下载页面：<a href="https://www.elastic.co/downloads/elasticsearch">https://www.elastic.co/downloads/elasticsearch</a></p></li><li><p>ES6.4 Windows版下载链接：<a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.0.zip">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.0.zip</a></p></li><li><p>JDK 安装略</p></li><li><p>Node 安装略  </p><ul><li>设置环境变量，把NODE_HOME设置到环境变量里(安装包也可以自动加入PATH环境变量)。测试一下node是否生效：</li><li>Powershell/CMD测试命令：node -v</li><li><img src="/Blog/static/image/20180905/node-v.png" alt="9200-default"></li></ul></li><li><p>Git 安装略</p></li></ul><h2 id="2安装ElasticSearch"><a href="#2安装ElasticSearch" class="headerlink" title="2安装ElasticSearch"></a>2安装ElasticSearch</h2><h3 id="2-1安装"><a href="#2-1安装" class="headerlink" title="2.1安装"></a>2.1安装</h3><p>将1中下载的elasticsearch-6.4.0.zip压缩包解压，打开压缩包的bin目录，点击elasticsearch.bat批处理文件就可以默认启动了，安装过程可以说非常简单。<br>访问:<a href="http://localhost:9200，如下所示：">http://localhost:9200，如下所示：</a><br><img src="/Blog/static/image/20180905/9200-default.png" alt="9200-default"></p><h3 id="2-2命令行下启动"><a href="#2-2命令行下启动" class="headerlink" title="2.2命令行下启动"></a>2.2命令行下启动</h3><p>在Powershell中开启ES-6.x，直接执行bat文件：<br>D:\ProgramFiles\ElasticSearch\elasticsearch-6.4.0\bin\elasticsearch.bat<br>也在系统的环境变量中将路径”D:\ProgramFiles\ElasticSearch\elasticsearch-6.4.0\bin&quot;添加到”Path”中<br>可以直接使用如下命令运行：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">elasticsearch.bat<br></code></pre></td></tr></table></figure><p>启动效果：<br><img src="/Blog/static/image/20180905/ES%E5%90%AF%E5%8A%A8.png" alt="9200-default"></p><h2 id="3-elasticsearch-head插件安装"><a href="#3-elasticsearch-head插件安装" class="headerlink" title="3.elasticsearch-head插件安装"></a>3.elasticsearch-head插件安装</h2><h3 id="3-1安装grunt"><a href="#3-1安装grunt" class="headerlink" title="3.1安装grunt"></a>3.1安装grunt</h3><p>grunt是一个很方便的构建工具，可以进行打包压缩、测试、执行等等的工作，6.x里的head插件需要通过grunt启动。因此需要安装grunt：</p><ul><li>设置全局安装(-g代表全局安装,安装在D:\ProgramFiles\NodeJs\node_modules\目录下)：<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install -g grunt-cli<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2下载elasticsearch-head插件的源码"><a href="#3-2下载elasticsearch-head插件的源码" class="headerlink" title="3.2下载elasticsearch-head插件的源码"></a>3.2下载elasticsearch-head插件的源码</h3><p>源码地址：<a href="https://github.com/mobz/elasticsearch-head.git">https://github.com/mobz/elasticsearch-head.git</a></p><h4 id="2-2-1使用git-clone命令下载下来："><a href="#2-2-1使用git-clone命令下载下来：" class="headerlink" title="2.2.1使用git clone命令下载下来："></a>2.2.1使用git clone命令下载下来：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone git:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/mobz/</span>elasticsearch-head.git<br></code></pre></td></tr></table></figure><p>效果如图：<br><img src="/Blog/static/image/20180905/git-clone.png" alt="9200-default"></p><h3 id="3-3配置elasticsearch-head"><a href="#3-3配置elasticsearch-head" class="headerlink" title="3.3配置elasticsearch-head"></a>3.3配置elasticsearch-head</h3><p>由于head的代码还是旧版本的，直接执行有很多限制，比如无法跨机器访问。因此需要修改几个地方：</p><h4 id="3-3-1修改elasticsearch-head源码配置-Gruntfile-js"><a href="#3-3-1修改elasticsearch-head源码配置-Gruntfile-js" class="headerlink" title="3.3.1修改elasticsearch-head源码配置-Gruntfile.js"></a>3.3.1修改elasticsearch-head源码配置-Gruntfile.js</h4><p>①目录：elasticsearch-head/Gruntfile.js，增加hostname属性，设置为*：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">connect: &#123;<br>    server: &#123;<br>        options: &#123;<br>            port: <span class="hljs-number">9100</span>,<br>            hostname: <span class="hljs-string">&#x27;*&#x27;</span>,<br>            base: <span class="hljs-string">&#x27;.&#x27;</span>,<br>            keepalive: <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-3-2修改elasticsearch-head源码配置-app-js"><a href="#3-3-2修改elasticsearch-head源码配置-app-js" class="headerlink" title="3.3.2修改elasticsearch-head源码配置-app.js"></a>3.3.2修改elasticsearch-head源码配置-app.js</h4><p>②修改elasticsearch-head的连接地址<br>目录：elasticsearch-head/_site/app.js<br>修改连接地址:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.base_uri = <span class="hljs-built_in">this</span>.config.base_uri || <span class="hljs-built_in">this</span>.prefs.get(<span class="hljs-string">&quot;app-base_uri&quot;</span>) || <span class="hljs-string">&quot;http://localhost:9200&quot;</span>;<br></code></pre></td></tr></table></figure><p>把localhost修改成你es的服务器地址，如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.base_uri = <span class="hljs-built_in">this</span>.config.base_uri || <span class="hljs-built_in">this</span>.prefs.get(<span class="hljs-string">&quot;app-base_uri&quot;</span>) || <span class="hljs-string">&quot;http://127.0.0.1:9200&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="3-4添加Elasticsearch的配置参数"><a href="#3-4添加Elasticsearch的配置参数" class="headerlink" title="3.4添加Elasticsearch的配置参数"></a>3.4添加Elasticsearch的配置参数</h3><p>修改Elasticsearch使用的参数。编辑elasticsearch-6.4.0/config/elasticsearch.yml配置文件，在文件末尾追加如下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 设置集群的名字，对应为http://127.0.0.1:9200/中的&quot;cluster_name&quot; : &quot;acanx-es-demo&quot;,</span><br><span class="hljs-attr">cluster.name:</span> <span class="hljs-string">acanx-es-demo</span><br><span class="hljs-comment"># 节点名字，对应为http://127.0.0.1:9200/中的&quot;name&quot; : &quot;node-1001&quot;,</span><br><span class="hljs-attr">node.name:</span> <span class="hljs-string">node-1001</span><br><span class="hljs-attr">node.master:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">node.data:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 修改ES的监听地址，以便其他机器也可以访问</span><br><span class="hljs-attr">network.host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br><span class="hljs-comment"># 默认端口</span><br><span class="hljs-attr">http.port:</span> <span class="hljs-number">9200</span><br><span class="hljs-comment"># 增加新的CORS参数，这样head插件可以访问ES</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br></code></pre></td></tr></table></figure><ul><li>修改完成后记得Save保存！</li><li>特别注意，设置参数的时候:后面要有空格！格式不规范在启动ES时会抛异常，配置时注意检查书写格式</li></ul><h3 id="3-5启动ElasticSearch"><a href="#3-5启动ElasticSearch" class="headerlink" title="3.5启动ElasticSearch"></a>3.5启动ElasticSearch</h3><p>   操作同上第二节</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">elasticsearch.bat<br></code></pre></td></tr></table></figure><h3 id="3-6再运行elasticsearch-head"><a href="#3-6再运行elasticsearch-head" class="headerlink" title="3.6再运行elasticsearch-head"></a>3.6再运行elasticsearch-head</h3><p> 在elasticsearch-head源码目录下，执行npm install 下载的包：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>效果如图：<br><img src="/Blog/static/image/20180905/npm-install.png" alt="9200-default"></p><ul><li>初次运行安装可能会报警告或错误。可以重新运行一次npm install。最后，在head源代码目录下启动Nodejs：</li></ul><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">grunt <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>效果如图：<br><img src="/Blog/static/image/20180905/grunt-server.png" alt="9200-default"></p><p>访问:<a href="http://localhost:9100/">http://localhost:9100</a><br>这个时候，访问<a href="http://localhost:9100就可以使用elasticsearch-head插件查看ES中的数据了了：">http://localhost:9100就可以使用elasticsearch-head插件查看ES中的数据了了：</a><br><img src="/Blog/static/image/20180905/9100-port.png" alt="9200-default"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://www.cnblogs.com/xuxy03/p/6039999.html">http://www.cnblogs.com/xuxy03/p/6039999.html</a></li><li><a href="https://blog.csdn.net/fwhezfwhez/article/details/79380275">https://blog.csdn.net/fwhezfwhez/article/details/79380275</a></li><li><a href="https://blog.csdn.net/qq_40454655/article/details/79291106">https://blog.csdn.net/qq_40454655/article/details/79291106</a></li><li><a href="https://blog.csdn.net/sinat_28224453/article/details/51516061">https://blog.csdn.net/sinat_28224453/article/details/51516061</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> ElasticSearch </tag>
            
            <tag> Elasticsearch-Head </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10安装JDK10</title>
      <link href="/Blog/2018/07/07/Win10%E5%AE%89%E8%A3%85JDK10/"/>
      <url>/Blog/2018/07/07/Win10%E5%AE%89%E8%A3%85JDK10/</url>
      
        <content type="html"><![CDATA[<h2 id="java-原码、反码、补码计算-以及取反-运算"><a href="#java-原码、反码、补码计算-以及取反-运算" class="headerlink" title="java 原码、反码、补码计算 以及取反(~)运算"></a>java 原码、反码、补码计算 以及取反(~)运算</h2><h3 id="1-原码、反码、补码："><a href="#1-原码、反码、补码：" class="headerlink" title="1.原码、反码、补码："></a>1.原码、反码、补码：</h3><ul><li>(1)在Java中，所有数据的表示方式都是以补码形式来表示</li><li>(2)正数：原码、反码、补码相同</li><li>(3)负数：符号位为1，其余各位是对原码取反，然后整个数加1</li><li>(4)~按位取反（反码加1称为补码。）步骤就是先求出这个数（因为java存的数是补码）的原码，然后对原码取反得到X，这个X就是我们要求的那个数的补码</li></ul><h3 id="2-取反-运算"><a href="#2-取反-运算" class="headerlink" title="2.取反(~)运算"></a>2.取反(~)运算</h3><pre><code> （1）n=37 ，二进制数就是 100101     因为在Java中，所有数据的表示方式都是以补码形式来表示，如果没有特别的说明， Java 中的数据类型默认为int，int数据类型的长度为8位，就是32字节，32bit的意思，因此，n=100101的原码=补码（因为是正数，所以原=补=反）运算过程就是： 原码：00000000 00000000 00000000 00100101 ＝37 ~n（对n的原码）取反运算得：  11111111 11111111 11111111 11011010很明显，最高位是1，意思是原码为负数，负数的补码是其绝对值的原码取反，末尾再加1，因此，我们可将这个二进制数的补码进行还原： 首先，末尾减1得反码：11111111 11111111 11111111 11011001 其次，将各位取反得原码：00000000 00000000 00000000 00100110这个就是~n的绝对值形式，|~n|=38   ， 所以，~n＝－38，这个就是Java虚拟机的运算结果 （2）n=-4，取反 （~-4） -4补码：10000000 00000000 00000000 00000100 -4反码：10000000 00000000 00000000 00000011 -4原码：11111111 11111111 11111111 11111100 对原码取反：00000000 00000000 00000000 00000011  （3） 因为是正数，所以补码等于原码等于反码=3，所以~-4=3</code></pre><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（1）介绍</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%881%EF%BC%89%E4%BB%8B%E7%BB%8D/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%881%EF%BC%89%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>Java不仅仅是一门编程语言，它还是一个由一系列计算机软件和规范组成的技术体系，这个技术体系提供了完整的用于软件开发和跨平台部署的支持环境，并广泛应用于嵌入式系统、移动终端、企业服务器、大型机等多种场合，如图1-1所示。时至今日，Java技术体系已经吸引了600多万软件开发者，这是全球最大的软件开发团队。使用Java的设备已经超过了45亿，其中包括8亿多台个人计算机、21亿部移动电话及其他手持设备、35亿个智能卡，以及大量机顶盒、导航系统和其他设备。</p><p>Java能获得如此广泛的认可，除了它拥有一门结构严谨、面向对象的编程语言之外，还有许多不可忽视的优点：它摆脱了硬件平台的束缚，实现了“一次编写，到处运行”的理想；它提供了一种相对安全的内存管理和访问机制，避免了绝大部分内存泄漏和指针越界问题；它实现了热点代码检测和运行时编译及优化，这使得Java应用能随着运行时间的增长而获得更高的性能；它有一套完善的应用程序接口，还有无数来自商业机构和开源社区的第三方类库来帮助用户实现各种各样的功能……Java带来的这些好处，让软件的开发效率得到了极大的提升。作为一名Java程序员，在编写程序时除了尽情发挥Java的各种优势外，还会情不自禁地想去了解和思考一下Java技术体系中这些优秀的技术特性是如何出现及怎样实现的。认识这些技术运行的本质，是自己思考“程序这样写好不好”的必要基础与前提。</p><h1 id="Java技术体系"><a href="#Java技术体系" class="headerlink" title="Java技术体系"></a>Java技术体系</h1><p>从广义上讲，Kotlin、Clojure、JRuby、Groovy等运行于Java虚拟机上的编程语言及其相关的程序都属于Java技术体系中的一员。如果仅从传统意义上来看，JCP官方[1]所定义的Java技术体系包括了以下几个组成部分：</p><ul><li>·Java程序设计语言</li><li>·各种硬件平台上的Java虚拟机实现</li><li>·Class文件格式</li><li>·Java类库API</li><li>·来自商业机构和开源社区的第三方Java类库</li></ul><p>我们可以把Java程序设计语言、Java虚拟机、Java类库这三部分统称为JDK（Java Development Kit），JDK是用于支持Java程序开发的最小环境，本书中为行文方便，在不产生歧义的地方常以JDK 来代指整个Java技术体系[2]。可以把Java类库API中的Java SE API子集[3]和Java虚拟机这两部分统称为JRE（Java Runtime Environment），JRE是支持Java程序运行的标准环境。图1-2展示了Java技术体系所包括的内容，以及JDK和JRE所涵盖的范围。以上是根据Java各个组成部分的功能来进行划分，如果按照技术所服务的领域来划分，或者按照技术关注的重点业务来划分的话，那Java技术体系可以分为以下四条主要的产品线：</p><ul><li>·Java Card：支持Java小程序（Applets）运行在小内存设备（如智能卡）上的平台。</li><li>·Java ME（Micro Edition）：支持Java程序运行在移动终端（手机、PDA）上的平台，对Java API有所精简，并加入了移动终端的针对性支持，这条产品线在JDK 6以前被称为J2ME。有一点读者请勿混淆，现在在智能手机上非常流行的、主要使用Java语言开发程序的Android并不属于Java ME。</li><li>·Java SE（Standard Edition）：支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核心API，这条产品线在JDK 6以前被称为J2SE。</li><li>·Java EE（Enterprise Edition）：支持使用多层架构的企业应用（如ERP、MIS、CRM应用）的Java平台，除了提供Java SE API外，还对其做了大量有针对性的扩充[4]，并提供了相关的部署支持，这条产品线在JDK 6以前被称为J2EE，在JDK 10以后被Oracle放弃，捐献给Eclipse基金会管理，此后被称为Jakarta EE。</li></ul><h1 id="Java发展史"><a href="#Java发展史" class="headerlink" title="Java发展史"></a>Java发展史</h1><p>从Java的第一个版本诞生到现在已经有二十余年的时间，白驹过隙，沧海桑田，转眼已过了四分之一个世纪，在图1-3所示的时间线里，我们看到JDK的版本已经发展到了JDK 13。这二十多年里诞生过无数与Java相关的产品、技术与标准。现在让我们走入时间隧道，从孕育Java语言的时代开始，再来回顾一下Java的发展轨迹和历史变迁。</p><p>1991年4月，由James Gosling博士领导的绿色计划（Green Project）开始启动，此计划最初的目标是开发一种能够在各种消费性电子产品（如机顶盒、冰箱、收音机等）上运行的程序架构。这个计划的产品就是Java语言的前身：Oak（得名于James Gosling办公室外的一棵橡树）。Oak当时在消费品市场上并不算成功，但随着1995年互联网潮流的兴起，Oak迅速找到了最适合自己发展的市场定位并蜕变成为Java语言。</p><p>1995年5月23日，Oak语言改名为Java，并且在SunWorld大会上正式发布Java 1.0版本。Java语言第一次提出了“Write Once，Run Anywhere”的口号。</p><p>1996年1月23日，JDK 1.0发布，Java语言有了第一个正式版本的运行环境。JDK 1.0提供了一个纯解释执行的Java虚拟机实现（Sun Classic VM）。JDK 1.0版本的代表技术包括：Java虚拟机、Applet、AWT等。</p><p>1996年4月，十个最主要的操作系统和计算机供应商声明将在其产品中嵌入Java技术。同年9月，已有大约8.3万个网页应用了Java技术来制作。在1996年5月底，Sun于美国旧金山举行了首届JavaOne大会，从此JavaOne成为全世界数百万Java语言开发者每年一度的技术盛会。</p><p>1997年2月19日，Sun公司发布了JDK 1.1，Java里许多最基础的技术支撑点（如JDBC等）都是在JDK 1.1版本中提出的，JDK 1.1版的技术代表有：JAR文件格式、JDBC、JavaBeans、RMI等。Java语言的语法也有了一定的增强，如内部类（Inner Class）和反射（Reflection）都是在这时候出现的。直到1999年4月8日，JDK 1.1一共发布了1.1.0至1.1.8这9个版本。从1.1.4以后，每个JDK版本都有一个属于自己的名字（工程代号），分别为：JDK 1.1.4-Sparkler（宝石）、JDK 1.1.5-Pumpkin（南瓜）、JDK 1.1.6-Abigail（阿比盖尔，女子名）、JDK 1.1.7-Brutus（布鲁图，古罗马政治家和将军）和JDK 1.1.8-Chelsea（切尔西，城市名）。</p><p>1998年12月4日，JDK迎来了一个里程碑式的重要版本：工程代号为Playground（竞技场）的JDK 1.2，Sun在这个版本中把Java技术体系拆分为三个方向，分别是面向桌面应用开发的J2SE（Java 2 Platform，Standard Edition）、面向企业级开发的J2EE（Java 2 Platform，Enterprise Edition）和面向手机等移动终端开发的J2ME（Java 2 Platform，Micro Edition）。在这个版本中出现的代表性技术非常多，如EJB、Java Plug-in、Java IDL、Swing等，并且这个版本中Java虚拟机第一次内置了JIT（Just In Time）即时编译器（JDK 1.2中曾并存过三个虚拟机，Classic VM、HotSpot VM和Exact VM，其中Exact VM只在Solaris平台出现过；后面两款虚拟机都是内置了JIT即时编译器的，而之前版本所带的Classic VM只能以外挂的形式使用即时编译器）。在语言和API层面上，Java添加了strictfp关键字，Java类库添加了现在Java编码之中极为常用的一系列Collections集合类等。在1999年3月和7月，分别有JDK 1.2.1和JDK 1.2.2两个小升级版本发布。</p><p>1999年4月27日，HotSpot虚拟机诞生。HotSpot最初由一家名为“Longview Techno-logies”的小公司开发，由于HotSpot的优异表现，这家公司在1997年被Sun公司收购。Hot-Spot虚拟机刚发布时是作为JDK 1.2的附加程序提供的，后来它成为JDK 1.3及之后所有JDK版本的默认Java虚拟机。</p><p>2000年5月8日，工程代号为Kestrel（美洲红隼）的JDK 1.3发布。相对于JDK 1.2，JDK 1.3的改进主要体现在Java类库上（如数学运算和新的Timer API等），JNDI服务从JDK 1.3开始被作为一项平台级服务提供（以前JNDI仅仅是一项扩展服务），使用CORBA IIOP来实现RMI的通信协议，等等。这个版本还对Java 2D做了很多改进，提供了大量新的Java 2D API，并且新添加了JavaSound类库。JDK1.3有1个修正版本JDK 1.3.1，工程代号为Ladybird（瓢虫），于2001年5月17日发布。自从JDK 1.3开始，Sun公司维持着稳定的研发节奏：大约每隔两年发布一个JDK的主版本，以动物命名，期间发布的各个修正版本则以昆虫作为工程代号。</p><p>2002年2月13日，JDK 1.4发布，工程代号为Merlin（灰背隼）。JDK 1.4是标志着Java真正走向成熟的一个版本，Compaq、Fujitsu、SAS、Symbian、IBM等著名公司都有参与功能规划，甚至实现自己独立发行的JDK 1.4。哪怕是在近二十年后的今天，仍然有一些主流应用能直接运行在JDK 1.4之上，或者继续发布能运行在1.4上的版本。JDK 1.4同样带来了很多新的技术特性，如正则表达式、异常链、NIO、日志类、XML解析器和XSLT转换器，等等。JDK 1.4有两个后续修正版：2002年9月16日发布的工程代号为Grasshopper（蚱蜢）的JDK 1.4.1与2003年6月26日发布的工程代号为Mantis（螳螂）的JDK 1.4.2。</p><p>2002年前后还发生了一件与Java没有直接关系，但事实上对Java的发展进程影响很大的事件，就是微软的.NET Framework发布。这个无论是技术实现还是目标用户上都与Java有很多相近之处的技术平台给Java带来了很多讨论、比较与竞争，.NET平台和Java平台之间声势浩大的孰优孰劣的论战到今天为止都仍然没有完全平息。</p><p>2004年9月30日，JDK 5发布，工程代号为Tiger（老虎）。Sun公司从这个版本开始放弃了谦逊的“JDK 1.x”的命名方式，将产品版本号修改成了“JDK x”[1]。从JDK 1.2以来，Java在语法层面上的变动一直很小，而JDK 5在Java语法易用性上做出了非常大的改进。如：自动装箱、泛型、动态注解、枚举、可变长参数、遍历循环（foreach循环）等语法特性都是在JDK 5中加入的。在虚拟机和API层面上，这个版本改进了Java的内存模型（Java Memory Model，JMM）、提供了java.util.concurrent并发包等。另外，JDK 5是官方声明可以支持Windows 9x操作系统的最后一个JDK版本。</p><p>2006年12月11日，JDK 6发布，工程代号为Mustang（野马）。在这个版本中，Sun公司终结了从JDK 1.2开始已经有八年历史的J2EE、J2SE、J2ME的产品线命名方式，启用Java EE 6、Java SE 6、Java ME 6的新命名来代替。JDK 6的改进包括：提供初步的动态语言支持（通过内置Mozilla JavaScript Rhino引擎实现）、提供编译期注解处理器和微型HTTP服务器API，等等。同时，这个版本对Java虚拟机内部做了大量改进，包括锁与同步、垃圾收集、类加载等方面的实现都有相当多的改动。</p><p>在2006年11月13日的JavaOne大会上，Sun公司宣布计划要把Java开源，在随后的一年多时间内，它陆续地将JDK的各个部分在GPLv2（GNU General Public License v2）协议下公开了源码，并建立了OpenJDK组织对这些源码进行独立管理。除了极少量的产权代码（Encumbered Code，这部分代码所有权不属于Sun公司，Sun本身也无权进行开源处理）外，OpenJDK几乎拥有了当时SunJDK 7的全部代码，OpenJDK的质量主管曾经表示在JDK 7中，SunJDK和OpenJDK除了代码文件头的版权注释之外，代码几乎是完全一样的，所以OpenJDK 7与SunJDK 7本质上就是同一套代码库出来的产品。</p><p>JDK 6发布以后，由于代码复杂性的增加、Java开源、开发JavaFX、世界经济危机及Oracle对Sun的收购案等原因，Sun公司在发展Java以外的事情上耗费了太多精力和资源，JDK的更新没有能够继续维持两年发布一个主版本的研发速度，这导致了JDK 6的生命周期异常的长，一共发布了211个更新升级补丁，最后的版本为Java SE 6 Update 211，于2018年10月18日发布。</p><p>2009年2月19日，工程代号为Dolphin（海豚）的JDK 7完成了其第一个里程碑版本。按照JDK 7最初的功能规划，一共会设置十个里程碑。最后一个里程碑版本原计划定于2010年9月9日结束，但由于各种原因，JDK 7最终无法按计划完成。从JDK 7最原始的功能清单来看，它本应是一个包含许多重要改进的JDK版本，其中规划的子项目都为Java业界翘首以盼，包括：</p><ul><li>·Lambda项目：支持Lambda表达式，支持函数式编程。</li><li>·Jigsaw项目：虚拟机层面的模块化支持。</li><li>·动态语言支持：Java是静态语言，为其他运行在Java虚拟机上的动态语言提供支持。</li><li>·Garbage-First收集器。</li><li>·Coin项目：Java语法细节进化。</li></ul><p>令人惋惜的是，在JDK 7开发期间，Sun公司相继在技术竞争和商业竞争中陷入泥潭，公司的股票市值跌至仅有高峰时期的3%，已无力推动JDK 7的研发工作按计划继续进行。为了尽快结束JDK 7长期跳票的问题，Oracle收购Sun公司后随即宣布马上实行“B计划”，大幅裁剪了JDK 7预定目标，以保证JDK 7的正式版能够于2011年7月28日准时发布。“B计划”的主要措施是把不能按时完成的Lambda项目、Jigsaw项目和Coin项目的部分改进延迟到JDK 8之中。最终，JDK 7包含的改进有：提供新的G1收集器（G1在发布时依然处于Experimental状态，直至2012年4月的Update 4中才正式商用）、加强对非Java语言的调用支持（JSR-292，这项特性在到JDK 11还有改动）、可并行的类加载架构等。Oracle公司接手了JDK开发工作以后，迅速展现出了完全不同于Sun时期的、极具商业化的处事风格。面对Java中使用最广泛而又一直免费的Java SE产品线，Oracle很快定义了一套新的Java SE Support[2]产品计划，把JDK的更新支持作为一项商业服务。JDK 7发布的前80个更新仍然免费面向所有用户提供，但后续的其他更新包，用户[3]只能从“将Java SE升级到Java SE Support”与“将JDK 7升级到最新版本”两个选项里挑一个。JDK 7计划维护至2022年，迄今（面向付费用户）已发布了超过两百个更新补丁，最新版本为JDK 7 Update 221。</p><p>对于JDK 7，还有一点值得提起的是，从JDK 7 Update 4起，Java SE的核心功能正式开始为Mac OS X操作系统提供支持，并在JDK 7 Update 6中达到所有功能与Mac OS X完全兼容的程度；同时，JDK 7 Update 6还对ARM指令集架构提供了支持。至此，官方提供的JDK可以运行于Windows（不含Windows 9x）、Linux、Solaris和Mac OS X操作系统上，支持ARM、x86、x86-64和SPARC指令集架构，JDK 7也是可以支持Windows XP操作系统的最后一个版本[4]。</p><p>2009年4月20日，Oracle宣布正式以74亿美元的价格收购市值曾超过2000亿美元的Sun公司，传奇的Sun Microsystems从此落幕成为历史，Java商标正式划归Oracle所有（Java语言本身并不属于哪间公司所有，它由JCP组织进行管理，尽管在JCP中Sun及后来的Oracle的话语权很大）。由于此前Oracle已经收购了另外一家大型的中间件企业BEA公司，当完成对Sun公司的收购之后，Oracle分别从BEA和Sun手中取得了世界三大商用虚拟机的其中两个：JRockit和HotSpot。当时Oracle宣布要在未来一至两年的时间内，把这两个优秀的Java虚拟机合二为一[5]。两者合并的结果只能说差强人意，JRockit的监控工具Java Mission Control被移植到了HotSpot，作为收费功能提供给购买了Java SE Advanced产品计划的用户，其他功能由于两者架构的差异性明显，HotSpot能够直接借鉴融合的功能寥寥无几[6]。</p><p>JDK 8的第一个正式版本原定于2013年9月发布，最终还是跳票到了2014年3月18日，尽管仍然是没有赶上正点，但比起JDK 7那种以年作为计时单位、直接把公司跳崩的研发状况已是大有改善。为了保证日后JDK研发能更顺利地进行，从JDK 8开始，Oracle启用JEP（JDK Enhancement Proposals）来定义和管理纳入新版JDK发布范围的功能特性。JDK 8提供了那些曾在JDK 7中规划过，但最终未能在JDK 7中完成的功能，主要包括：</p><ul><li><p>·JEP 126：对Lambda表达式的支持，这让Java语言拥有了流畅的函数式表达能力。</p></li><li><p>·JEP 104：内置Nashorn JavaScript引擎的支持。</p></li><li><p>·JEP 150：新的时间、日期API。</p></li><li><p>·JEP 122：彻底移除HotSpot的永久代。</p></li><li><p>·……</p></li></ul><p>“B计划”中原本说好的会在JDK 8提供的Jigsaw模块化功能再次被延期到了JDK 9，不得不说，即0使放到整个Java发展史里看，Jigsaw都能算是天字第一号的大坑。Java的模块化系统本身面临的技术挑战就很艰巨，从微软的DLL技术开始，到Java自己的JAR，再到.NET的Assembly，工程庞大起来都无一例外会陷入“模块地狱”[7]的困境之中，而Jigsaw面临的更大困难是厂商之间以标准话语权为目的，以技术为“找茬”手段的激烈竞争。原本JDK 9是计划在2016年发布的，但在2016年伊始，Oracle就宣布JDK 9肯定要延期至2017年，后来又连续经过了两次短时间的跳票，最终到2017年9月21日才得以艰难面世。后两次跳票的原因是以IBM和RedHat为首[8]的十三家企业在JCP执行委员会上联手否决了Oracle提出的Jigsaw作为Java模块化规范进入JDK 9发布范围的提案[9]。凭良心说，Java确实有模块化的刚需，不论是JDK自身（例如拆分出Java SE Embedded这样规模较小的产品）抑或是Java应用都需要用到模块化。这方面IBM本身就是各大Java发行厂商中做得最好的，它不仅让自家的JDK实现了高度模块化，还带头成立了OSGi联盟，制订了Java框架层面模块化的事实标准，所以它当然会想把OSGi推到Java规范里去争个“名份”，而不是被Jigsaw革掉“性命”。可是Oracle对此没有丝毫退让，不惜向JCP发去公开信[10]，直言如果提案最后无法通过，那Oracle将摒弃JSR专家组，独立发展带Jigsaw的Java版本，Java顿时面临如Python 2与Python3那般分裂的危机。</p><p>不论如何，经过前后六轮投票，经历桌上桌下的斗争与妥协，Java没有分裂，JDK 9总算是带着Jigsaw最终发布了，除了Jigsaw外，JDK 9还增强了若干工具（JS Shell、JLink、JHSDB等），整顿了HotSpot各个模块各自为战的日志系统，支持HTTP 2客户单API等91个JEP。</p><p>JDK 9发布后，Oracle随即宣布Java将会以持续交付的形式和更加敏捷的研发节奏向前推进，以后JDK将会在每年的3月和9月各发布一个大版本[11]，目的就是为避免众多功能特性被集中捆绑到一个JDK版本上而引发交付风险。这次改革确实从根源上解决了跳票问题，但也为Java的用户和发行商带来了颇大的压力，不仅程序员感慨“Java新版本还没开始用就已经过时了”，Oracle自己对着一堆JDK版本分支也在挠头，不知道该如何维护更新，该如何提供技术支持。Oracle的解决方案是顺理成章地终结掉“每个JDK版本最少维护三年”的优良传统，从此以后，每六个JDK大版本中才会被划出一个长期支持（Long Term Support，LTS）版，只有LTS版的JDK能够获得为期三年的支持和更新，普通版的JDK就只有短短六个月的生命周期。JDK 8和JDK 11会是LTS版，再下一个就到2021年发布的JDK 17了。</p><p>2018年3月20日，JDK 10如期发布，这版本的主要研发目标是内部重构，诸如统一源仓库、统一垃圾收集器接口、统一即时编译器接口（JVMCI在JDK 9已经有了，这里是引入新的Graal即时编译器）等，这些都将会是对未来Java发展大有裨益的改进，但对普通用户来说JDK 10的新特性就显得乏善可陈，毕竟它只包含了12个JEP，而且其中只有本地类型推断这一个编码端可见的改进。尽管JDK10可见的改进有限，但2018这一年Java圈丝毫不缺乏谈资，相继发生了几件与“金钱”相关的历史性大事件。首先是2018年3月27日，Android的Java侵权案有了最终判决，法庭裁定Google赔偿Oracle合计88亿美元，要知道2009年Oracle收购Sun也就只花了74亿，收购完成后随即就用Sun的专利把Google告上了法庭，经过Oracle法务部的几轮神操作，一场官司的赔偿让收购Sun公司等同免费。对此事Java技术圈多数吃瓜群众是站在Google这边的，认为Oracle这样做是自绝Java的发展前景，毕竟当年Android刚刚起步的时候可是Sun向Google抛去的橄榄枝，Android的流行也巩固了Java“第一编程语言”的行业地位。摒弃对企业的好恶情感，就事论事，Google采用Java的语法和API类库，开发出来的程序却不能运行在其他Java虚拟机之上，这事情无论怎样都是有违Java技术的精神原旨的，也肯定违反了Java的使用协议[12]。如果说Oracle控告Google“不厚道”，那当年微软用J++做了同样的事情（借用语法和API，但程序不兼容标准Java虚拟机），被Sun告到登报道歉，一边赔款一边割地，声明放弃J++语言和Windows平台上的内置虚拟机，这又该找谁说理去？按常理说Java刚给Oracle赚了88亿美金，该颇为受宠才对，可Oracle是典型只谈利益不讲情怀的公司，InfoWorld披露的一封Oracle高管邮件表明[13]，Java体系中被认为无法盈利也没有太多战略前景的部分会逐渐被“按计划报废”（Planned Obsolescence）。这事的第一刀落下是在2018年3月，Oracle正式宣告Java EE成为历史名词。虽然Java SE、Java EE和Java ME三条产品线里确实只有Java SE称得上成功，但Java EE毕竟无比辉煌过，现在其中还持有着JDBC、JMS、Servlet等使用极为广泛的基础组件，然而Oracle仍选择把它“扫地出门”，所有权直接赠送给Eclipse基金会，唯一的条件是以后不准再使用“Java”这个商标[14]，所以取而代之的将是Jakarta EE。</p><p>2018年10月，JavaOne 2018在旧金山举行，此前没有人想过这会是最后一届JavaOne大会，这个在1996年伴随着Java一同诞生、成长的开发者年度盛会，竟是Oracle下一个裁撤的对象[15]，此外还有Java Mission Control的开发团队，也在2018年6月被Oracle解散。</p><p>2018年9月25日，JDK 11发布，这是一个LTS版本的JDK，包含17个JEP，其中有ZGC这样的革命性的垃圾收集器出现，也有把JDK 10中的类型推断加入Lambda语法这种可见的改进，但都比不过它发布时爆出来的谣言轰动：“Java要开始收费啦！”</p><p>随着JDK 11发布，Oracle同时调整了JDK的授权许可证，里面包含了好几个动作。首先，Oracle从JDK 11起把以前的商业特性[16]全部开源给OpenJDK，这样OpenJDK 11和OracleJDK 11的代码和功能，在本质上就是完全相同的（官方原文是Essentially Identical）[17]。然后，Oracle宣布以后将会同时发行两个JDK：一个是以GPLv2+CE协议下由Oracle发行的OpenJDK（本书后面章节称其为Oracle OpenJDK），另一个是在新的OTN协议下发行的传统的OracleJDK，这两个JDK共享绝大部分源码，在功能上是几乎一样的[18]，核心差异是前者可以免费在开发、测试或生产环境中使用，但是只有半年时间的更新支持；后者个人依然可以免费使用，但若在生产环境中商用就必须付费，可以有三年时间的更新支持。如果说由此能得出“Java要收费”的结论，那是纯属标题党，最多只能说Oracle在迫使商业用户要么不断升级JDK的版本，要么就去购买商业支持[19]。</p><p>2019年2月，在JDK 12发布前夕，Oracle果然如之前宣布那样在六个月之后就放弃了对上一个版本OpenJDK的维护，RedHat同时从Oracle手上接过OpenJDK 8和OpenJDK 11的管理权利和维护职责[20]。Oracle不愿意在旧版本上继续耗费资源，而RedHat或者说它背后的IBM又乐意扩大自己在Java社区的影响力，这是一笔双赢的交易。RedHat代替Oracle成为JDK历史版本的维护者，应该有利于Java的持续稳定，但从技术发展角度来看，这并不能为Oracle领导Java社区的局面带来根本性的改变，毕竟要添加新的或实验性的功能，仅会针对Java的最新版本，而不会在旧版本上动手。</p><p>2019年3月20日，JDK 12发布，只包含8个JEP，其中主要有Switch表达式、Java微测试套件（JMH）等新功能，最引人注目的特性无疑是加入了由RedHat领导开发的Shen-andoah垃圾收集器。Shenandoah作为首个由非Oracle开发的垃圾收集器，其目标又与Oracle在JDK 11中发布的ZGC几乎完全一致，两者天生就存在竞争。Oracle马上用实际行动抵制了这个新收集器，在JDK 11发布时才说应尽可能保证OracleJDK和OpenJDK的兼容一致，转眼就在Oracle JDK 12里把Shenandoah的代码通过条件编译强行剔除掉，使其成为历史上唯一进入了OpenJDK发布清单，但在OracleJDK中无法使用的功能。</p><p>Oracle收购Sun是Java发展历史上一道明显的分界线。在Sun掌舵的前十几年里，Java获得巨大成功，同时也渐渐显露出来语言演进的缓慢与社区决策的老朽；而在Oracle主导Java后，引起竞争的同时也带来新的活力，Java发展的速度要显著高于Sun时代。Java的未来是继续向前、再攀高峰，还是由盛转衰、锋芒挫缩，你我拭目以待。</p><p>Java面临的危机挑战前所未有的艰巨，属于Java的未来也从未如此充满想象与可能。</p><hr><p>[1] Java从1.5版本开始，官方在正式文档与宣传上已经不再使用类似“JDK 1.5”的命名，只有程序员内<br>部使用的开发版本号（Developer Version，例如java-version的输出）中才继续沿用1.5、1.6、1.7这样的版本号，而公开版本号（Product Version）则是改为JDK 5.0、JDK 6、JDK 7的命名方式，JDK 5.0中“.0”的后缀从JDK 6起也被移除掉，本书为了行文统一，同样以JDK 5来指代JDK 5.0。<br>[2] 除了Java SE Support外，还有面向独立软件提供商的Java SE Advanced &amp; Suite产品线，差别是后者带有JMC等监控工具，详细内容可以参见本书第4章。<br>[3] 特指商业用户，个人使用仍然是可以免费获得这些更新包的。<br>[4] 这是官方的声明，而事实上直到JDK 8 Update 21之前在Windows XP上仍可正常运行。<br>[5] “HotRockit”项目的相关介绍：<a href="http://hirt.se/presentations/WhatToExpect.ppt%E3%80%82">http://hirt.se/presentations/WhatToExpect.ppt。</a><br>[6] 除了JMC和JFR，HotSpot用本地内存代替永久代实现方法区，支持本地内存使用情况追（NMT）等功能是从JRockit借鉴过来的。<br>[7] 来自于以前的“DLL Hell”，如果读者不清楚什么是模块地狱的话，打开你计算机的windows目录或者windows\system32目录就明白了。<br>[8] 其实就是以IBM为首，IBM一直与RedHat有密切合作，2018年IBM以340亿美元天价收购了RedHat。<br>[9] 投票记录：<a href="https://jcp.org/en/jsr/results?id=5959%E3%80%82">https://jcp.org/en/jsr/results?id=5959。</a><br>[10] 公开信：<a href="https://www.infoq.cn/article/2017/05/jigsaw-open-letter%E3%80%82">https://www.infoq.cn/article/2017/05/jigsaw-open-letter。</a><br>[11] 也改掉了在开发版号中1.7、1.8的命名，从JDK 10后将是年份加月份作为开发版本号，譬如18.3，即表示2018年3月的大版本。<br>[12] Oracle与Google的官司主要焦点在于Java API的版权问题，而不在程序是否能运行在标准Java虚拟机上。<br>[13] 资料来源：<a href="https://www.infoworld.com/article/2987529/insider-oracle-lost-interest-in-java.html%E3%80%82">https://www.infoworld.com/article/2987529/insider-oracle-lost-interest-in-java.html。</a><br>[14] 最大的争议点是Oracle要求包名中不能出现java字样，导致一堆javax.*开头的包一旦修改或添加新代码，就必须重新命名，这将让用到它们的代码都受到影响。资料来源：<a href="https://www.infoq.cn/article/2018/02/from-javaee-to-jakartaee%E3%80%82">https://www.infoq.cn/article/2018/02/from-javaee-to-jakartaee。</a><br>[15] Java One大会从2019年起停办，合并入Oracle CodeOne大会中。<br>[16] 需要使用+XX：+UnlockCommercialFeatures解锁的特性，包括JMC、JFR、NMT、AppCDS和ZGC等。<br>[17] 资料来源：<a href="https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later%E3%80%82">https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later。</a><br>[18] JDK 11中仅有的微小差别是OpenJDK少了几个Module（如JavaFX），且不提供安装包，以压缩包形式发行。但在JDK 12又产生了新的分歧，OpenJDK的Shenandoah垃圾收集器被排除在OracleJDK之外，详见第4章的相关内容。<br>[19] 这里的商业支持不限定于Oracle公司，如Azul ZingJDK、AdoptOpenJDK等都能提供商业支持。<br>[20] Red Hat此前已经是OpenJDK 6（自2013年起）和OpenJDK 7（自2015年起）的维护者。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>《深入理解Java虚拟机：JVM高级特性与最佳实践》周志明 第三版 </li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（2）开发环境搭建</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%882%EF%BC%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%882%EF%BC%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（3）对象和类</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%883%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%92%8C%E7%B1%BB/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%883%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%92%8C%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（4）基础语法</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%884%EF%BC%89%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%884%EF%BC%89%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（5）基本数据类型</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%885%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%885%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（6）变量</title>
      <link href="/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%886%EF%BC%89%E5%8F%98%E9%87%8F/"/>
      <url>/Blog/2018/06/30/Java%E5%9F%BA%E7%A1%80-%EF%BC%886%EF%BC%89%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java运算符</title>
      <link href="/Blog/2018/06/27/Java%E5%9F%BA%E7%A1%80-%EF%BC%887%EF%BC%89%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/Blog/2018/06/27/Java%E5%9F%BA%E7%A1%80-%EF%BC%887%EF%BC%89%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="java-原码、反码、补码计算-以及取反-运算"><a href="#java-原码、反码、补码计算-以及取反-运算" class="headerlink" title="java 原码、反码、补码计算 以及取反(~)运算"></a>java 原码、反码、补码计算 以及取反(~)运算</h2><h3 id="1-原码、反码、补码："><a href="#1-原码、反码、补码：" class="headerlink" title="1.原码、反码、补码："></a>1.原码、反码、补码：</h3><pre><code> (1)在Java中，所有数据的表示方式都是以补码形式来表示 (2)正数：原码、反码、补码相同 (3)负数：符号位为1，其余各位是对原码取反，然后整个数加1 (4)~按位取反（反码加1称为补码。）步骤就是先求出这个数（因为java存的数是补码）的原码，然后对原码取反得到X，这个X就是我们要求的那个数的补码</code></pre><h3 id="2-取反-运算"><a href="#2-取反-运算" class="headerlink" title="2.取反(~)运算"></a>2.取反(~)运算</h3><pre><code> （1）n=37 ，二进制数就是 100101 因为在Java中，所有数据的表示方式都是以补码形式来表示，如果没有特别的说明， Java 中的数据类型默认为int，int数据类型的长度为8位，就是32字节，32bit的意思，因此，n=100101的原码=补码（因为是正数，所以原=补=反）运算过程就是： 原码：00000000 00000000 00000000 00100101 ＝37 ~n（对n的原码）取反运算得：  11111111 11111111 11111111 11011010很明显，最高位是1，意思是原码为负数，负数的补码是其绝对值的原码取反，末尾再加1，因此，我们可将这个二进制数的补码进行还原： 首先，末尾减1得反码：11111111 11111111 11111111 11011001 其次，将各位取反得原码：00000000 00000000 00000000 00100110这个就是~n的绝对值形式，|~n|=38   ， 所以，~n＝－38，这个就是Java虚拟机的运算结果 （2）n=-4，取反 （~-4） -4补码：10000000 00000000 00000000 00000100 -4反码：10000000 00000000 00000000 00000011 -4原码：11111111 11111111 11111111 11111100 对原码取反：00000000 00000000 00000000 00000011  （3） 因为是正数，所以补码等于原码等于反码=3，所以~-4=3</code></pre><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础-（8）执行结构（顺序、循环、条件）</title>
      <link href="/Blog/2018/06/27/Java%E5%9F%BA%E7%A1%80-%EF%BC%888%EF%BC%89%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%84%EF%BC%88%E9%A1%BA%E5%BA%8F%E3%80%81%E5%BE%AA%E7%8E%AF%E3%80%81%E6%9D%A1%E4%BB%B6%EF%BC%89/"/>
      <url>/Blog/2018/06/27/Java%E5%9F%BA%E7%A1%80-%EF%BC%888%EF%BC%89%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%84%EF%BC%88%E9%A1%BA%E5%BA%8F%E3%80%81%E5%BE%AA%E7%8E%AF%E3%80%81%E6%9D%A1%E4%BB%B6%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="java-原码、反码、补码计算-以及取反-运算"><a href="#java-原码、反码、补码计算-以及取反-运算" class="headerlink" title="java 原码、反码、补码计算 以及取反(~)运算"></a>java 原码、反码、补码计算 以及取反(~)运算</h2><h3 id="1-原码、反码、补码："><a href="#1-原码、反码、补码：" class="headerlink" title="1.原码、反码、补码："></a>1.原码、反码、补码：</h3><pre><code> (1)在Java中，所有数据的表示方式都是以补码形式来表示 (2)正数：原码、反码、补码相同 (3)负数：符号位为1，其余各位是对原码取反，然后整个数加1 (4)~按位取反（反码加1称为补码。）步骤就是先求出这个数（因为java存的数是补码）的原码，然后对原码取反得到X，这个X就是我们要求的那个数的补码</code></pre><h3 id="2-取反-运算"><a href="#2-取反-运算" class="headerlink" title="2.取反(~)运算"></a>2.取反(~)运算</h3><pre><code> （1）n=37 ，二进制数就是 100101 因为在Java中，所有数据的表示方式都是以补码形式来表示，如果没有特别的说明， Java 中的数据类型默认为int，int数据类型的长度为8位，就是32字节，32bit的意思，因此，n=100101的原码=补码（因为是正数，所以原=补=反）运算过程就是： 原码：00000000 00000000 00000000 00100101 ＝37 ~n（对n的原码）取反运算得：  11111111 11111111 11111111 11011010很明显，最高位是1，意思是原码为负数，负数的补码是其绝对值的原码取反，末尾再加1，因此，我们可将这个二进制数的补码进行还原： 首先，末尾减1得反码：11111111 11111111 11111111 11011001 其次，将各位取反得原码：00000000 00000000 00000000 00100110这个就是~n的绝对值形式，|~n|=38   ， 所以，~n＝－38，这个就是Java虚拟机的运算结果 （2）n=-4，取反 （~-4） -4补码：10000000 00000000 00000000 00000100 -4反码：10000000 00000000 00000000 00000011 -4原码：11111111 11111111 11111111 11111100 对原码取反：00000000 00000000 00000000 00000011  （3） 因为是正数，所以补码等于原码等于反码=3，所以~-4=3</code></pre><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java运算符</title>
      <link href="/Blog/2018/06/27/%E9%93%BE%E6%8E%A5/"/>
      <url>/Blog/2018/06/27/%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="1-ViBE："><a href="#1-ViBE：" class="headerlink" title="1.ViBE："></a>1.ViBE：</h3><h3 id="2-SIFT"><a href="#2-SIFT" class="headerlink" title="2.SIFT"></a>2.SIFT</h3><pre><code> （2）n=-4，取反 （~-4） -4补码：10000000 00000000 00000000 00000100 -4反码：10000000 00000000 00000000 00000011 -4原码：11111111 11111111 11111111 11111100 对原码取反：00000000 00000000 00000000 00000011  （3） 因为是正数，所以补码等于原码等于反码=3，所以~-4=3</code></pre><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试</title>
      <link href="/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-Java/"/>
      <url>/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-Java/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h1 id="Java基础："><a href="#Java基础：" class="headerlink" title="Java基础："></a>Java基础：</h1><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><p>More info: <a href="https://hexo.io/docs/deployment.html">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试-操作系统</title>
      <link href="/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
      <url>/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h1 id="Java基础："><a href="#Java基础：" class="headerlink" title="Java基础："></a>Java基础：</h1><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><p>More info: <a href="https://hexo.io/docs/deployment.html">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试-算法与数据结构</title>
      <link href="/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h1 id="Java基础："><a href="#Java基础：" class="headerlink" title="Java基础："></a>Java基础：</h1><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><p>More info: <a href="https://hexo.io/docs/deployment.html">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试-计算机组成原理</title>
      <link href="/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
      <url>/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h1 id="Java基础："><a href="#Java基础：" class="headerlink" title="Java基础："></a>Java基础：</h1><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><p>More info: <a href="https://hexo.io/docs/deployment.html">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试-计算机网络</title>
      <link href="/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/Blog/2018/06/27/%E9%9D%A2%E8%AF%95-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h1 id="Java基础："><a href="#Java基础：" class="headerlink" title="Java基础："></a>Java基础：</h1><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><p>More info: <a href="https://hexo.io/docs/deployment.html">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章样式</title>
      <link href="/Blog/2018/06/27/%E6%96%87%E7%AB%A0%E6%A0%B7%E5%BC%8F/"/>
      <url>/Blog/2018/06/27/%E6%96%87%E7%AB%A0%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><p>小车正穿行在洛基山脉蜿蜒曲折的盘山公路上，克里朵托夫里维静静地看着窗外，发现车子每当行驶到无路的关头，路边都会出现一块交通指示牌：“前方转弯”或写着“注意急转弯”。而转过每一道弯道之后前方照例又是一片柳暗花明、豁然开朗。山路弯弯、峰回路转，“前方转弯”几个大字一次次冲击着他的眼球，也渐渐敲醒了他的心扉。原来不是路已到了尽头，而是该转弯了……路在脚下，更在心中，心随路转，心路常宽。学会转弯也是人生的智慧，因为挫折往往是转折，危机同时是转机。</p><h3 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h3><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br>$ hexo generate<br>$ hexo deploy<br>$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by y0n on 2017/4/18.</span><br><span class="hljs-comment"> * 1.编写一个代表地址的Address类，地址信息由国家，身份，城市，街道，邮编组成</span><br><span class="hljs-comment"> * 并可以返回完整的地址信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavaDay002_1</span> </span>&#123;<br>    String Country;<br>    String Identifiy;<br>    String City;<br>    String Street;<br>    String Stamp;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCountry</span><span class="hljs-params">(String country)</span> </span>&#123;<br>        Country = country;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setIdentifiy</span><span class="hljs-params">(String identifiy)</span> </span>&#123;<br>        Identifiy = identifiy;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCity</span><span class="hljs-params">(String city)</span> </span>&#123;<br>        City = city;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setStreet</span><span class="hljs-params">(String street)</span> </span>&#123;<br>        Street = street;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setStamp</span><span class="hljs-params">(String stamp)</span> </span>&#123;<br>        Stamp = stamp;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getCountry</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> Country;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getIdentifiy</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> Identifiy;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getCity</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> City;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getStreet</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> Street;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getStamp</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> Stamp;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String []args)</span></span><br><span class="hljs-function">    </span>&#123;<br>        JavaDay002_1 address = <span class="hljs-keyword">new</span> JavaDay002_1();<br>        address.setCountry(<span class="hljs-string">&quot;Chain&quot;</span>);<br>        address.setIdentifiy(<span class="hljs-string">&quot;Student&quot;</span>);<br>        address.setCity(<span class="hljs-string">&quot;Beijing&quot;</span>);<br>        address.setStreet(<span class="hljs-string">&quot;XinFuRoad&quot;</span>);<br>        address.setStamp(<span class="hljs-string">&quot;402310&quot;</span>);<br> <br>        System.out.println(<span class="hljs-string">&quot;地址：&quot;</span> +<br>                address.getCountry() + <span class="hljs-string">&quot;_&quot;</span> +<br>                address.getIdentifiy() + <span class="hljs-string">&quot;_&quot;</span> +<br>                address.getCity() + <span class="hljs-string">&quot;_&quot;</span> +<br>                address.getStreet() + <span class="hljs-string">&quot;_&quot;</span> +<br>                address.getStamp());<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by y0n on 2017/4/18.</span><br><span class="hljs-comment"> * 2.设计一个Dog类，有名字，颜色，年龄等属性，定义构造方法来初始化类的这些属性，</span><br><span class="hljs-comment"> * 定义方法输出Dog信息，编写应用程序使用Dog类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavaDay002_2</span> </span>&#123;<br> <br>    String strName;<br>    String strColor;<br>    String strAge;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">JavaDay002_2</span><span class="hljs-params">(String strName, String strColor, String strAge)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.strName = strName;<br>        <span class="hljs-keyword">this</span>.strColor = strColor;<br>        <span class="hljs-keyword">this</span>.strAge = strAge;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShowDog</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;此狗叫&quot;</span> + strName + <span class="hljs-string">&quot;,&quot;</span> + strColor + <span class="hljs-string">&quot;色,&quot;</span> + strAge + <span class="hljs-string">&quot;岁&quot;</span>);<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String []args)</span></span><br><span class="hljs-function">    </span>&#123;<br>        JavaDay002_2 Dog = <span class="hljs-keyword">new</span> JavaDay002_2(<span class="hljs-string">&quot;旺财&quot;</span>, <span class="hljs-string">&quot;白&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>);<br>        Dog.ShowDog();<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by y0n on 2017/4/18.</span><br><span class="hljs-comment"> * 3.定义一个数组，它可以存储一个矩形，三角形，圆形</span><br><span class="hljs-comment"> * 一个双精度数或一个整数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavaDay002_3</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Rectangle</span><span class="hljs-params">(<span class="hljs-keyword">int</span> length, <span class="hljs-keyword">int</span> wight)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> length * wight;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Trangle</span><span class="hljs-params">(<span class="hljs-keyword">int</span> aSide, <span class="hljs-keyword">int</span> bSide, <span class="hljs-keyword">int</span> cSide)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">int</span> s = (aSide + bSide + cSide) / <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">double</span> area = (<span class="hljs-keyword">double</span>) (s * (s - aSide) * (s - bSide) * (s - cSide));<br>        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">int</span>) Math.pow(area, <span class="hljs-number">0.5</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Round</span><span class="hljs-params">(<span class="hljs-keyword">int</span> redis)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">int</span>) (redis * redis * <span class="hljs-number">3.14</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">IntNumber</span><span class="hljs-params">(<span class="hljs-keyword">int</span> nNum)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> nNum;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String []args)</span></span><br><span class="hljs-function">    </span>&#123;<br>        JavaDay002_3 array = <span class="hljs-keyword">new</span> JavaDay002_3();<br> <br>        System.out.println(<span class="hljs-string">&quot;矩形：&quot;</span> + array.Rectangle(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br>                + <span class="hljs-string">&quot; 三角形：&quot;</span> + array.Trangle(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>)<br>                + <span class="hljs-string">&quot; 圆：&quot;</span> + array.Round(<span class="hljs-number">2</span>)<br>                + <span class="hljs-string">&quot; 整数：&quot;</span> + array.IntNumber(<span class="hljs-number">5</span>));<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Created by y0n on 2017/4/18.</span><br><span class="hljs-comment"> * 4.定义一个抽象类Shape，用类标示二维图形，</span><br><span class="hljs-comment"> * Shape具有抽象方法area和perimeter，分别用来计算形状的面积和周长，</span><br><span class="hljs-comment"> * 定义一些二维形状类(矩形，三角形，圆)</span><br><span class="hljs-comment"> * 这些类都是Shape类的子类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavaDay002_4</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">int</span> <span class="hljs-title">area</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">int</span> <span class="hljs-title">perimeter</span><span class="hljs-params">()</span></span>;<br>&#125;<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Rect</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JavaDay002_4</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">int</span> length;<br>    <span class="hljs-keyword">int</span> wight;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getLength</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> length;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLength</span><span class="hljs-params">(<span class="hljs-keyword">int</span> length)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.length = length;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getWight</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> wight;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setWight</span><span class="hljs-params">(<span class="hljs-keyword">int</span> wight)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.wight = wight;<br>    &#125;<br> <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">area</span><span class="hljs-params">()</span> </span>&#123;<br> <br>        <span class="hljs-keyword">return</span> length * wight;<br>    &#125;<br> <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">perimeter</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> (length + wight) * <span class="hljs-number">2</span>;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$con</span> = mysql_connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;321&quot;</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$con</span>)<br>  &#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Could not connect: &#x27;</span> . mysql_error());<br>  &#125;<br><br><span class="hljs-variable">$db_selected</span> = mysql_select_db(<span class="hljs-string">&quot;test_db&quot;</span>,<span class="hljs-variable">$con</span>);<br><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * from Person&quot;</span>;<br><span class="hljs-variable">$result</span> = mysql_query(<span class="hljs-variable">$sql</span>,<span class="hljs-variable">$con</span>);<br><br><span class="hljs-keyword">while</span> (<span class="hljs-variable">$property</span> = mysql_fetch_field(<span class="hljs-variable">$result</span>))<br>  &#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Field name: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;name . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Table name: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;table . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Default value: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;def . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Max length: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;max_length . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Not NULL: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;not_null . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>; <br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Primary Key: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;primary_key . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Unique Key: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;unique_key . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>; <br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Mutliple Key: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;multiple_key . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Numeric Field: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;numeric . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;BLOB: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;blob . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Field Type: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;type . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Unsigned: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;unsigned . <span class="hljs-string">&quot;&lt;br /&gt;&quot;</span>;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Zero-filled: &quot;</span> . <span class="hljs-variable">$property</span>-&gt;zerofill . <span class="hljs-string">&quot;&lt;br /&gt;&lt;br /&gt;&quot;</span>; <br>  &#125;<br><br>mysql_close(<span class="hljs-variable">$con</span>);<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br> <br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> time<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">myThread</span> (<span class="hljs-params">threading.Thread</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, threadID, name, counter</span>):</span><br>        threading.Thread.__init__(self)<br>        self.threadID = threadID<br>        self.name = name<br>        self.counter = counter<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Starting &quot;</span> + self.name<br>       <span class="hljs-comment"># 获得锁，成功获得锁定后返回True</span><br>       <span class="hljs-comment"># 可选的timeout参数不填时将一直阻塞直到获得锁定</span><br>       <span class="hljs-comment"># 否则超时后将返回False</span><br>        threadLock.acquire()<br>        print_time(self.name, self.counter, <span class="hljs-number">3</span>)<br>        <span class="hljs-comment"># 释放锁</span><br>        threadLock.release()<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_time</span>(<span class="hljs-params">threadName, delay, counter</span>):</span><br>    <span class="hljs-keyword">while</span> counter:<br>        time.sleep(delay)<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;%s: %s&quot;</span> % (threadName, time.ctime(time.time()))<br>        counter -= <span class="hljs-number">1</span><br> <br>threadLock = threading.Lock()<br>threads = []<br> <br><span class="hljs-comment"># 创建新线程</span><br>thread1 = myThread(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;Thread-1&quot;</span>, <span class="hljs-number">1</span>)<br>thread2 = myThread(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;Thread-2&quot;</span>, <span class="hljs-number">2</span>)<br> <br><span class="hljs-comment"># 开启新线程</span><br>thread1.start()<br>thread2.start()<br> <br><span class="hljs-comment"># 添加线程到线程列表</span><br>threads.append(thread1)<br>threads.append(thread2)<br> <br><span class="hljs-comment"># 等待所有线程完成</span><br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> threads:<br>    t.join()<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Exiting Main Thread&quot;</span><br><br></code></pre></td></tr></table></figure><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><code class="hljs html"><br><br><br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-cn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.googletagmanager.com/gtag/js?id=UA-878633-1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.dataLayer = <span class="hljs-built_in">window</span>.dataLayer || [];</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gtag</span>(<span class="hljs-params"></span>)</span>&#123;dataLayer.push(<span class="hljs-built_in">arguments</span>);&#125;</span><br><span class="javascript">  gtag(<span class="hljs-string">&#x27;js&#x27;</span>, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>());</span><br><br><span class="javascript">  gtag(<span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;UA-878633-1&#x27;</span>);</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;gbk&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;robots&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;all&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;author&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;w3school.com.cn&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/c5_20171220.css&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/png&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;16x16&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-16.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/png&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;32x32&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-32.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/png&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;48x48&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-48.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/png&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;96x96&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-96.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;96x96&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-96.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">&quot;144x144&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ui2017/logo-144.png&quot;</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HTML 测验<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;html&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;wrapper&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/index.html&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;w3school 在线教程&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left;&quot;</span>&gt;</span>w3school 在线教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;ad_head&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span>&lt;!--<br><span class="javascript">google_ad_client = <span class="hljs-string">&quot;pub-3381531532877742&quot;</span>;</span><br><span class="javascript"><span class="hljs-comment">/* 728x90, 创建于 08-12-1 */</span></span><br><span class="javascript">google_ad_slot = <span class="hljs-string">&quot;7423315034&quot;</span>;</span><br>google_ad_width = 728;<br>google_ad_height = 90;<br><span class="javascript"><span class="hljs-comment">//--&gt;</span></span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://pagead2.googlesyndication.com/pagead/show_ads.js&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;navfirst&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;menu&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;h&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/h.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 系列教程&quot;</span>&gt;</span>HTML 系列教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/b.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;浏览器脚本教程&quot;</span>&gt;</span>浏览器脚本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;s&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/s.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;服务器脚本教程&quot;</span>&gt;</span>服务器脚本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;d&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/d.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;ASP.NET 教程&quot;</span>&gt;</span>ASP.NET 教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;x&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/x.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;XML 系列教程&quot;</span>&gt;</span>XML 系列教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;ws&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/ws.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Web Services 系列教程&quot;</span>&gt;</span>Web Services 系列教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;w&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/w.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;建站手册&quot;</span>&gt;</span>建站手册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;navsecond&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;course&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML 基础教程<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 教程&quot;</span>&gt;</span>HTML 教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_jianjie.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 简介&quot;</span>&gt;</span>HTML 简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_editors.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 编辑器&quot;</span>&gt;</span>HTML 编辑器<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_basic.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 基础 - 四个实例&quot;</span>&gt;</span>HTML 基础<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_elements.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 元素&quot;</span>&gt;</span>HTML 元素<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_attributes.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 属性&quot;</span>&gt;</span>HTML 属性<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_headings.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 标题&quot;</span>&gt;</span>HTML 标题<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_paragraphs.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 段落&quot;</span>&gt;</span>HTML 段落<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_styles.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 样式 - CSS&quot;</span>&gt;</span>HTML 样式<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_formatting.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 文本格式化&quot;</span>&gt;</span>HTML 格式化<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML XHTML<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_xhtml.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;XHTML 简介&quot;</span>&gt;</span>XHTML 简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_xhtml_elements.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;XHTML - 元素&quot;</span>&gt;</span>XHTML 元素<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_xhtml_attributes.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;XHTML - 属性&quot;</span>&gt;</span>XHTML 属性<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_canvas.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 Canvas&quot;</span>&gt;</span>HTML5 画布<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_svg.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 内联 SVG&quot;</span>&gt;</span>HTML5 SVG<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_canvas_vs_svg.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 Canvas vs. SVG&quot;</span>&gt;</span>HTML5 画布 vs SVG<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML 媒体<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_media.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 多媒体&quot;</span>&gt;</span>HTML 媒体<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_object.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML Object 元素&quot;</span>&gt;</span>HTML 对象<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_audio.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 音频&quot;</span>&gt;</span>HTML 音频<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_video.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 视频&quot;</span>&gt;</span>HTML 视频<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML API<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_geolocation.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 地理定位&quot;</span>&gt;</span>HTML5 地理定位<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_draganddrop.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 拖放&quot;</span>&gt;</span>HTML5 拖放<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_webstorage.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 Web 存储&quot;</span>&gt;</span>HTML5 Web 存储<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_app_cache.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 5 应用程序缓存&quot;</span>&gt;</span>HTML5 应用缓存<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_webworkers.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 Web Workers&quot;</span>&gt;</span>HTML5 Web Workers<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html5_serversentevents.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 服务器发送事件&quot;</span>&gt;</span>HTML5 SSE<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>实例/测验/总结<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/example/html_examples.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 实例&quot;</span>&gt;</span>HTML 实例<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;currentLink&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_quiz.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 测验&quot;</span>&gt;</span>HTML 测验<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_summary.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 总结&quot;</span>&gt;</span>HTML 总结<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML 参考手册<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 4.01 / XHTML 1.0 参考手册&quot;</span>&gt;</span>HTML 标签列表<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_standardattributes.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 标准属性&quot;</span>&gt;</span>HTML 属性<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_eventattributes.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 事件属性&quot;</span>&gt;</span>HTML 事件<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_dtd.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 元素与合法的 Doctype&quot;</span>&gt;</span>HTML 合法 DTD<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_colornames.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 颜色名&quot;</span>&gt;</span>HTML 颜色名<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_charactersets.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 字符集&quot;</span>&gt;</span>HTML 字符集<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_ascii.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML ASCII 参考手册&quot;</span>&gt;</span>HTML ASCII<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_entities.html&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML ISO-8859-1 参考手册&quot;</span>&gt;</span>HTML ISO-8859-1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_symbols.html&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 4.01 符号实体&quot;</span>&gt;</span>HTML 符号<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_urlencode.html&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML URL 编码&quot;</span>&gt;</span>HTML URL 编码<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_language_codes.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 语言代码参考手册&quot;</span>&gt;</span>HTML 语言代码<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/html_ref_httpmessages.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 状态消息&quot;</span>&gt;</span>HTML 消息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>HTML5<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 教程&quot;</span>&gt;</span>HTML5 教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML5 参考手册&quot;</span>&gt;</span>HTML5 参考手册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selected&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>建站手册<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/site/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;网站构建&quot;</span>&gt;</span>网站构建<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/w3c/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;万维网联盟 (W3C)&quot;</span>&gt;</span>万维网联盟 (W3C)<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/browsers/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;浏览器信息&quot;</span>&gt;</span>浏览器信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/quality/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;网站品质&quot;</span>&gt;</span>网站品质<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/semweb/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;语义网&quot;</span>&gt;</span>语义网<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/careers/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;职业规划&quot;</span>&gt;</span>职业规划<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/hosting/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;网站主机&quot;</span>&gt;</span>网站主机<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/about/index.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;关于 W3School&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;link_about&quot;</span>&gt;</span>关于 W3School<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/about/about_helping.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;帮助 W3School&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;link_help&quot;</span>&gt;</span>帮助 W3School<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;maincontent&quot;</span>&gt;</span><br><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;intro&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>您可以通过 W3SCHOOL 的测验程序来测试您的 HTML 技能。<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>关于本测验<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>本测验包含 20 道题，每道题的最长答题时间是 20 分钟（这是由于每个 session 的默认有效时间是20钟）。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>本测验是非官方的测试，它仅仅提供了一个了解您对 HTML 的掌握程度的工具。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>测验会被记分<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>每道题的分值是 1 分。在您完成全部的 20 道题之后，系统会为您的测验打分，并提供您做错的题目的正确答案。其中，绿色为正确答案，而红色为错误答案。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/quiz/quiz.asp?quiz=html&quot;</span>&gt;</span>现在就开始测验<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>！祝您好运。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bpn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;prenext&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pre&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/example/html_examples.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 实例&quot;</span>&gt;</span>HTML 实例<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;next&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_summary.asp&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;HTML 总结&quot;</span>&gt;</span>HTML 总结<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:#fcfdf8; padding:0;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- W3School 正文底部广告位 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ins</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;adsbygoogle&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:inline-block;width:800px;height:250px&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">data-ad-client</span>=<span class="hljs-string">&quot;ca-pub-3381531532877742&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">data-ad-slot</span>=<span class="hljs-string">&quot;9384069314&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">(adsbygoogle = <span class="hljs-built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- maincontent end --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tools&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tools_reference&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/index.asp&quot;</span>&gt;</span>HTML 参考手册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tools_example&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/example/html_examples.asp&quot;</span>&gt;</span>HTML 实例<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tools_quiz&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/html/html_quiz.asp&quot;</span>&gt;</span>HTML 测验<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- wrapper end --&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章 </tag>
            
            <tag> 样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面朝大海，春暖花开</title>
      <link href="/Blog/2018/06/26/%E9%9D%A2%E6%9C%9D%E5%A4%A7%E6%B5%B7%EF%BC%8C%E6%98%A5%E6%9A%96%E8%8A%B1%E5%BC%80/"/>
      <url>/Blog/2018/06/26/%E9%9D%A2%E6%9C%9D%E5%A4%A7%E6%B5%B7%EF%BC%8C%E6%98%A5%E6%9A%96%E8%8A%B1%E5%BC%80/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  - <span class="hljs-built_in">type</span>: git<br>    repo: <span class="hljs-comment"># 像这样设置多个 git 仓库，`名称: 地址,分支`，逗号后面没有空格。</span><br>      github: git@github.com:XXXXXX/XXXXXX.git,branch<br>      coding: git@git.coding.net:XXXXXXX/XXXXXXX,coding-pages<br>    message: Site updated by Hexo at &#123;&#123; now(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) &#125;&#125;.<br>  - <span class="hljs-built_in">type</span>: rsync<br>    host: YOUR VPS IP <span class="hljs-comment"># 你的服务器的 IP 地址</span><br>    user: YOUR USERNAME <span class="hljs-comment"># 你刚刚复制密钥的那个用户</span><br>    root: YOUR DESTINATION <span class="hljs-comment"># 你想把文件上传到哪里，比如我的是 `~/stackharbor.alynx.xyz/`</span><br>    port: 22 <span class="hljs-comment"># 这是 ssh 默认的端口，如果你修改了，这里也要改</span><br>    args: --progress <span class="hljs-comment"># 额外的 rsync 参数，我这里添加了一个进度条参数，你也可以不设置</span><br>    delete: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否删除旧的文件</span><br>    verbose: <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否同步时显示详细状态</span><br>    ignore_errors: <span class="hljs-literal">false</span> <span class="hljs-comment"># 忽略错误</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 哈哈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/Blog/2018/06/26/Hello-World/"/>
      <url>/Blog/2018/06/26/Hello-World/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 默认 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/Blog/about/index.html"/>
      <url>/Blog/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/Blog/categories/index.html"/>
      <url>/Blog/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/Blog/tags/index.html"/>
      <url>/Blog/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
